ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Capsense.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	Capsense_csdStatusVar
  20              		.bss
  21              		.type	Capsense_csdStatusVar, %object
  22              		.size	Capsense_csdStatusVar, 1
  23              	Capsense_csdStatusVar:
  24 0000 00       		.space	1
  25              		.global	Capsense_sensorIndex
  26              		.type	Capsense_sensorIndex, %object
  27              		.size	Capsense_sensorIndex, 1
  28              	Capsense_sensorIndex:
  29 0001 00       		.space	1
  30              		.global	Capsense_sensorRaw
  31 0002 0000     		.align	2
  32              		.type	Capsense_sensorRaw, %object
  33              		.size	Capsense_sensorRaw, 2
  34              	Capsense_sensorRaw:
  35 0004 0000     		.space	2
  36              		.comm	Capsense_csdTrim1,1,1
  37              		.comm	Capsense_unscannedSnsDriveMode,1,4
  38              		.comm	Capsense_sensorEnableMaskBackup,1,4
  39              		.global	Capsense_sensorEnableMask
  40              		.data
  41              		.align	2
  42              		.type	Capsense_sensorEnableMask, %object
  43              		.size	Capsense_sensorEnableMask, 1
  44              	Capsense_sensorEnableMask:
  45 0000 01       		.byte	1
  46              		.global	Capsense_pcTable
  47 0001 000000   		.align	2
  48              		.type	Capsense_pcTable, %object
  49              		.size	Capsense_pcTable, 4
  50              	Capsense_pcTable:
  51 0004 08020440 		.word	1074004488
  52              		.global	Capsense_portTable
  53              		.section	.rodata
  54              		.align	2
  55              		.type	Capsense_portTable, %object
  56              		.size	Capsense_portTable, 1
  57              	Capsense_portTable:
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 2


  58 0000 02       		.byte	2
  59              		.global	Capsense_maskTable
  60 0001 000000   		.align	2
  61              		.type	Capsense_maskTable, %object
  62              		.size	Capsense_maskTable, 4
  63              	Capsense_maskTable:
  64 0004 02000000 		.word	2
  65              		.global	Capsense_pinShiftTbl
  66              		.align	2
  67              		.type	Capsense_pinShiftTbl, %object
  68              		.size	Capsense_pinShiftTbl, 1
  69              	Capsense_pinShiftTbl:
  70 0008 01       		.byte	1
  71              		.global	Capsense_modulationIDAC
  72              		.data
  73              		.align	2
  74              		.type	Capsense_modulationIDAC, %object
  75              		.size	Capsense_modulationIDAC, 1
  76              	Capsense_modulationIDAC:
  77 0008 33       		.byte	51
  78              		.global	Capsense_compensationIDAC
  79 0009 000000   		.align	2
  80              		.type	Capsense_compensationIDAC, %object
  81              		.size	Capsense_compensationIDAC, 1
  82              	Capsense_compensationIDAC:
  83 000c 33       		.byte	51
  84              		.global	Capsense_widgetResolution
  85 000d 000000   		.align	2
  86              		.type	Capsense_widgetResolution, %object
  87              		.size	Capsense_widgetResolution, 4
  88              	Capsense_widgetResolution:
  89 0010 0000FF03 		.word	67043328
  90              		.global	Capsense_senseClkDividerVal
  91              		.align	2
  92              		.type	Capsense_senseClkDividerVal, %object
  93              		.size	Capsense_senseClkDividerVal, 1
  94              	Capsense_senseClkDividerVal:
  95 0014 02       		.byte	2
  96              		.global	Capsense_sampleClkDividerVal
  97 0015 000000   		.align	2
  98              		.type	Capsense_sampleClkDividerVal, %object
  99              		.size	Capsense_sampleClkDividerVal, 1
 100              	Capsense_sampleClkDividerVal:
 101 0018 02       		.byte	2
 102              		.global	Capsense_widgetNumber
 103              		.section	.rodata
 104 0009 000000   		.align	2
 105              		.type	Capsense_widgetNumber, %object
 106              		.size	Capsense_widgetNumber, 1
 107              	Capsense_widgetNumber:
 108 000c 00       		.space	1
 109              		.global	Capsense_prtSelTbl
 110 000d 000000   		.align	2
 111              		.type	Capsense_prtSelTbl, %object
 112              		.size	Capsense_prtSelTbl, 28
 113              	Capsense_prtSelTbl:
 114 0010 00000240 		.word	1073872896
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 3


 115 0014 00010240 		.word	1073873152
 116 0018 00020240 		.word	1073873408
 117 001c 00030240 		.word	1073873664
 118 0020 00040240 		.word	1073873920
 119 0024 00050240 		.word	1073874176
 120 0028 00060240 		.word	1073874432
 121              		.global	Capsense_prtCfgTbl
 122              		.align	2
 123              		.type	Capsense_prtCfgTbl, %object
 124              		.size	Capsense_prtCfgTbl, 28
 125              	Capsense_prtCfgTbl:
 126 002c 08000440 		.word	1074003976
 127 0030 08010440 		.word	1074004232
 128 0034 08020440 		.word	1074004488
 129 0038 08030440 		.word	1074004744
 130 003c 08040440 		.word	1074005000
 131 0040 08050440 		.word	1074005256
 132 0044 08060440 		.word	1074005512
 133              		.global	Capsense_prtDRTbl
 134              		.align	2
 135              		.type	Capsense_prtDRTbl, %object
 136              		.size	Capsense_prtDRTbl, 28
 137              	Capsense_prtDRTbl:
 138 0048 00000440 		.word	1074003968
 139 004c 00010440 		.word	1074004224
 140 0050 00020440 		.word	1074004480
 141 0054 00030440 		.word	1074004736
 142 0058 00040440 		.word	1074004992
 143 005c 00050440 		.word	1074005248
 144 0060 00060440 		.word	1074005504
 145              		.section	.text.Capsense_Init,"ax",%progbits
 146              		.align	2
 147              		.global	Capsense_Init
 148              		.code	16
 149              		.thumb_func
 150              		.type	Capsense_Init, %function
 151              	Capsense_Init:
 152              	.LFB36:
 153              		.file 1 "Generated_Source\\PSoC4\\Capsense.c"
   1:Generated_Source\PSoC4/Capsense.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/Capsense.c **** * File Name: Capsense.c
   3:Generated_Source\PSoC4/Capsense.c **** * Version 2.60
   4:Generated_Source\PSoC4/Capsense.c **** *
   5:Generated_Source\PSoC4/Capsense.c **** * Description:
   6:Generated_Source\PSoC4/Capsense.c **** *  This file provides the source code for scanning APIs for the CapSense CSD
   7:Generated_Source\PSoC4/Capsense.c **** *  component.
   8:Generated_Source\PSoC4/Capsense.c **** *
   9:Generated_Source\PSoC4/Capsense.c **** * Note:
  10:Generated_Source\PSoC4/Capsense.c **** *
  11:Generated_Source\PSoC4/Capsense.c **** ********************************************************************************
  12:Generated_Source\PSoC4/Capsense.c **** * Copyright 2013-2016, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/Capsense.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/Capsense.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/Capsense.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/Capsense.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/Capsense.c **** 
  18:Generated_Source\PSoC4/Capsense.c **** #include "Capsense.h"
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 4


  19:Generated_Source\PSoC4/Capsense.c **** #include "Capsense_PVT.h"
  20:Generated_Source\PSoC4/Capsense.c **** #include "cypins.h"
  21:Generated_Source\PSoC4/Capsense.c **** #include "cyapicallbacks.h"
  22:Generated_Source\PSoC4/Capsense.c **** 
  23:Generated_Source\PSoC4/Capsense.c **** #if(0u != Capsense_CSHL_API_GENERATE)
  24:Generated_Source\PSoC4/Capsense.c ****     #include "Capsense_CSHL.h"
  25:Generated_Source\PSoC4/Capsense.c **** #endif /* (0u != Capsense_CSHL_API_GENERATE) */
  26:Generated_Source\PSoC4/Capsense.c **** 
  27:Generated_Source\PSoC4/Capsense.c **** /* This definition is intended to prevent unexpected linker error.
  28:Generated_Source\PSoC4/Capsense.c ****    For more details please see the IAR Technical Note 49981 */
  29:Generated_Source\PSoC4/Capsense.c **** #if defined(__ICCARM__)
  30:Generated_Source\PSoC4/Capsense.c ****     extern void Capsense_EnableSensor(uint32 sensor);
  31:Generated_Source\PSoC4/Capsense.c ****     extern void Capsense_DisableSensor(uint32 sensor);
  32:Generated_Source\PSoC4/Capsense.c **** #endif /* (__ICCARM__) */
  33:Generated_Source\PSoC4/Capsense.c **** 
  34:Generated_Source\PSoC4/Capsense.c **** /* SmartSense functions */
  35:Generated_Source\PSoC4/Capsense.c **** #if (Capsense_TUNING_METHOD == Capsense__TUNING_AUTO)
  36:Generated_Source\PSoC4/Capsense.c ****     uint8 Capsense_lowLevelTuningDone = 0u;
  37:Generated_Source\PSoC4/Capsense.c ****     uint8 Capsense_scanSpeedTbl[((Capsense_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u];
  38:Generated_Source\PSoC4/Capsense.c **** #endif /* (Capsense_TUNING_METHOD == Capsense__TUNING_AUTO) */
  39:Generated_Source\PSoC4/Capsense.c **** 
  40:Generated_Source\PSoC4/Capsense.c **** #if(Capsense_PRS_OPTIONS != Capsense__PRS_NONE)
  41:Generated_Source\PSoC4/Capsense.c ****     uint8 Capsense_prescalersTuningDone = 0u;
  42:Generated_Source\PSoC4/Capsense.c **** #endif /* (Capsense_PRS_OPTIONS == Capsense__PRS_NONE) */
  43:Generated_Source\PSoC4/Capsense.c **** 
  44:Generated_Source\PSoC4/Capsense.c **** /* Global software variables */
  45:Generated_Source\PSoC4/Capsense.c **** volatile uint8 Capsense_csdStatusVar = 0u;   /* CapSense CSD status, variable */
  46:Generated_Source\PSoC4/Capsense.c **** volatile uint8 Capsense_sensorIndex = 0u;    /* Index of scannig sensor */
  47:Generated_Source\PSoC4/Capsense.c **** 
  48:Generated_Source\PSoC4/Capsense.c **** /* Global array of Raw Counts */
  49:Generated_Source\PSoC4/Capsense.c **** uint16 Capsense_sensorRaw[Capsense_TOTAL_SENSOR_COUNT] = {0u};
  50:Generated_Source\PSoC4/Capsense.c **** 
  51:Generated_Source\PSoC4/Capsense.c **** /* Backup variables for trim registers*/
  52:Generated_Source\PSoC4/Capsense.c **** #if (Capsense_IDAC1_POLARITY == Capsense__IDAC_SINK)
  53:Generated_Source\PSoC4/Capsense.c ****     uint8 Capsense_csdTrim2;
  54:Generated_Source\PSoC4/Capsense.c **** #else
  55:Generated_Source\PSoC4/Capsense.c ****     uint8 Capsense_csdTrim1;
  56:Generated_Source\PSoC4/Capsense.c **** #endif /* (Capsense_IDAC1_POLARITY == Capsense__IDAC_SINK) */
  57:Generated_Source\PSoC4/Capsense.c **** 
  58:Generated_Source\PSoC4/Capsense.c **** /* Global array of un-scanned sensors state */
  59:Generated_Source\PSoC4/Capsense.c **** uint8 Capsense_unscannedSnsDriveMode[Capsense_PORT_PIN_CONFIG_TBL_ZISE];
  60:Generated_Source\PSoC4/Capsense.c **** 
  61:Generated_Source\PSoC4/Capsense.c **** /* Backup array for Capsense_sensorEnableMask */
  62:Generated_Source\PSoC4/Capsense.c **** uint8 Capsense_sensorEnableMaskBackup[(((Capsense_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)];
  63:Generated_Source\PSoC4/Capsense.c **** 
  64:Generated_Source\PSoC4/Capsense.c **** /* Configured constants and arrays by Customizer */
  65:Generated_Source\PSoC4/Capsense.c **** uint8 Capsense_sensorEnableMask[(((Capsense_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)] = {
  66:Generated_Source\PSoC4/Capsense.c **** 0x1u, };
  67:Generated_Source\PSoC4/Capsense.c **** 
  68:Generated_Source\PSoC4/Capsense.c **** reg32 * Capsense_pcTable[] = {
  69:Generated_Source\PSoC4/Capsense.c ****     (reg32 *)Capsense_Sns__Button0__BTN__PC, 
  70:Generated_Source\PSoC4/Capsense.c **** };
  71:Generated_Source\PSoC4/Capsense.c **** 
  72:Generated_Source\PSoC4/Capsense.c **** const uint8 Capsense_portTable[] = {
  73:Generated_Source\PSoC4/Capsense.c ****     Capsense_Sns__Button0__BTN__PORT, 
  74:Generated_Source\PSoC4/Capsense.c **** };
  75:Generated_Source\PSoC4/Capsense.c **** 
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 5


  76:Generated_Source\PSoC4/Capsense.c **** const uint32 Capsense_maskTable[] = {
  77:Generated_Source\PSoC4/Capsense.c ****     Capsense_Sns__Button0__BTN__MASK, 
  78:Generated_Source\PSoC4/Capsense.c **** };
  79:Generated_Source\PSoC4/Capsense.c **** 
  80:Generated_Source\PSoC4/Capsense.c **** const uint8 Capsense_pinShiftTbl[] = {
  81:Generated_Source\PSoC4/Capsense.c ****     (uint8) Capsense_Sns__Button0__BTN__SHIFT, 
  82:Generated_Source\PSoC4/Capsense.c **** };
  83:Generated_Source\PSoC4/Capsense.c **** 
  84:Generated_Source\PSoC4/Capsense.c **** uint8 Capsense_modulationIDAC[Capsense_TOTAL_SENSOR_COUNT] = {
  85:Generated_Source\PSoC4/Capsense.c ****     51u, 
  86:Generated_Source\PSoC4/Capsense.c **** };
  87:Generated_Source\PSoC4/Capsense.c **** uint8 Capsense_compensationIDAC[Capsense_TOTAL_SENSOR_COUNT] = {
  88:Generated_Source\PSoC4/Capsense.c ****     51u, 
  89:Generated_Source\PSoC4/Capsense.c **** };
  90:Generated_Source\PSoC4/Capsense.c **** 
  91:Generated_Source\PSoC4/Capsense.c **** uint32 Capsense_widgetResolution[Capsense_RESOLUTIONS_TBL_SIZE] = {
  92:Generated_Source\PSoC4/Capsense.c ****     Capsense_RESOLUTION_10_BITS,
  93:Generated_Source\PSoC4/Capsense.c **** };
  94:Generated_Source\PSoC4/Capsense.c **** 
  95:Generated_Source\PSoC4/Capsense.c **** uint8 Capsense_senseClkDividerVal[Capsense_TOTAL_SCANSLOT_COUNT] = {
  96:Generated_Source\PSoC4/Capsense.c ****     2u, 
  97:Generated_Source\PSoC4/Capsense.c **** };
  98:Generated_Source\PSoC4/Capsense.c **** uint8 Capsense_sampleClkDividerVal[Capsense_TOTAL_SCANSLOT_COUNT] = {
  99:Generated_Source\PSoC4/Capsense.c ****     2u, 
 100:Generated_Source\PSoC4/Capsense.c **** };
 101:Generated_Source\PSoC4/Capsense.c **** 
 102:Generated_Source\PSoC4/Capsense.c **** 
 103:Generated_Source\PSoC4/Capsense.c **** const uint8 Capsense_widgetNumber[Capsense_TOTAL_SENSOR_COUNT] = {
 104:Generated_Source\PSoC4/Capsense.c ****     0u, /* Button0__BTN */
 105:Generated_Source\PSoC4/Capsense.c **** };
 106:Generated_Source\PSoC4/Capsense.c **** 
 107:Generated_Source\PSoC4/Capsense.c **** reg32* const Capsense_prtSelTbl[Capsense_CFG_REG_TBL_SIZE] = {
 108:Generated_Source\PSoC4/Capsense.c ****     ((reg32 *) CYREG_HSIOM_PORT_SEL0),
 109:Generated_Source\PSoC4/Capsense.c ****     ((reg32 *) CYREG_HSIOM_PORT_SEL1),
 110:Generated_Source\PSoC4/Capsense.c ****     ((reg32 *) CYREG_HSIOM_PORT_SEL2),
 111:Generated_Source\PSoC4/Capsense.c ****     ((reg32 *) CYREG_HSIOM_PORT_SEL3),
 112:Generated_Source\PSoC4/Capsense.c ****     ((reg32 *) CYREG_HSIOM_PORT_SEL4),
 113:Generated_Source\PSoC4/Capsense.c ****     ((reg32 *) CYREG_HSIOM_PORT_SEL5),
 114:Generated_Source\PSoC4/Capsense.c ****     ((reg32 *) CYREG_HSIOM_PORT_SEL6),
 115:Generated_Source\PSoC4/Capsense.c **** };
 116:Generated_Source\PSoC4/Capsense.c **** 
 117:Generated_Source\PSoC4/Capsense.c **** reg32* const Capsense_prtCfgTbl[Capsense_CFG_REG_TBL_SIZE] = {
 118:Generated_Source\PSoC4/Capsense.c ****     ((reg32 *) CYREG_GPIO_PRT0_PC),
 119:Generated_Source\PSoC4/Capsense.c ****     ((reg32 *) CYREG_GPIO_PRT1_PC),
 120:Generated_Source\PSoC4/Capsense.c ****     ((reg32 *) CYREG_GPIO_PRT2_PC),
 121:Generated_Source\PSoC4/Capsense.c ****     ((reg32 *) CYREG_GPIO_PRT3_PC),
 122:Generated_Source\PSoC4/Capsense.c ****     ((reg32 *) CYREG_GPIO_PRT4_PC),
 123:Generated_Source\PSoC4/Capsense.c ****     ((reg32 *) CYREG_GPIO_PRT5_PC),
 124:Generated_Source\PSoC4/Capsense.c ****     ((reg32 *) CYREG_GPIO_PRT6_PC),
 125:Generated_Source\PSoC4/Capsense.c **** };
 126:Generated_Source\PSoC4/Capsense.c **** 
 127:Generated_Source\PSoC4/Capsense.c **** reg32* const Capsense_prtDRTbl[Capsense_CFG_REG_TBL_SIZE] = {
 128:Generated_Source\PSoC4/Capsense.c ****     ((reg32 *) CYREG_GPIO_PRT0_DR),
 129:Generated_Source\PSoC4/Capsense.c ****     ((reg32 *) CYREG_GPIO_PRT1_DR),
 130:Generated_Source\PSoC4/Capsense.c ****     ((reg32 *) CYREG_GPIO_PRT2_DR),
 131:Generated_Source\PSoC4/Capsense.c ****     ((reg32 *) CYREG_GPIO_PRT3_DR),
 132:Generated_Source\PSoC4/Capsense.c ****     ((reg32 *) CYREG_GPIO_PRT4_DR),
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 6


 133:Generated_Source\PSoC4/Capsense.c ****     ((reg32 *) CYREG_GPIO_PRT5_DR),
 134:Generated_Source\PSoC4/Capsense.c ****     ((reg32 *) CYREG_GPIO_PRT6_DR),
 135:Generated_Source\PSoC4/Capsense.c **** };
 136:Generated_Source\PSoC4/Capsense.c **** 
 137:Generated_Source\PSoC4/Capsense.c **** 
 138:Generated_Source\PSoC4/Capsense.c **** 
 139:Generated_Source\PSoC4/Capsense.c **** /*******************************************************************************
 140:Generated_Source\PSoC4/Capsense.c **** * Function Name: Capsense_Init
 141:Generated_Source\PSoC4/Capsense.c **** ********************************************************************************
 142:Generated_Source\PSoC4/Capsense.c **** *
 143:Generated_Source\PSoC4/Capsense.c **** * Summary:
 144:Generated_Source\PSoC4/Capsense.c **** *  API initializes default CapSense configuration provided by the customizer that defines
 145:Generated_Source\PSoC4/Capsense.c **** *  the mode of component operations and resets all the sensors to an inactive state.
 146:Generated_Source\PSoC4/Capsense.c **** *
 147:Generated_Source\PSoC4/Capsense.c **** * Parameters:
 148:Generated_Source\PSoC4/Capsense.c **** *  None
 149:Generated_Source\PSoC4/Capsense.c **** *
 150:Generated_Source\PSoC4/Capsense.c **** * Return:
 151:Generated_Source\PSoC4/Capsense.c **** *  None
 152:Generated_Source\PSoC4/Capsense.c **** *
 153:Generated_Source\PSoC4/Capsense.c **** * Global Variables:
 154:Generated_Source\PSoC4/Capsense.c **** *  Capsense_immunityIndex - defines immunity level.
 155:Generated_Source\PSoC4/Capsense.c **** *
 156:Generated_Source\PSoC4/Capsense.c **** * Side Effects:
 157:Generated_Source\PSoC4/Capsense.c **** *  None
 158:Generated_Source\PSoC4/Capsense.c **** *
 159:Generated_Source\PSoC4/Capsense.c **** *******************************************************************************/
 160:Generated_Source\PSoC4/Capsense.c **** void Capsense_Init(void)
 161:Generated_Source\PSoC4/Capsense.c **** {
 154              		.loc 1 161 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 8
 157              		@ frame_needed = 1, uses_anonymous_args = 0
 158 0000 80B5     		push	{r7, lr}
 159              		.cfi_def_cfa_offset 8
 160              		.cfi_offset 7, -8
 161              		.cfi_offset 14, -4
 162 0002 82B0     		sub	sp, sp, #8
 163              		.cfi_def_cfa_offset 16
 164 0004 00AF     		add	r7, sp, #0
 165              		.cfi_def_cfa_register 7
 162:Generated_Source\PSoC4/Capsense.c ****     uint32 curSensor;
 163:Generated_Source\PSoC4/Capsense.c **** 
 164:Generated_Source\PSoC4/Capsense.c ****     #if(Capsense_IS_SHIELD_ENABLE)
 165:Generated_Source\PSoC4/Capsense.c **** 
 166:Generated_Source\PSoC4/Capsense.c ****         #if((Capsense_CSH_TANK_PREGARGE_OPTION == Capsense__CAPPRIOBUF) || (0u != Capsense_CSH_TANK
 167:Generated_Source\PSoC4/Capsense.c ****             uint32 newRegValue;
 168:Generated_Source\PSoC4/Capsense.c **** 
 169:Generated_Source\PSoC4/Capsense.c ****             newRegValue = Capsense_CTANK_CONNECTION_REG;
 170:Generated_Source\PSoC4/Capsense.c ****             newRegValue &= ~(Capsense_CSD_CTANK_CONNECTION_MASK);
 171:Generated_Source\PSoC4/Capsense.c ****             newRegValue |= Capsense_CSD_CTANK_TO_AMUXBUS_B;
 172:Generated_Source\PSoC4/Capsense.c ****             Capsense_CTANK_CONNECTION_REG = newRegValue;
 173:Generated_Source\PSoC4/Capsense.c **** 
 174:Generated_Source\PSoC4/Capsense.c ****             #if(Capsense_CSH_TANK_PREGARGE_OPTION == Capsense__CAPPRIOBUF)
 175:Generated_Source\PSoC4/Capsense.c ****                 newRegValue = Capsense_CTANK_PORT_PC_REG;
 176:Generated_Source\PSoC4/Capsense.c ****                 newRegValue &= ~(Capsense_CSD_CTANK_PC_MASK);
 177:Generated_Source\PSoC4/Capsense.c ****                 newRegValue |= Capsense_CTANK_PC_STRONG_MODE;
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 7


 178:Generated_Source\PSoC4/Capsense.c ****                 Capsense_CTANK_PORT_PC_REG = newRegValue;
 179:Generated_Source\PSoC4/Capsense.c **** 
 180:Generated_Source\PSoC4/Capsense.c ****                 newRegValue = Capsense_CTANK_PORT_DR_REG;
 181:Generated_Source\PSoC4/Capsense.c ****                 newRegValue &= ~(Capsense_CTANK_DR_MASK);
 182:Generated_Source\PSoC4/Capsense.c ****                 newRegValue |= Capsense_CTANK_DR_CONFIG;
 183:Generated_Source\PSoC4/Capsense.c ****                 Capsense_CTANK_PORT_DR_REG = newRegValue;
 184:Generated_Source\PSoC4/Capsense.c ****             #endif /* (Capsense_CSH_TANK_PREGARGE_OPTION == Capsense__CAPPRIOBUF) */
 185:Generated_Source\PSoC4/Capsense.c **** 
 186:Generated_Source\PSoC4/Capsense.c ****         #endif /* ((Capsense_CSH_TANK_PREGARGE_OPTION == Capsense__CAPPRIOBUF) || (Capsense_CSH_TAN
 187:Generated_Source\PSoC4/Capsense.c **** 
 188:Generated_Source\PSoC4/Capsense.c ****         Capsense_EnableShieldElectrode((uint32)Capsense_SHIELD_PIN_NUMBER, (uint32)Capsense_SHIELD_
 189:Generated_Source\PSoC4/Capsense.c **** 
 190:Generated_Source\PSoC4/Capsense.c ****     #endif /* (Capsense_IS_SHIELD_ENABLE) */
 191:Generated_Source\PSoC4/Capsense.c **** 
 192:Generated_Source\PSoC4/Capsense.c ****     for(curSensor = 0u; curSensor < Capsense_TOTAL_SENSOR_COUNT; curSensor++)
 166              		.loc 1 192 0
 167 0006 0023     		movs	r3, #0
 168 0008 7B60     		str	r3, [r7, #4]
 169 000a 07E0     		b	.L2
 170              	.L3:
 193:Generated_Source\PSoC4/Capsense.c ****     {
 194:Generated_Source\PSoC4/Capsense.c ****         Capsense_SetUnscannedSensorState(curSensor, Capsense_CONNECT_INACTIVE_SNS);
 171              		.loc 1 194 0 discriminator 3
 172 000c 7B68     		ldr	r3, [r7, #4]
 173 000e 0021     		movs	r1, #0
 174 0010 1800     		movs	r0, r3
 175 0012 FFF7FEFF 		bl	Capsense_SetUnscannedSensorState
 192:Generated_Source\PSoC4/Capsense.c ****     {
 176              		.loc 1 192 0 discriminator 3
 177 0016 7B68     		ldr	r3, [r7, #4]
 178 0018 0133     		adds	r3, r3, #1
 179 001a 7B60     		str	r3, [r7, #4]
 180              	.L2:
 192:Generated_Source\PSoC4/Capsense.c ****     {
 181              		.loc 1 192 0 is_stmt 0 discriminator 1
 182 001c 7B68     		ldr	r3, [r7, #4]
 183 001e 002B     		cmp	r3, #0
 184 0020 F4D0     		beq	.L3
 195:Generated_Source\PSoC4/Capsense.c ****     }
 196:Generated_Source\PSoC4/Capsense.c **** 
 197:Generated_Source\PSoC4/Capsense.c ****     Capsense_CsdHwBlockInit();
 185              		.loc 1 197 0 is_stmt 1
 186 0022 FFF7FEFF 		bl	Capsense_CsdHwBlockInit
 198:Generated_Source\PSoC4/Capsense.c ****     Capsense_SetShieldDelay(Capsense_SHIELD_DELAY );
 187              		.loc 1 198 0
 188 0026 0020     		movs	r0, #0
 189 0028 FFF7FEFF 		bl	Capsense_SetShieldDelay
 199:Generated_Source\PSoC4/Capsense.c **** 
 200:Generated_Source\PSoC4/Capsense.c ****     /* Clear all sensors */
 201:Generated_Source\PSoC4/Capsense.c ****     Capsense_ClearSensors();
 190              		.loc 1 201 0
 191 002c FFF7FEFF 		bl	Capsense_ClearSensors
 202:Generated_Source\PSoC4/Capsense.c **** }
 192              		.loc 1 202 0
 193 0030 C046     		nop
 194 0032 BD46     		mov	sp, r7
 195 0034 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 8


 196              		@ sp needed
 197 0036 80BD     		pop	{r7, pc}
 198              		.cfi_endproc
 199              	.LFE36:
 200              		.size	Capsense_Init, .-Capsense_Init
 201              		.section	.text.Capsense_CsdHwBlockInit,"ax",%progbits
 202              		.align	2
 203              		.global	Capsense_CsdHwBlockInit
 204              		.code	16
 205              		.thumb_func
 206              		.type	Capsense_CsdHwBlockInit, %function
 207              	Capsense_CsdHwBlockInit:
 208              	.LFB37:
 203:Generated_Source\PSoC4/Capsense.c **** 
 204:Generated_Source\PSoC4/Capsense.c **** /*******************************************************************************
 205:Generated_Source\PSoC4/Capsense.c **** * Function Name: Capsense_CsdHwBlockInit
 206:Generated_Source\PSoC4/Capsense.c **** ********************************************************************************
 207:Generated_Source\PSoC4/Capsense.c **** *
 208:Generated_Source\PSoC4/Capsense.c **** * Summary:
 209:Generated_Source\PSoC4/Capsense.c **** *  Initialises the hardware parameters of the CSD block
 210:Generated_Source\PSoC4/Capsense.c **** *
 211:Generated_Source\PSoC4/Capsense.c **** * Parameters:
 212:Generated_Source\PSoC4/Capsense.c **** *  None
 213:Generated_Source\PSoC4/Capsense.c **** *
 214:Generated_Source\PSoC4/Capsense.c **** * Return:
 215:Generated_Source\PSoC4/Capsense.c **** *  None
 216:Generated_Source\PSoC4/Capsense.c **** *
 217:Generated_Source\PSoC4/Capsense.c **** * Global Variables:
 218:Generated_Source\PSoC4/Capsense.c **** *  Capsense_csdTrim1 - Contains IDAC trim register value for Sourcing Mode.
 219:Generated_Source\PSoC4/Capsense.c **** *  Capsense_csdTrim2 - Contains IDAC trim register value for Sinking Mode.
 220:Generated_Source\PSoC4/Capsense.c **** *
 221:Generated_Source\PSoC4/Capsense.c **** * Side Effects:
 222:Generated_Source\PSoC4/Capsense.c **** *  None
 223:Generated_Source\PSoC4/Capsense.c **** *
 224:Generated_Source\PSoC4/Capsense.c **** *******************************************************************************/
 225:Generated_Source\PSoC4/Capsense.c **** void Capsense_CsdHwBlockInit(void)
 226:Generated_Source\PSoC4/Capsense.c **** {
 209              		.loc 1 226 0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 8
 212              		@ frame_needed = 1, uses_anonymous_args = 0
 213 0000 80B5     		push	{r7, lr}
 214              		.cfi_def_cfa_offset 8
 215              		.cfi_offset 7, -8
 216              		.cfi_offset 14, -4
 217 0002 82B0     		sub	sp, sp, #8
 218              		.cfi_def_cfa_offset 16
 219 0004 00AF     		add	r7, sp, #0
 220              		.cfi_def_cfa_register 7
 227:Generated_Source\PSoC4/Capsense.c ****     uint32 newRegValue;
 228:Generated_Source\PSoC4/Capsense.c **** 
 229:Generated_Source\PSoC4/Capsense.c ****         /* Set trim registers for CSD Mode */
 230:Generated_Source\PSoC4/Capsense.c ****     #if (Capsense_IDAC1_POLARITY == Capsense__IDAC_SINK)
 231:Generated_Source\PSoC4/Capsense.c ****         /* iDAC1 Sinking Mode */
 232:Generated_Source\PSoC4/Capsense.c ****         Capsense_csdTrim2 = (uint8)Capsense_CSD_TRIM2_REG;
 233:Generated_Source\PSoC4/Capsense.c ****         newRegValue = Capsense_csdTrim2;
 234:Generated_Source\PSoC4/Capsense.c ****         newRegValue &= Capsense_CSD_IDAC1_TRIM_MASK;
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 9


 235:Generated_Source\PSoC4/Capsense.c ****         newRegValue |= (uint32)((uint32)Capsense_SFLASH_CSD_TRIM2_REG & (uint32)Capsense_CSFLASH_TR
 236:Generated_Source\PSoC4/Capsense.c **** 
 237:Generated_Source\PSoC4/Capsense.c ****         #if (Capsense_IDAC_CNT == 2u)
 238:Generated_Source\PSoC4/Capsense.c ****             /* iDAC2 Sinking Mode */
 239:Generated_Source\PSoC4/Capsense.c ****             newRegValue &= Capsense_CSD_IDAC2_TRIM_MASK;
 240:Generated_Source\PSoC4/Capsense.c ****             newRegValue |= (uint32)((uint32)Capsense_SFLASH_CSD_TRIM2_REG & (uint32)Capsense_CSFLAS
 241:Generated_Source\PSoC4/Capsense.c ****         #endif /* (Capsense_IDAC_CNT == 2u) */
 242:Generated_Source\PSoC4/Capsense.c ****         Capsense_CSD_TRIM2_REG = newRegValue;
 243:Generated_Source\PSoC4/Capsense.c ****     #else
 244:Generated_Source\PSoC4/Capsense.c ****         /* iDAC1 Sourcing Mode */
 245:Generated_Source\PSoC4/Capsense.c ****         Capsense_csdTrim1 = (uint8)Capsense_CSD_TRIM1_REG;
 221              		.loc 1 245 0
 222 0006 244B     		ldr	r3, .L5
 223 0008 1B68     		ldr	r3, [r3]
 224 000a DAB2     		uxtb	r2, r3
 225 000c 234B     		ldr	r3, .L5+4
 226 000e 1A70     		strb	r2, [r3]
 246:Generated_Source\PSoC4/Capsense.c ****         newRegValue = Capsense_csdTrim1;
 227              		.loc 1 246 0
 228 0010 224B     		ldr	r3, .L5+4
 229 0012 1B78     		ldrb	r3, [r3]
 230 0014 7B60     		str	r3, [r7, #4]
 247:Generated_Source\PSoC4/Capsense.c ****         newRegValue &= Capsense_CSD_IDAC1_TRIM_MASK;
 231              		.loc 1 247 0
 232 0016 7B68     		ldr	r3, [r7, #4]
 233 0018 0F22     		movs	r2, #15
 234 001a 9343     		bics	r3, r2
 235 001c 7B60     		str	r3, [r7, #4]
 248:Generated_Source\PSoC4/Capsense.c ****         newRegValue |= (uint32)((uint32)Capsense_SFLASH_CSD_TRIM1_REG & (uint32)Capsense_CSFLASH_TR
 236              		.loc 1 248 0
 237 001e 204B     		ldr	r3, .L5+8
 238 0020 1B78     		ldrb	r3, [r3]
 239 0022 DBB2     		uxtb	r3, r3
 240 0024 1A00     		movs	r2, r3
 241 0026 0F23     		movs	r3, #15
 242 0028 1340     		ands	r3, r2
 243 002a 7A68     		ldr	r2, [r7, #4]
 244 002c 1343     		orrs	r3, r2
 245 002e 7B60     		str	r3, [r7, #4]
 249:Generated_Source\PSoC4/Capsense.c ****         #if (Capsense_IDAC_CNT == 2u)
 250:Generated_Source\PSoC4/Capsense.c ****              /* iDAC2 Sourcing Mode */
 251:Generated_Source\PSoC4/Capsense.c ****             newRegValue &= Capsense_CSD_IDAC2_TRIM_MASK;
 246              		.loc 1 251 0
 247 0030 7B68     		ldr	r3, [r7, #4]
 248 0032 F022     		movs	r2, #240
 249 0034 9343     		bics	r3, r2
 250 0036 7B60     		str	r3, [r7, #4]
 252:Generated_Source\PSoC4/Capsense.c ****             newRegValue |= (uint32)((uint32)Capsense_SFLASH_CSD_TRIM1_REG & (uint32)Capsense_CSFLAS
 251              		.loc 1 252 0
 252 0038 194B     		ldr	r3, .L5+8
 253 003a 1B78     		ldrb	r3, [r3]
 254 003c DBB2     		uxtb	r3, r3
 255 003e 1A00     		movs	r2, r3
 256 0040 F023     		movs	r3, #240
 257 0042 1340     		ands	r3, r2
 258 0044 7A68     		ldr	r2, [r7, #4]
 259 0046 1343     		orrs	r3, r2
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 10


 260 0048 7B60     		str	r3, [r7, #4]
 253:Generated_Source\PSoC4/Capsense.c ****         #endif
 254:Generated_Source\PSoC4/Capsense.c ****         Capsense_CSD_TRIM1_REG = newRegValue;
 261              		.loc 1 254 0
 262 004a 134B     		ldr	r3, .L5
 263 004c 7A68     		ldr	r2, [r7, #4]
 264 004e 1A60     		str	r2, [r3]
 255:Generated_Source\PSoC4/Capsense.c ****     #endif /* (Capsense_IDAC1_POLARITY == Capsense__IDAC_SINK) */
 256:Generated_Source\PSoC4/Capsense.c **** 
 257:Generated_Source\PSoC4/Capsense.c ****     /* Configure CSD and IDAC */
 258:Generated_Source\PSoC4/Capsense.c ****     #if (Capsense_IDAC_CNT > 1u)
 259:Generated_Source\PSoC4/Capsense.c ****         Capsense_CSD_IDAC_REG = Capsense_DEFAULT_CSD_IDAC_CONFIG;
 265              		.loc 1 259 0
 266 0050 144B     		ldr	r3, .L5+12
 267 0052 154A     		ldr	r2, .L5+16
 268 0054 1A60     		str	r2, [r3]
 260:Generated_Source\PSoC4/Capsense.c ****         Capsense_CSD_CFG_REG = Capsense_DEFAULT_CSD_CONFIG;
 269              		.loc 1 260 0
 270 0056 154B     		ldr	r3, .L5+20
 271 0058 154A     		ldr	r2, .L5+24
 272 005a 1A60     		str	r2, [r3]
 261:Generated_Source\PSoC4/Capsense.c ****     #else
 262:Generated_Source\PSoC4/Capsense.c ****         Capsense_CSD_IDAC_REG &= ~(Capsense_CSD_IDAC1_MODE_MASK  | Capsense_CSD_IDAC1_DATA_MASK);
 263:Generated_Source\PSoC4/Capsense.c ****         Capsense_CSD_IDAC_REG |= Capsense_DEFAULT_CSD_IDAC_CONFIG;
 264:Generated_Source\PSoC4/Capsense.c **** 
 265:Generated_Source\PSoC4/Capsense.c ****         Capsense_CSD_CFG_REG &= ~(Capsense_CSD_CONFIG_MASK);
 266:Generated_Source\PSoC4/Capsense.c ****         Capsense_CSD_CFG_REG |= (Capsense_DEFAULT_CSD_CONFIG);
 267:Generated_Source\PSoC4/Capsense.c ****     #endif /* (Capsense_IDAC_CNT > 1u) */
 268:Generated_Source\PSoC4/Capsense.c **** 
 269:Generated_Source\PSoC4/Capsense.c **** 
 270:Generated_Source\PSoC4/Capsense.c ****     /* Connect Cmod to AMUX bus */
 271:Generated_Source\PSoC4/Capsense.c ****     newRegValue = Capsense_CMOD_CONNECTION_REG;
 273              		.loc 1 271 0
 274 005c 154B     		ldr	r3, .L5+28
 275 005e 1B68     		ldr	r3, [r3]
 276 0060 7B60     		str	r3, [r7, #4]
 272:Generated_Source\PSoC4/Capsense.c ****     newRegValue &= ~(Capsense_CSD_CMOD_CONNECTION_MASK);
 277              		.loc 1 272 0
 278 0062 7B68     		ldr	r3, [r7, #4]
 279 0064 0F22     		movs	r2, #15
 280 0066 9343     		bics	r3, r2
 281 0068 7B60     		str	r3, [r7, #4]
 273:Generated_Source\PSoC4/Capsense.c ****     newRegValue |= Capsense_CSD_CMOD_TO_AMUXBUS_A;
 282              		.loc 1 273 0
 283 006a 7B68     		ldr	r3, [r7, #4]
 284 006c 0622     		movs	r2, #6
 285 006e 1343     		orrs	r3, r2
 286 0070 7B60     		str	r3, [r7, #4]
 274:Generated_Source\PSoC4/Capsense.c ****     Capsense_CMOD_CONNECTION_REG = newRegValue;
 287              		.loc 1 274 0
 288 0072 104B     		ldr	r3, .L5+28
 289 0074 7A68     		ldr	r2, [r7, #4]
 290 0076 1A60     		str	r2, [r3]
 275:Generated_Source\PSoC4/Capsense.c **** 
 276:Generated_Source\PSoC4/Capsense.c ****     /* Configure Dead Band PWM if it is enabled */
 277:Generated_Source\PSoC4/Capsense.c ****     #if(Capsense_CSD_4B_PWM_MODE != Capsense__PWM_OFF)
 278:Generated_Source\PSoC4/Capsense.c ****         Capsense_CSD_4B_PWM_REG = Capsense_DEFAULT_CSD_4B_PWM_CONFIG;
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 11


 279:Generated_Source\PSoC4/Capsense.c ****     #endif /* (Capsense_CSD_4B_PWM_MODE != Capsense__PWM_OFF) */
 280:Generated_Source\PSoC4/Capsense.c **** 
 281:Generated_Source\PSoC4/Capsense.c ****     /* Setup ISR */
 282:Generated_Source\PSoC4/Capsense.c ****     CyIntDisable(Capsense_ISR_NUMBER);
 291              		.loc 1 282 0
 292 0078 1020     		movs	r0, #16
 293 007a FFF7FEFF 		bl	CyIntDisable
 283:Generated_Source\PSoC4/Capsense.c ****     #if !defined(CY_EXTERNAL_INTERRUPT_CONFIG)
 284:Generated_Source\PSoC4/Capsense.c ****         (void)CyIntSetVector(Capsense_ISR_NUMBER, &Capsense_ISR);
 294              		.loc 1 284 0
 295 007e 0E4B     		ldr	r3, .L5+32
 296 0080 1900     		movs	r1, r3
 297 0082 1020     		movs	r0, #16
 298 0084 FFF7FEFF 		bl	CyIntSetVector
 285:Generated_Source\PSoC4/Capsense.c ****         CyIntSetPriority(Capsense_ISR_NUMBER, Capsense_ISR_PRIORITY);
 299              		.loc 1 285 0
 300 0088 0321     		movs	r1, #3
 301 008a 1020     		movs	r0, #16
 302 008c FFF7FEFF 		bl	CyIntSetPriority
 286:Generated_Source\PSoC4/Capsense.c ****     #endif /* (CY_EXTERNAL_INTERRUPT_CONFIG) */
 287:Generated_Source\PSoC4/Capsense.c **** }
 303              		.loc 1 287 0
 304 0090 C046     		nop
 305 0092 BD46     		mov	sp, r7
 306 0094 02B0     		add	sp, sp, #8
 307              		@ sp needed
 308 0096 80BD     		pop	{r7, pc}
 309              	.L6:
 310              		.align	2
 311              	.L5:
 312 0098 00FF2840 		.word	1076428544
 313 009c 00000000 		.word	Capsense_csdTrim1
 314 00a0 62F2FF0F 		.word	268431970
 315 00a4 08002840 		.word	1076363272
 316 00a8 00020001 		.word	16777728
 317 00ac 04002840 		.word	1076363268
 318 00b0 0008A001 		.word	27265024
 319 00b4 00040240 		.word	1073873920
 320 00b8 00000000 		.word	Capsense_ISR
 321              		.cfi_endproc
 322              	.LFE37:
 323              		.size	Capsense_CsdHwBlockInit, .-Capsense_CsdHwBlockInit
 324              		.section	.text.Capsense_Enable,"ax",%progbits
 325              		.align	2
 326              		.global	Capsense_Enable
 327              		.code	16
 328              		.thumb_func
 329              		.type	Capsense_Enable, %function
 330              	Capsense_Enable:
 331              	.LFB38:
 288:Generated_Source\PSoC4/Capsense.c **** 
 289:Generated_Source\PSoC4/Capsense.c **** 
 290:Generated_Source\PSoC4/Capsense.c **** /*******************************************************************************
 291:Generated_Source\PSoC4/Capsense.c **** * Function Name: Capsense_Enable
 292:Generated_Source\PSoC4/Capsense.c **** ********************************************************************************
 293:Generated_Source\PSoC4/Capsense.c **** *
 294:Generated_Source\PSoC4/Capsense.c **** * Summary:
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 12


 295:Generated_Source\PSoC4/Capsense.c **** *  Enables the CSD block and related resources to an active mode.
 296:Generated_Source\PSoC4/Capsense.c **** *
 297:Generated_Source\PSoC4/Capsense.c **** * Parameters:
 298:Generated_Source\PSoC4/Capsense.c **** *  None
 299:Generated_Source\PSoC4/Capsense.c **** *
 300:Generated_Source\PSoC4/Capsense.c **** * Return:
 301:Generated_Source\PSoC4/Capsense.c **** *  None
 302:Generated_Source\PSoC4/Capsense.c **** *
 303:Generated_Source\PSoC4/Capsense.c **** * Global Variables:
 304:Generated_Source\PSoC4/Capsense.c **** *  None.
 305:Generated_Source\PSoC4/Capsense.c **** *
 306:Generated_Source\PSoC4/Capsense.c **** * Side Effects:
 307:Generated_Source\PSoC4/Capsense.c **** *  None
 308:Generated_Source\PSoC4/Capsense.c **** *
 309:Generated_Source\PSoC4/Capsense.c **** *******************************************************************************/
 310:Generated_Source\PSoC4/Capsense.c **** void Capsense_Enable(void)
 311:Generated_Source\PSoC4/Capsense.c **** {
 332              		.loc 1 311 0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 8
 335              		@ frame_needed = 1, uses_anonymous_args = 0
 336 0000 80B5     		push	{r7, lr}
 337              		.cfi_def_cfa_offset 8
 338              		.cfi_offset 7, -8
 339              		.cfi_offset 14, -4
 340 0002 82B0     		sub	sp, sp, #8
 341              		.cfi_def_cfa_offset 16
 342 0004 00AF     		add	r7, sp, #0
 343              		.cfi_def_cfa_register 7
 312:Generated_Source\PSoC4/Capsense.c ****     uint32 newRegValue;
 313:Generated_Source\PSoC4/Capsense.c **** 
 314:Generated_Source\PSoC4/Capsense.c ****     /* Enable Clocks */
 315:Generated_Source\PSoC4/Capsense.c ****     Capsense_SenseClk_Stop();
 344              		.loc 1 315 0
 345 0006 FFF7FEFF 		bl	Capsense_SenseClk_Stop
 316:Generated_Source\PSoC4/Capsense.c ****     Capsense_SampleClk_Stop();
 346              		.loc 1 316 0
 347 000a FFF7FEFF 		bl	Capsense_SampleClk_Stop
 317:Generated_Source\PSoC4/Capsense.c **** 
 318:Generated_Source\PSoC4/Capsense.c ****     Capsense_SampleClk_SetDividerValue((uint16)Capsense_INITIAL_CLK_DIVIDER);
 348              		.loc 1 318 0
 349 000e 0021     		movs	r1, #0
 350 0010 0020     		movs	r0, #0
 351 0012 FFF7FEFF 		bl	Capsense_SampleClk_SetFractionalDividerRegister
 319:Generated_Source\PSoC4/Capsense.c ****     Capsense_SenseClk_SetDividerValue((uint16)Capsense_INITIAL_CLK_DIVIDER);
 352              		.loc 1 319 0
 353 0016 0021     		movs	r1, #0
 354 0018 0020     		movs	r0, #0
 355 001a FFF7FEFF 		bl	Capsense_SenseClk_SetFractionalDividerRegister
 320:Generated_Source\PSoC4/Capsense.c **** 
 321:Generated_Source\PSoC4/Capsense.c ****     #if (0u == Capsense_IS_M0S8PERI_BLOCK)
 322:Generated_Source\PSoC4/Capsense.c ****         Capsense_SenseClk_Start();
 323:Generated_Source\PSoC4/Capsense.c ****         Capsense_SampleClk_Start();
 324:Generated_Source\PSoC4/Capsense.c ****     #else
 325:Generated_Source\PSoC4/Capsense.c ****         Capsense_SampleClk_Start();
 356              		.loc 1 325 0
 357 001e FF20     		movs	r0, #255
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 13


 358 0020 FFF7FEFF 		bl	Capsense_SampleClk_StartEx
 326:Generated_Source\PSoC4/Capsense.c ****         Capsense_SenseClk_StartEx(Capsense_SampleClk__DIV_ID);
 359              		.loc 1 326 0
 360 0024 4020     		movs	r0, #64
 361 0026 FFF7FEFF 		bl	Capsense_SenseClk_StartEx
 327:Generated_Source\PSoC4/Capsense.c ****     #endif /* (0u == Capsense_IS_M0S8PERI_BLOCK) */
 328:Generated_Source\PSoC4/Capsense.c **** 
 329:Generated_Source\PSoC4/Capsense.c ****     /* Enable the CSD block */
 330:Generated_Source\PSoC4/Capsense.c ****     newRegValue = Capsense_CSD_CFG_REG;
 362              		.loc 1 330 0
 363 002a 084B     		ldr	r3, .L8
 364 002c 1B68     		ldr	r3, [r3]
 365 002e 7B60     		str	r3, [r7, #4]
 331:Generated_Source\PSoC4/Capsense.c ****     newRegValue |= (Capsense_CSD_CFG_ENABLE | Capsense_CSD_CFG_SENSE_COMP_EN
 366              		.loc 1 331 0
 367 0030 7B68     		ldr	r3, [r7, #4]
 368 0032 074A     		ldr	r2, .L8+4
 369 0034 1343     		orrs	r3, r2
 370 0036 7B60     		str	r3, [r7, #4]
 332:Generated_Source\PSoC4/Capsense.c ****                                                    | Capsense_CSD_CFG_SENSE_EN);
 333:Generated_Source\PSoC4/Capsense.c ****     Capsense_CSD_CFG_REG = newRegValue;
 371              		.loc 1 333 0
 372 0038 044B     		ldr	r3, .L8
 373 003a 7A68     		ldr	r2, [r7, #4]
 374 003c 1A60     		str	r2, [r3]
 334:Generated_Source\PSoC4/Capsense.c **** 
 335:Generated_Source\PSoC4/Capsense.c ****     /* Enable interrupt */
 336:Generated_Source\PSoC4/Capsense.c ****     CyIntEnable(Capsense_ISR_NUMBER);
 375              		.loc 1 336 0
 376 003e 1020     		movs	r0, #16
 377 0040 FFF7FEFF 		bl	CyIntEnable
 337:Generated_Source\PSoC4/Capsense.c **** }
 378              		.loc 1 337 0
 379 0044 C046     		nop
 380 0046 BD46     		mov	sp, r7
 381 0048 02B0     		add	sp, sp, #8
 382              		@ sp needed
 383 004a 80BD     		pop	{r7, pc}
 384              	.L9:
 385              		.align	2
 386              	.L8:
 387 004c 04002840 		.word	1076363268
 388 0050 00100880 		.word	-2146955264
 389              		.cfi_endproc
 390              	.LFE38:
 391              		.size	Capsense_Enable, .-Capsense_Enable
 392              		.global	__aeabi_uidiv
 393              		.section	.text.Capsense_Start,"ax",%progbits
 394              		.align	2
 395              		.global	Capsense_Start
 396              		.code	16
 397              		.thumb_func
 398              		.type	Capsense_Start, %function
 399              	Capsense_Start:
 400              	.LFB39:
 338:Generated_Source\PSoC4/Capsense.c **** 
 339:Generated_Source\PSoC4/Capsense.c **** 
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 14


 340:Generated_Source\PSoC4/Capsense.c **** /*******************************************************************************
 341:Generated_Source\PSoC4/Capsense.c **** * Function Name: Capsense_Start
 342:Generated_Source\PSoC4/Capsense.c **** ********************************************************************************
 343:Generated_Source\PSoC4/Capsense.c **** *
 344:Generated_Source\PSoC4/Capsense.c **** * Summary:
 345:Generated_Source\PSoC4/Capsense.c **** *  This is the preferred method to begin the component operation. CapSense_Start()
 346:Generated_Source\PSoC4/Capsense.c **** *  calls the CapSense_Init() function, and then calls the CapSense_Enable()
 347:Generated_Source\PSoC4/Capsense.c **** *  function. Initializes the registers and starts the CSD method of the CapSense
 348:Generated_Source\PSoC4/Capsense.c **** *  component. Resets all the sensors to an inactive state. Enables interrupts for
 349:Generated_Source\PSoC4/Capsense.c **** *  sensors scanning. When the SmartSense tuning mode is selected, the tuning procedure
 350:Generated_Source\PSoC4/Capsense.c **** *  is applied for all the sensors. The CapSense_Start() routine must be called before
 351:Generated_Source\PSoC4/Capsense.c **** *  any other API routines.
 352:Generated_Source\PSoC4/Capsense.c **** *
 353:Generated_Source\PSoC4/Capsense.c **** * Parameters:
 354:Generated_Source\PSoC4/Capsense.c **** *  None
 355:Generated_Source\PSoC4/Capsense.c **** *
 356:Generated_Source\PSoC4/Capsense.c **** * Return:
 357:Generated_Source\PSoC4/Capsense.c **** *  None
 358:Generated_Source\PSoC4/Capsense.c **** *
 359:Generated_Source\PSoC4/Capsense.c **** * Global Variables:
 360:Generated_Source\PSoC4/Capsense.c **** *   Capsense_initVar - used to check the initial configuration,
 361:Generated_Source\PSoC4/Capsense.c **** *   modified on the first function call.
 362:Generated_Source\PSoC4/Capsense.c **** *  Capsense_lowLevelTuningDone - Used to notify the Tuner GUI that
 363:Generated_Source\PSoC4/Capsense.c **** *   tuning of the scanning parameters is done.
 364:Generated_Source\PSoC4/Capsense.c **** *
 365:Generated_Source\PSoC4/Capsense.c **** * Side Effects:
 366:Generated_Source\PSoC4/Capsense.c **** *  None
 367:Generated_Source\PSoC4/Capsense.c **** *
 368:Generated_Source\PSoC4/Capsense.c **** *******************************************************************************/
 369:Generated_Source\PSoC4/Capsense.c **** void Capsense_Start(void)
 370:Generated_Source\PSoC4/Capsense.c **** {
 401              		.loc 1 370 0
 402              		.cfi_startproc
 403              		@ args = 0, pretend = 0, frame = 16
 404              		@ frame_needed = 1, uses_anonymous_args = 0
 405 0000 80B5     		push	{r7, lr}
 406              		.cfi_def_cfa_offset 8
 407              		.cfi_offset 7, -8
 408              		.cfi_offset 14, -4
 409 0002 84B0     		sub	sp, sp, #16
 410              		.cfi_def_cfa_offset 24
 411 0004 00AF     		add	r7, sp, #0
 412              		.cfi_def_cfa_register 7
 371:Generated_Source\PSoC4/Capsense.c **** 
 372:Generated_Source\PSoC4/Capsense.c ****     static uint8 Capsense_initVar = 0u;
 373:Generated_Source\PSoC4/Capsense.c **** 
 374:Generated_Source\PSoC4/Capsense.c ****     #if((0u != Capsense_AUTOCALIBRATION_ENABLE) && (Capsense_TUNING_METHOD != Capsense__TUNING_AUTO
 375:Generated_Source\PSoC4/Capsense.c ****         uint32 curSensor;
 376:Generated_Source\PSoC4/Capsense.c ****         uint32 rawLevel;
 377:Generated_Source\PSoC4/Capsense.c ****         uint32 widget;
 378:Generated_Source\PSoC4/Capsense.c ****     #endif /* ((0u != Capsense_AUTOCALIBRATION_ENABLE) && (Capsense_TUNING_METHOD != Capsense__TUNI
 379:Generated_Source\PSoC4/Capsense.c **** 
 380:Generated_Source\PSoC4/Capsense.c ****     if (Capsense_initVar == 0u)
 413              		.loc 1 380 0
 414 0006 334B     		ldr	r3, .L16
 415 0008 1B78     		ldrb	r3, [r3]
 416 000a 002B     		cmp	r3, #0
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 15


 417 000c 04D1     		bne	.L11
 381:Generated_Source\PSoC4/Capsense.c ****     {
 382:Generated_Source\PSoC4/Capsense.c ****         Capsense_Init();
 418              		.loc 1 382 0
 419 000e FFF7FEFF 		bl	Capsense_Init
 383:Generated_Source\PSoC4/Capsense.c ****         Capsense_initVar = 1u;
 420              		.loc 1 383 0
 421 0012 304B     		ldr	r3, .L16
 422 0014 0122     		movs	r2, #1
 423 0016 1A70     		strb	r2, [r3]
 424              	.L11:
 384:Generated_Source\PSoC4/Capsense.c ****     }
 385:Generated_Source\PSoC4/Capsense.c ****     Capsense_Enable();
 425              		.loc 1 385 0
 426 0018 FFF7FEFF 		bl	Capsense_Enable
 386:Generated_Source\PSoC4/Capsense.c **** 
 387:Generated_Source\PSoC4/Capsense.c ****     /* AutoTunning start */
 388:Generated_Source\PSoC4/Capsense.c ****     #if(Capsense_TUNING_METHOD == Capsense__TUNING_AUTO)
 389:Generated_Source\PSoC4/Capsense.c ****         #if(0u != Capsense_CSHL_API_GENERATE)
 390:Generated_Source\PSoC4/Capsense.c ****             Capsense_AutoTune();
 391:Generated_Source\PSoC4/Capsense.c ****             Capsense_lowLevelTuningDone = 1u;
 392:Generated_Source\PSoC4/Capsense.c ****         #endif /* (0u != Capsense_CSHL_API_GENERATE) */
 393:Generated_Source\PSoC4/Capsense.c ****     #else
 394:Generated_Source\PSoC4/Capsense.c ****         #if(0u != Capsense_AUTOCALIBRATION_ENABLE)
 395:Generated_Source\PSoC4/Capsense.c **** 
 396:Generated_Source\PSoC4/Capsense.c ****             #if(Capsense_IDAC_CNT > 1u)
 397:Generated_Source\PSoC4/Capsense.c ****                 Capsense_CSD_IDAC_REG &= ~(Capsense_CSD_IDAC2_MODE_MASK);
 427              		.loc 1 397 0
 428 001c 2E4B     		ldr	r3, .L16+4
 429 001e 2E4A     		ldr	r2, .L16+4
 430 0020 1268     		ldr	r2, [r2]
 431 0022 2E49     		ldr	r1, .L16+8
 432 0024 0A40     		ands	r2, r1
 433 0026 1A60     		str	r2, [r3]
 398:Generated_Source\PSoC4/Capsense.c ****             #endif /* (Capsense_IDAC_CNT > 1u) */
 399:Generated_Source\PSoC4/Capsense.c **** 
 400:Generated_Source\PSoC4/Capsense.c ****             for(curSensor = 0u; curSensor < Capsense_TOTAL_SCANSLOT_COUNT; curSensor++)
 434              		.loc 1 400 0
 435 0028 0023     		movs	r3, #0
 436 002a FB60     		str	r3, [r7, #12]
 437 002c 1CE0     		b	.L12
 438              	.L13:
 401:Generated_Source\PSoC4/Capsense.c ****             {
 402:Generated_Source\PSoC4/Capsense.c ****                 widget = Capsense_widgetNumber[curSensor];
 439              		.loc 1 402 0 discriminator 3
 440 002e 0023     		movs	r3, #0
 441 0030 BB60     		str	r3, [r7, #8]
 403:Generated_Source\PSoC4/Capsense.c ****                 rawLevel = Capsense_widgetResolution[widget] >> Capsense_RESOLUTION_OFFSET;
 442              		.loc 1 403 0 discriminator 3
 443 0032 2B4B     		ldr	r3, .L16+12
 444 0034 BA68     		ldr	r2, [r7, #8]
 445 0036 9200     		lsls	r2, r2, #2
 446 0038 D358     		ldr	r3, [r2, r3]
 447 003a 1B0C     		lsrs	r3, r3, #16
 448 003c 7B60     		str	r3, [r7, #4]
 404:Generated_Source\PSoC4/Capsense.c **** 
 405:Generated_Source\PSoC4/Capsense.c ****                 /* Calibration level should be equal to 85% from scanning resolution */
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 16


 406:Generated_Source\PSoC4/Capsense.c ****                 rawLevel = (rawLevel * 85u) / 100u;
 449              		.loc 1 406 0 discriminator 3
 450 003e 7A68     		ldr	r2, [r7, #4]
 451 0040 1300     		movs	r3, r2
 452 0042 9B00     		lsls	r3, r3, #2
 453 0044 9B18     		adds	r3, r3, r2
 454 0046 1A01     		lsls	r2, r3, #4
 455 0048 9B18     		adds	r3, r3, r2
 456 004a 6421     		movs	r1, #100
 457 004c 1800     		movs	r0, r3
 458 004e FFF7FEFF 		bl	__aeabi_uidiv
 459 0052 0300     		movs	r3, r0
 460 0054 7B60     		str	r3, [r7, #4]
 407:Generated_Source\PSoC4/Capsense.c **** 
 408:Generated_Source\PSoC4/Capsense.c ****                 Capsense_CalibrateSensor(curSensor, rawLevel, Capsense_modulationIDAC);
 461              		.loc 1 408 0 discriminator 3
 462 0056 234A     		ldr	r2, .L16+16
 463 0058 7968     		ldr	r1, [r7, #4]
 464 005a FB68     		ldr	r3, [r7, #12]
 465 005c 1800     		movs	r0, r3
 466 005e FFF7FEFF 		bl	Capsense_CalibrateSensor
 400:Generated_Source\PSoC4/Capsense.c ****             {
 467              		.loc 1 400 0 discriminator 3
 468 0062 FB68     		ldr	r3, [r7, #12]
 469 0064 0133     		adds	r3, r3, #1
 470 0066 FB60     		str	r3, [r7, #12]
 471              	.L12:
 400:Generated_Source\PSoC4/Capsense.c ****             {
 472              		.loc 1 400 0 is_stmt 0 discriminator 1
 473 0068 FB68     		ldr	r3, [r7, #12]
 474 006a 002B     		cmp	r3, #0
 475 006c DFD0     		beq	.L13
 409:Generated_Source\PSoC4/Capsense.c ****             }
 410:Generated_Source\PSoC4/Capsense.c **** 
 411:Generated_Source\PSoC4/Capsense.c ****             #if(0u != Capsense_TOTAL_CENTROIDS_COUNT)
 412:Generated_Source\PSoC4/Capsense.c ****                 Capsense_NormalizeWidgets(Capsense_END_OF_WIDGETS_INDEX, Capsense_modulationIDAC);
 413:Generated_Source\PSoC4/Capsense.c ****             #endif /* (0u != Capsense_TOTAL_CENTROIDS_COUNT)  */
 414:Generated_Source\PSoC4/Capsense.c **** 
 415:Generated_Source\PSoC4/Capsense.c ****             #if(Capsense_IDAC_CNT > 1u)
 416:Generated_Source\PSoC4/Capsense.c ****                 for(curSensor = 0u; curSensor < Capsense_TOTAL_SCANSLOT_COUNT; curSensor++)
 476              		.loc 1 416 0 is_stmt 1
 477 006e 0023     		movs	r3, #0
 478 0070 FB60     		str	r3, [r7, #12]
 479 0072 19E0     		b	.L14
 480              	.L15:
 417:Generated_Source\PSoC4/Capsense.c ****                 {
 418:Generated_Source\PSoC4/Capsense.c ****                     Capsense_compensationIDAC[curSensor] = Capsense_modulationIDAC[curSensor] / 2u;
 481              		.loc 1 418 0 discriminator 3
 482 0074 1B4A     		ldr	r2, .L16+16
 483 0076 FB68     		ldr	r3, [r7, #12]
 484 0078 D318     		adds	r3, r2, r3
 485 007a 1B78     		ldrb	r3, [r3]
 486 007c 5B08     		lsrs	r3, r3, #1
 487 007e D9B2     		uxtb	r1, r3
 488 0080 194A     		ldr	r2, .L16+20
 489 0082 FB68     		ldr	r3, [r7, #12]
 490 0084 D318     		adds	r3, r2, r3
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 17


 491 0086 0A1C     		adds	r2, r1, #0
 492 0088 1A70     		strb	r2, [r3]
 419:Generated_Source\PSoC4/Capsense.c ****                     Capsense_modulationIDAC[curSensor] = (Capsense_modulationIDAC[curSensor] + 1u) 
 493              		.loc 1 419 0 discriminator 3
 494 008a 164A     		ldr	r2, .L16+16
 495 008c FB68     		ldr	r3, [r7, #12]
 496 008e D318     		adds	r3, r2, r3
 497 0090 1B78     		ldrb	r3, [r3]
 498 0092 0133     		adds	r3, r3, #1
 499 0094 5B08     		lsrs	r3, r3, #1
 500 0096 D9B2     		uxtb	r1, r3
 501 0098 124A     		ldr	r2, .L16+16
 502 009a FB68     		ldr	r3, [r7, #12]
 503 009c D318     		adds	r3, r2, r3
 504 009e 0A1C     		adds	r2, r1, #0
 505 00a0 1A70     		strb	r2, [r3]
 416:Generated_Source\PSoC4/Capsense.c ****                 {
 506              		.loc 1 416 0 discriminator 3
 507 00a2 FB68     		ldr	r3, [r7, #12]
 508 00a4 0133     		adds	r3, r3, #1
 509 00a6 FB60     		str	r3, [r7, #12]
 510              	.L14:
 416:Generated_Source\PSoC4/Capsense.c ****                 {
 511              		.loc 1 416 0 is_stmt 0 discriminator 1
 512 00a8 FB68     		ldr	r3, [r7, #12]
 513 00aa 002B     		cmp	r3, #0
 514 00ac E2D0     		beq	.L15
 420:Generated_Source\PSoC4/Capsense.c ****                 }
 421:Generated_Source\PSoC4/Capsense.c ****                 Capsense_CSD_IDAC_REG |= Capsense_CSD_IDAC2_MODE_FIXED;
 515              		.loc 1 421 0 is_stmt 1
 516 00ae 0A4B     		ldr	r3, .L16+4
 517 00b0 094A     		ldr	r2, .L16+4
 518 00b2 1268     		ldr	r2, [r2]
 519 00b4 8021     		movs	r1, #128
 520 00b6 4904     		lsls	r1, r1, #17
 521 00b8 0A43     		orrs	r2, r1
 522 00ba 1A60     		str	r2, [r3]
 422:Generated_Source\PSoC4/Capsense.c ****             #endif /* (Capsense_IDAC_CNT > 1u) */
 423:Generated_Source\PSoC4/Capsense.c **** 
 424:Generated_Source\PSoC4/Capsense.c ****         #endif /* (0u != Capsense_AUTOCALIBRATION_ENABLE) */
 425:Generated_Source\PSoC4/Capsense.c **** 
 426:Generated_Source\PSoC4/Capsense.c ****     #endif /* ((Capsense_TUNING_METHOD == Capsense__TUNING_AUTO) */
 427:Generated_Source\PSoC4/Capsense.c **** 
 428:Generated_Source\PSoC4/Capsense.c ****     /* Initialize Advanced Centroid */
 429:Generated_Source\PSoC4/Capsense.c ****     #if(Capsense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
 430:Generated_Source\PSoC4/Capsense.c ****         Capsense_AdvancedCentroidInit();
 431:Generated_Source\PSoC4/Capsense.c ****     #endif /* (Capsense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
 432:Generated_Source\PSoC4/Capsense.c **** 
 433:Generated_Source\PSoC4/Capsense.c ****     /* Connect sense comparator input to AMUXA */
 434:Generated_Source\PSoC4/Capsense.c ****     Capsense_CSD_CFG_REG |= Capsense_CSD_CFG_SENSE_INSEL;
 523              		.loc 1 434 0
 524 00bc 0B4B     		ldr	r3, .L16+24
 525 00be 0B4A     		ldr	r2, .L16+24
 526 00c0 1268     		ldr	r2, [r2]
 527 00c2 8021     		movs	r1, #128
 528 00c4 C903     		lsls	r1, r1, #15
 529 00c6 0A43     		orrs	r2, r1
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 18


 530 00c8 1A60     		str	r2, [r3]
 435:Generated_Source\PSoC4/Capsense.c **** }
 531              		.loc 1 435 0
 532 00ca C046     		nop
 533 00cc BD46     		mov	sp, r7
 534 00ce 04B0     		add	sp, sp, #16
 535              		@ sp needed
 536 00d0 80BD     		pop	{r7, pc}
 537              	.L17:
 538 00d2 C046     		.align	2
 539              	.L16:
 540 00d4 06000000 		.word	Capsense_initVar.5424
 541 00d8 08002840 		.word	1076363272
 542 00dc FFFFFFFC 		.word	-50331649
 543 00e0 00000000 		.word	Capsense_widgetResolution
 544 00e4 00000000 		.word	Capsense_modulationIDAC
 545 00e8 00000000 		.word	Capsense_compensationIDAC
 546 00ec 04002840 		.word	1076363268
 547              		.cfi_endproc
 548              	.LFE39:
 549              		.size	Capsense_Start, .-Capsense_Start
 550              		.section	.text.Capsense_Stop,"ax",%progbits
 551              		.align	2
 552              		.global	Capsense_Stop
 553              		.code	16
 554              		.thumb_func
 555              		.type	Capsense_Stop, %function
 556              	Capsense_Stop:
 557              	.LFB40:
 436:Generated_Source\PSoC4/Capsense.c **** 
 437:Generated_Source\PSoC4/Capsense.c **** 
 438:Generated_Source\PSoC4/Capsense.c **** /*******************************************************************************
 439:Generated_Source\PSoC4/Capsense.c **** * Function Name: Capsense_Stop
 440:Generated_Source\PSoC4/Capsense.c **** ********************************************************************************
 441:Generated_Source\PSoC4/Capsense.c **** *
 442:Generated_Source\PSoC4/Capsense.c **** * Summary:
 443:Generated_Source\PSoC4/Capsense.c **** *  Stops the sensor scanning, disables component interrupts, and resets all the
 444:Generated_Source\PSoC4/Capsense.c **** *  sensors to an inactive state. Disables the Active mode power template bits for
 445:Generated_Source\PSoC4/Capsense.c **** *  the subcomponents used within CapSense.
 446:Generated_Source\PSoC4/Capsense.c **** *
 447:Generated_Source\PSoC4/Capsense.c **** * Parameters:
 448:Generated_Source\PSoC4/Capsense.c **** *  None
 449:Generated_Source\PSoC4/Capsense.c **** *
 450:Generated_Source\PSoC4/Capsense.c **** * Return:
 451:Generated_Source\PSoC4/Capsense.c **** *  None
 452:Generated_Source\PSoC4/Capsense.c **** *
 453:Generated_Source\PSoC4/Capsense.c **** * Global Variables:
 454:Generated_Source\PSoC4/Capsense.c **** *  Capsense_csdTrim1 - Contains the IDAC trim register value for the Sourcing Mode.
 455:Generated_Source\PSoC4/Capsense.c **** *  Capsense_csdTrim2 - Contains the IDAC trim register value for vSinking Mode.
 456:Generated_Source\PSoC4/Capsense.c **** *
 457:Generated_Source\PSoC4/Capsense.c **** * Side Effects:
 458:Generated_Source\PSoC4/Capsense.c **** *  This function should be called after scans are completed.
 459:Generated_Source\PSoC4/Capsense.c **** *
 460:Generated_Source\PSoC4/Capsense.c **** *******************************************************************************/
 461:Generated_Source\PSoC4/Capsense.c **** void Capsense_Stop(void)
 462:Generated_Source\PSoC4/Capsense.c **** {
 558              		.loc 1 462 0
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 19


 559              		.cfi_startproc
 560              		@ args = 0, pretend = 0, frame = 0
 561              		@ frame_needed = 1, uses_anonymous_args = 0
 562 0000 80B5     		push	{r7, lr}
 563              		.cfi_def_cfa_offset 8
 564              		.cfi_offset 7, -8
 565              		.cfi_offset 14, -4
 566 0002 00AF     		add	r7, sp, #0
 567              		.cfi_def_cfa_register 7
 463:Generated_Source\PSoC4/Capsense.c ****     /* Disable interrupt */
 464:Generated_Source\PSoC4/Capsense.c ****     CyIntDisable(Capsense_ISR_NUMBER);
 568              		.loc 1 464 0
 569 0004 1020     		movs	r0, #16
 570 0006 FFF7FEFF 		bl	CyIntDisable
 465:Generated_Source\PSoC4/Capsense.c **** 
 466:Generated_Source\PSoC4/Capsense.c ****     Capsense_CSD_CFG_REG &= ~(Capsense_CSD_CFG_SENSE_COMP_EN | Capsense_CSD_CFG_SENSE_EN);
 571              		.loc 1 466 0
 572 000a 094B     		ldr	r3, .L19
 573 000c 084A     		ldr	r2, .L19
 574 000e 1268     		ldr	r2, [r2]
 575 0010 0849     		ldr	r1, .L19+4
 576 0012 0A40     		ands	r2, r1
 577 0014 1A60     		str	r2, [r3]
 467:Generated_Source\PSoC4/Capsense.c **** 
 468:Generated_Source\PSoC4/Capsense.c ****     #if(Capsense_IDAC_CNT == 2u)
 469:Generated_Source\PSoC4/Capsense.c ****         Capsense_CSD_CFG_REG &= ~(Capsense_CSD_CFG_ENABLE);
 578              		.loc 1 469 0
 579 0016 064B     		ldr	r3, .L19
 580 0018 054A     		ldr	r2, .L19
 581 001a 1268     		ldr	r2, [r2]
 582 001c 5200     		lsls	r2, r2, #1
 583 001e 5208     		lsrs	r2, r2, #1
 584 0020 1A60     		str	r2, [r3]
 470:Generated_Source\PSoC4/Capsense.c ****     #endif /* (Capsense_IDAC_CNT == 2u) */
 471:Generated_Source\PSoC4/Capsense.c **** 
 472:Generated_Source\PSoC4/Capsense.c ****     /* Disable the Clocks */
 473:Generated_Source\PSoC4/Capsense.c ****     Capsense_SenseClk_Stop();
 585              		.loc 1 473 0
 586 0022 FFF7FEFF 		bl	Capsense_SenseClk_Stop
 474:Generated_Source\PSoC4/Capsense.c ****     Capsense_SampleClk_Stop();
 587              		.loc 1 474 0
 588 0026 FFF7FEFF 		bl	Capsense_SampleClk_Stop
 475:Generated_Source\PSoC4/Capsense.c **** }
 589              		.loc 1 475 0
 590 002a C046     		nop
 591 002c BD46     		mov	sp, r7
 592              		@ sp needed
 593 002e 80BD     		pop	{r7, pc}
 594              	.L20:
 595              		.align	2
 596              	.L19:
 597 0030 04002840 		.word	1076363268
 598 0034 FFEFF7FF 		.word	-528385
 599              		.cfi_endproc
 600              	.LFE40:
 601              		.size	Capsense_Stop, .-Capsense_Stop
 602              		.section	.text.Capsense_FindNextSensor,"ax",%progbits
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 20


 603              		.align	2
 604              		.global	Capsense_FindNextSensor
 605              		.code	16
 606              		.thumb_func
 607              		.type	Capsense_FindNextSensor, %function
 608              	Capsense_FindNextSensor:
 609              	.LFB41:
 476:Generated_Source\PSoC4/Capsense.c **** 
 477:Generated_Source\PSoC4/Capsense.c **** 
 478:Generated_Source\PSoC4/Capsense.c **** /*******************************************************************************
 479:Generated_Source\PSoC4/Capsense.c **** * Function Name: Capsense_FindNextSensor
 480:Generated_Source\PSoC4/Capsense.c **** ********************************************************************************
 481:Generated_Source\PSoC4/Capsense.c **** *
 482:Generated_Source\PSoC4/Capsense.c **** * Summary:
 483:Generated_Source\PSoC4/Capsense.c **** *  Finds the next sensor to scan.
 484:Generated_Source\PSoC4/Capsense.c **** *
 485:Generated_Source\PSoC4/Capsense.c **** * Parameters:
 486:Generated_Source\PSoC4/Capsense.c **** *  snsIndex:  Current index of sensor.
 487:Generated_Source\PSoC4/Capsense.c **** *
 488:Generated_Source\PSoC4/Capsense.c **** * Return:
 489:Generated_Source\PSoC4/Capsense.c **** *  Returns the next sensor index to scan.
 490:Generated_Source\PSoC4/Capsense.c **** *
 491:Generated_Source\PSoC4/Capsense.c **** * Global Variables:
 492:Generated_Source\PSoC4/Capsense.c **** *  Capsense_sensorEnableMask[] - used to store bit masks of the enabled sensors.
 493:Generated_Source\PSoC4/Capsense.c **** *
 494:Generated_Source\PSoC4/Capsense.c **** * Side Effects:
 495:Generated_Source\PSoC4/Capsense.c **** *  This function affects the  current scanning and should not
 496:Generated_Source\PSoC4/Capsense.c **** *  be used outside the component.
 497:Generated_Source\PSoC4/Capsense.c **** *
 498:Generated_Source\PSoC4/Capsense.c **** *******************************************************************************/
 499:Generated_Source\PSoC4/Capsense.c **** uint8 Capsense_FindNextSensor(uint8 snsIndex)
 500:Generated_Source\PSoC4/Capsense.c **** {
 610              		.loc 1 500 0
 611              		.cfi_startproc
 612              		@ args = 0, pretend = 0, frame = 16
 613              		@ frame_needed = 1, uses_anonymous_args = 0
 614 0000 80B5     		push	{r7, lr}
 615              		.cfi_def_cfa_offset 8
 616              		.cfi_offset 7, -8
 617              		.cfi_offset 14, -4
 618 0002 84B0     		sub	sp, sp, #16
 619              		.cfi_def_cfa_offset 24
 620 0004 00AF     		add	r7, sp, #0
 621              		.cfi_def_cfa_register 7
 622 0006 0200     		movs	r2, r0
 623 0008 FB1D     		adds	r3, r7, #7
 624 000a 1A70     		strb	r2, [r3]
 625              	.L24:
 501:Generated_Source\PSoC4/Capsense.c ****     uint32 enableFlag;
 502:Generated_Source\PSoC4/Capsense.c **** 
 503:Generated_Source\PSoC4/Capsense.c ****     /* Check if sensor enabled */
 504:Generated_Source\PSoC4/Capsense.c ****     do
 505:Generated_Source\PSoC4/Capsense.c ****     {
 506:Generated_Source\PSoC4/Capsense.c ****         /* Proceed with next sensor */
 507:Generated_Source\PSoC4/Capsense.c ****         snsIndex++;
 626              		.loc 1 507 0
 627 000c FB1D     		adds	r3, r7, #7
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 21


 628 000e 1A78     		ldrb	r2, [r3]
 629 0010 FB1D     		adds	r3, r7, #7
 630 0012 0132     		adds	r2, r2, #1
 631 0014 1A70     		strb	r2, [r3]
 508:Generated_Source\PSoC4/Capsense.c ****         if(snsIndex == Capsense_TOTAL_SENSOR_COUNT)
 632              		.loc 1 508 0
 633 0016 FB1D     		adds	r3, r7, #7
 634 0018 1B78     		ldrb	r3, [r3]
 635 001a 012B     		cmp	r3, #1
 636 001c 0CD0     		beq	.L26
 509:Generated_Source\PSoC4/Capsense.c ****         {
 510:Generated_Source\PSoC4/Capsense.c ****             break;
 511:Generated_Source\PSoC4/Capsense.c ****         }
 512:Generated_Source\PSoC4/Capsense.c ****         enableFlag = Capsense_GetBitValue(Capsense_sensorEnableMask, (uint32)snsIndex);
 637              		.loc 1 512 0
 638 001e FB1D     		adds	r3, r7, #7
 639 0020 1A78     		ldrb	r2, [r3]
 640 0022 094B     		ldr	r3, .L27
 641 0024 1100     		movs	r1, r2
 642 0026 1800     		movs	r0, r3
 643 0028 FFF7FEFF 		bl	Capsense_GetBitValue
 644 002c 0300     		movs	r3, r0
 645 002e FB60     		str	r3, [r7, #12]
 513:Generated_Source\PSoC4/Capsense.c ****     }
 514:Generated_Source\PSoC4/Capsense.c ****     while(enableFlag == 0u);
 646              		.loc 1 514 0
 647 0030 FB68     		ldr	r3, [r7, #12]
 648 0032 002B     		cmp	r3, #0
 649 0034 EAD0     		beq	.L24
 650 0036 00E0     		b	.L23
 651              	.L26:
 510:Generated_Source\PSoC4/Capsense.c ****         }
 652              		.loc 1 510 0
 653 0038 C046     		nop
 654              	.L23:
 515:Generated_Source\PSoC4/Capsense.c **** 
 516:Generated_Source\PSoC4/Capsense.c ****     return ((uint8)snsIndex);
 655              		.loc 1 516 0
 656 003a FB1D     		adds	r3, r7, #7
 657 003c 1B78     		ldrb	r3, [r3]
 517:Generated_Source\PSoC4/Capsense.c **** }
 658              		.loc 1 517 0
 659 003e 1800     		movs	r0, r3
 660 0040 BD46     		mov	sp, r7
 661 0042 04B0     		add	sp, sp, #16
 662              		@ sp needed
 663 0044 80BD     		pop	{r7, pc}
 664              	.L28:
 665 0046 C046     		.align	2
 666              	.L27:
 667 0048 00000000 		.word	Capsense_sensorEnableMask
 668              		.cfi_endproc
 669              	.LFE41:
 670              		.size	Capsense_FindNextSensor, .-Capsense_FindNextSensor
 671              		.section	.text.Capsense_ScanSensor,"ax",%progbits
 672              		.align	2
 673              		.global	Capsense_ScanSensor
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 22


 674              		.code	16
 675              		.thumb_func
 676              		.type	Capsense_ScanSensor, %function
 677              	Capsense_ScanSensor:
 678              	.LFB42:
 518:Generated_Source\PSoC4/Capsense.c **** 
 519:Generated_Source\PSoC4/Capsense.c **** 
 520:Generated_Source\PSoC4/Capsense.c **** /*******************************************************************************
 521:Generated_Source\PSoC4/Capsense.c **** * Function Name: Capsense_ScanSensor
 522:Generated_Source\PSoC4/Capsense.c **** ********************************************************************************
 523:Generated_Source\PSoC4/Capsense.c **** *
 524:Generated_Source\PSoC4/Capsense.c **** * Summary:
 525:Generated_Source\PSoC4/Capsense.c **** *  Sets the scan settings and starts scanning a sensor. After scanning is complete,
 526:Generated_Source\PSoC4/Capsense.c **** *  the ISR copies the measured sensor raw data to the global raw sensor array.
 527:Generated_Source\PSoC4/Capsense.c **** *  Use of the ISR ensures this function is non-blocking.
 528:Generated_Source\PSoC4/Capsense.c **** *  Each sensor has a unique number within the sensor array.
 529:Generated_Source\PSoC4/Capsense.c **** *  This number is assigned by the CapSense customizer in sequence.
 530:Generated_Source\PSoC4/Capsense.c **** *
 531:Generated_Source\PSoC4/Capsense.c **** * Parameters:
 532:Generated_Source\PSoC4/Capsense.c **** *  sensor:  Sensor number.
 533:Generated_Source\PSoC4/Capsense.c **** *
 534:Generated_Source\PSoC4/Capsense.c **** * Return:
 535:Generated_Source\PSoC4/Capsense.c **** *  None
 536:Generated_Source\PSoC4/Capsense.c **** *
 537:Generated_Source\PSoC4/Capsense.c **** * Global Variables:
 538:Generated_Source\PSoC4/Capsense.c **** *  Capsense_csdStatusVar - used to provide the status and mode of the scanning process.
 539:Generated_Source\PSoC4/Capsense.c **** *  Sets the busy status(scan in progress) and mode of scan as single scan.
 540:Generated_Source\PSoC4/Capsense.c **** *  Capsense_sensorIndex - used to store a sensor scanning sensor number.
 541:Generated_Source\PSoC4/Capsense.c **** *  Sets to the provided sensor argument.
 542:Generated_Source\PSoC4/Capsense.c **** *
 543:Generated_Source\PSoC4/Capsense.c **** * Side Effects:
 544:Generated_Source\PSoC4/Capsense.c **** *  None
 545:Generated_Source\PSoC4/Capsense.c **** *
 546:Generated_Source\PSoC4/Capsense.c **** *******************************************************************************/
 547:Generated_Source\PSoC4/Capsense.c **** void Capsense_ScanSensor(uint32 sensor)
 548:Generated_Source\PSoC4/Capsense.c **** {
 679              		.loc 1 548 0
 680              		.cfi_startproc
 681              		@ args = 0, pretend = 0, frame = 8
 682              		@ frame_needed = 1, uses_anonymous_args = 0
 683 0000 80B5     		push	{r7, lr}
 684              		.cfi_def_cfa_offset 8
 685              		.cfi_offset 7, -8
 686              		.cfi_offset 14, -4
 687 0002 82B0     		sub	sp, sp, #8
 688              		.cfi_def_cfa_offset 16
 689 0004 00AF     		add	r7, sp, #0
 690              		.cfi_def_cfa_register 7
 691 0006 7860     		str	r0, [r7, #4]
 549:Generated_Source\PSoC4/Capsense.c ****     /* Clears status/control variable and set sensorIndex */
 550:Generated_Source\PSoC4/Capsense.c ****     Capsense_csdStatusVar = 0u;
 692              		.loc 1 550 0
 693 0008 084B     		ldr	r3, .L30
 694 000a 0022     		movs	r2, #0
 695 000c 1A70     		strb	r2, [r3]
 551:Generated_Source\PSoC4/Capsense.c ****     Capsense_sensorIndex = (uint8)sensor;
 696              		.loc 1 551 0
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 23


 697 000e 7B68     		ldr	r3, [r7, #4]
 698 0010 DAB2     		uxtb	r2, r3
 699 0012 074B     		ldr	r3, .L30+4
 700 0014 1A70     		strb	r2, [r3]
 552:Generated_Source\PSoC4/Capsense.c **** 
 553:Generated_Source\PSoC4/Capsense.c ****     /* Start of sensor scan */
 554:Generated_Source\PSoC4/Capsense.c ****     Capsense_csdStatusVar = (Capsense_SW_STS_BUSY | Capsense_SW_CTRL_SINGLE_SCAN);
 701              		.loc 1 554 0
 702 0016 054B     		ldr	r3, .L30
 703 0018 8122     		movs	r2, #129
 704 001a 1A70     		strb	r2, [r3]
 555:Generated_Source\PSoC4/Capsense.c ****     Capsense_PreScan(sensor);
 705              		.loc 1 555 0
 706 001c 7B68     		ldr	r3, [r7, #4]
 707 001e 1800     		movs	r0, r3
 708 0020 FFF7FEFF 		bl	Capsense_PreScan
 556:Generated_Source\PSoC4/Capsense.c **** }
 709              		.loc 1 556 0
 710 0024 C046     		nop
 711 0026 BD46     		mov	sp, r7
 712 0028 02B0     		add	sp, sp, #8
 713              		@ sp needed
 714 002a 80BD     		pop	{r7, pc}
 715              	.L31:
 716              		.align	2
 717              	.L30:
 718 002c 00000000 		.word	Capsense_csdStatusVar
 719 0030 00000000 		.word	Capsense_sensorIndex
 720              		.cfi_endproc
 721              	.LFE42:
 722              		.size	Capsense_ScanSensor, .-Capsense_ScanSensor
 723              		.section	.text.Capsense_ScanWidget,"ax",%progbits
 724              		.align	2
 725              		.global	Capsense_ScanWidget
 726              		.code	16
 727              		.thumb_func
 728              		.type	Capsense_ScanWidget, %function
 729              	Capsense_ScanWidget:
 730              	.LFB43:
 557:Generated_Source\PSoC4/Capsense.c **** 
 558:Generated_Source\PSoC4/Capsense.c **** 
 559:Generated_Source\PSoC4/Capsense.c **** #if(0u != Capsense_CSHL_API_GENERATE)
 560:Generated_Source\PSoC4/Capsense.c **** /*******************************************************************************
 561:Generated_Source\PSoC4/Capsense.c **** * Function Name: Capsense_ScanWidget
 562:Generated_Source\PSoC4/Capsense.c **** ********************************************************************************
 563:Generated_Source\PSoC4/Capsense.c **** *
 564:Generated_Source\PSoC4/Capsense.c **** * Summary:
 565:Generated_Source\PSoC4/Capsense.c **** *  Sets the scan settings and starts scanning a widget.
 566:Generated_Source\PSoC4/Capsense.c **** *
 567:Generated_Source\PSoC4/Capsense.c **** * Parameters:
 568:Generated_Source\PSoC4/Capsense.c **** *  uint32 widget: Widget number.
 569:Generated_Source\PSoC4/Capsense.c **** *
 570:Generated_Source\PSoC4/Capsense.c **** * Return:
 571:Generated_Source\PSoC4/Capsense.c **** *  None
 572:Generated_Source\PSoC4/Capsense.c **** *
 573:Generated_Source\PSoC4/Capsense.c **** * Global Variables:
 574:Generated_Source\PSoC4/Capsense.c **** *  Capsense_csdStatusVar - used to provide the status and mode of the scanning process.
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 24


 575:Generated_Source\PSoC4/Capsense.c **** *  Sets the busy status(scan in progress) and clears the single scan mode.
 576:Generated_Source\PSoC4/Capsense.c **** *  Capsense_sensorIndex - used to store a sensor scanning sensor number.
 577:Generated_Source\PSoC4/Capsense.c **** *  Sets to 0xFF and provided to function Capsense_FindNextSensor or
 578:Generated_Source\PSoC4/Capsense.c **** *  Capsense_sensorEnableMask[] - used to store bit masks of the enabled sensors.
 579:Generated_Source\PSoC4/Capsense.c **** *  Capsense_sensorEnableMaskBackup[] - used to backup bit masks of the enabled
 580:Generated_Source\PSoC4/Capsense.c **** *   sensors.
 581:Generated_Source\PSoC4/Capsense.c **** *
 582:Generated_Source\PSoC4/Capsense.c **** * Side Effects:
 583:Generated_Source\PSoC4/Capsense.c **** *  None
 584:Generated_Source\PSoC4/Capsense.c **** *
 585:Generated_Source\PSoC4/Capsense.c **** *******************************************************************************/
 586:Generated_Source\PSoC4/Capsense.c **** void Capsense_ScanWidget(uint32 widget)
 587:Generated_Source\PSoC4/Capsense.c **** {
 731              		.loc 1 587 0
 732              		.cfi_startproc
 733              		@ args = 0, pretend = 0, frame = 24
 734              		@ frame_needed = 1, uses_anonymous_args = 0
 735 0000 80B5     		push	{r7, lr}
 736              		.cfi_def_cfa_offset 8
 737              		.cfi_offset 7, -8
 738              		.cfi_offset 14, -4
 739 0002 86B0     		sub	sp, sp, #24
 740              		.cfi_def_cfa_offset 32
 741 0004 00AF     		add	r7, sp, #0
 742              		.cfi_def_cfa_register 7
 743 0006 7860     		str	r0, [r7, #4]
 588:Generated_Source\PSoC4/Capsense.c ****     uint32 sensorsPerWidget;
 589:Generated_Source\PSoC4/Capsense.c ****     uint32 lastSensor;
 590:Generated_Source\PSoC4/Capsense.c ****     uint32 snsIndex;
 591:Generated_Source\PSoC4/Capsense.c **** 
 592:Generated_Source\PSoC4/Capsense.c ****     /* Get first sensor in widget */
 593:Generated_Source\PSoC4/Capsense.c ****     Capsense_sensorIndex = Capsense_rawDataIndex[widget];
 744              		.loc 1 593 0
 745 0008 2E4A     		ldr	r2, .L42
 746 000a 7B68     		ldr	r3, [r7, #4]
 747 000c D318     		adds	r3, r2, r3
 748 000e 1A78     		ldrb	r2, [r3]
 749 0010 2D4B     		ldr	r3, .L42+4
 750 0012 1A70     		strb	r2, [r3]
 594:Generated_Source\PSoC4/Capsense.c **** 
 595:Generated_Source\PSoC4/Capsense.c ****     /* Get number of sensors in widget */
 596:Generated_Source\PSoC4/Capsense.c ****     sensorsPerWidget = Capsense_numberOfSensors[widget];
 751              		.loc 1 596 0
 752 0014 2D4A     		ldr	r2, .L42+8
 753 0016 7B68     		ldr	r3, [r7, #4]
 754 0018 D318     		adds	r3, r2, r3
 755 001a 1B78     		ldrb	r3, [r3]
 756 001c 7B61     		str	r3, [r7, #20]
 597:Generated_Source\PSoC4/Capsense.c **** 
 598:Generated_Source\PSoC4/Capsense.c ****     /* Check if generic Sensor */
 599:Generated_Source\PSoC4/Capsense.c ****     if(sensorsPerWidget == 0u)
 757              		.loc 1 599 0
 758 001e 7B69     		ldr	r3, [r7, #20]
 759 0020 002B     		cmp	r3, #0
 760 0022 01D1     		bne	.L33
 600:Generated_Source\PSoC4/Capsense.c ****     {
 601:Generated_Source\PSoC4/Capsense.c ****         sensorsPerWidget = 1u;
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 25


 761              		.loc 1 601 0
 762 0024 0123     		movs	r3, #1
 763 0026 7B61     		str	r3, [r7, #20]
 764              	.L33:
 602:Generated_Source\PSoC4/Capsense.c ****     }
 603:Generated_Source\PSoC4/Capsense.c **** 
 604:Generated_Source\PSoC4/Capsense.c ****     /* Get last sensor in widget */
 605:Generated_Source\PSoC4/Capsense.c ****     lastSensor = (Capsense_rawDataIndex[widget] + sensorsPerWidget) - 1u;
 765              		.loc 1 605 0
 766 0028 264A     		ldr	r2, .L42
 767 002a 7B68     		ldr	r3, [r7, #4]
 768 002c D318     		adds	r3, r2, r3
 769 002e 1B78     		ldrb	r3, [r3]
 770 0030 1A00     		movs	r2, r3
 771 0032 7B69     		ldr	r3, [r7, #20]
 772 0034 D318     		adds	r3, r2, r3
 773 0036 013B     		subs	r3, r3, #1
 774 0038 FB60     		str	r3, [r7, #12]
 606:Generated_Source\PSoC4/Capsense.c **** 
 607:Generated_Source\PSoC4/Capsense.c ****     /* Backup sensorEnableMask array */
 608:Generated_Source\PSoC4/Capsense.c ****     for(snsIndex = 0u; snsIndex < Capsense_TOTAL_SENSOR_MASK; snsIndex++)
 775              		.loc 1 608 0
 776 003a 0023     		movs	r3, #0
 777 003c 3B61     		str	r3, [r7, #16]
 778 003e 0BE0     		b	.L34
 779              	.L35:
 609:Generated_Source\PSoC4/Capsense.c ****     {
 610:Generated_Source\PSoC4/Capsense.c ****         /* Backup sensorEnableMask array */
 611:Generated_Source\PSoC4/Capsense.c ****         Capsense_sensorEnableMaskBackup[snsIndex] = Capsense_sensorEnableMask[snsIndex];
 780              		.loc 1 611 0 discriminator 3
 781 0040 234A     		ldr	r2, .L42+12
 782 0042 3B69     		ldr	r3, [r7, #16]
 783 0044 D318     		adds	r3, r2, r3
 784 0046 1978     		ldrb	r1, [r3]
 785 0048 224A     		ldr	r2, .L42+16
 786 004a 3B69     		ldr	r3, [r7, #16]
 787 004c D318     		adds	r3, r2, r3
 788 004e 0A1C     		adds	r2, r1, #0
 789 0050 1A70     		strb	r2, [r3]
 608:Generated_Source\PSoC4/Capsense.c ****     {
 790              		.loc 1 608 0 discriminator 3
 791 0052 3B69     		ldr	r3, [r7, #16]
 792 0054 0133     		adds	r3, r3, #1
 793 0056 3B61     		str	r3, [r7, #16]
 794              	.L34:
 608:Generated_Source\PSoC4/Capsense.c ****     {
 795              		.loc 1 608 0 is_stmt 0 discriminator 1
 796 0058 3B69     		ldr	r3, [r7, #16]
 797 005a 002B     		cmp	r3, #0
 798 005c F0D0     		beq	.L35
 612:Generated_Source\PSoC4/Capsense.c ****     }
 613:Generated_Source\PSoC4/Capsense.c **** 
 614:Generated_Source\PSoC4/Capsense.c ****     /* Update sensorEnableMask to scan the sensors that belong to widget */
 615:Generated_Source\PSoC4/Capsense.c ****     for(snsIndex = 0u; snsIndex < Capsense_TOTAL_SENSOR_COUNT; snsIndex++)
 799              		.loc 1 615 0 is_stmt 1
 800 005e 0023     		movs	r3, #0
 801 0060 3B61     		str	r3, [r7, #16]
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 26


 802 0062 1AE0     		b	.L36
 803              	.L39:
 616:Generated_Source\PSoC4/Capsense.c ****     {
 617:Generated_Source\PSoC4/Capsense.c ****         /* Update sensorEnableMask array bits to scan the widget only */
 618:Generated_Source\PSoC4/Capsense.c ****         if((snsIndex >= Capsense_sensorIndex) && (snsIndex <= lastSensor))
 804              		.loc 1 618 0
 805 0064 184B     		ldr	r3, .L42+4
 806 0066 1B78     		ldrb	r3, [r3]
 807 0068 DBB2     		uxtb	r3, r3
 808 006a 1A00     		movs	r2, r3
 809 006c 3B69     		ldr	r3, [r7, #16]
 810 006e 9A42     		cmp	r2, r3
 811 0070 0AD8     		bhi	.L37
 812              		.loc 1 618 0 is_stmt 0 discriminator 1
 813 0072 3A69     		ldr	r2, [r7, #16]
 814 0074 FB68     		ldr	r3, [r7, #12]
 815 0076 9A42     		cmp	r2, r3
 816 0078 06D8     		bhi	.L37
 619:Generated_Source\PSoC4/Capsense.c ****         {
 620:Generated_Source\PSoC4/Capsense.c ****             /* Set sensor bit to scan */
 621:Generated_Source\PSoC4/Capsense.c ****             Capsense_SetBitValue(Capsense_sensorEnableMask, snsIndex, 1u);
 817              		.loc 1 621 0 is_stmt 1
 818 007a 3969     		ldr	r1, [r7, #16]
 819 007c 144B     		ldr	r3, .L42+12
 820 007e 0122     		movs	r2, #1
 821 0080 1800     		movs	r0, r3
 822 0082 FFF7FEFF 		bl	Capsense_SetBitValue
 823 0086 05E0     		b	.L38
 824              	.L37:
 622:Generated_Source\PSoC4/Capsense.c ****         }
 623:Generated_Source\PSoC4/Capsense.c ****         else
 624:Generated_Source\PSoC4/Capsense.c ****         {
 625:Generated_Source\PSoC4/Capsense.c ****             /* Reset sensor bit to do not scan */
 626:Generated_Source\PSoC4/Capsense.c ****             Capsense_SetBitValue(Capsense_sensorEnableMask, snsIndex, 0u);
 825              		.loc 1 626 0
 826 0088 3969     		ldr	r1, [r7, #16]
 827 008a 114B     		ldr	r3, .L42+12
 828 008c 0022     		movs	r2, #0
 829 008e 1800     		movs	r0, r3
 830 0090 FFF7FEFF 		bl	Capsense_SetBitValue
 831              	.L38:
 615:Generated_Source\PSoC4/Capsense.c ****     {
 832              		.loc 1 615 0 discriminator 2
 833 0094 3B69     		ldr	r3, [r7, #16]
 834 0096 0133     		adds	r3, r3, #1
 835 0098 3B61     		str	r3, [r7, #16]
 836              	.L36:
 615:Generated_Source\PSoC4/Capsense.c ****     {
 837              		.loc 1 615 0 is_stmt 0 discriminator 1
 838 009a 3B69     		ldr	r3, [r7, #16]
 839 009c 002B     		cmp	r3, #0
 840 009e E1D0     		beq	.L39
 627:Generated_Source\PSoC4/Capsense.c ****         }
 628:Generated_Source\PSoC4/Capsense.c ****     }
 629:Generated_Source\PSoC4/Capsense.c **** 
 630:Generated_Source\PSoC4/Capsense.c ****     /* Check end of scan condition */
 631:Generated_Source\PSoC4/Capsense.c ****     if(Capsense_sensorIndex < Capsense_TOTAL_SENSOR_COUNT)
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 27


 841              		.loc 1 631 0 is_stmt 1
 842 00a0 094B     		ldr	r3, .L42+4
 843 00a2 1B78     		ldrb	r3, [r3]
 844 00a4 DBB2     		uxtb	r3, r3
 845 00a6 002B     		cmp	r3, #0
 846 00a8 08D1     		bne	.L41
 632:Generated_Source\PSoC4/Capsense.c ****     {
 633:Generated_Source\PSoC4/Capsense.c ****         /* Set widget busy bit in status/control variable*/
 634:Generated_Source\PSoC4/Capsense.c ****         Capsense_csdStatusVar = (Capsense_SW_STS_BUSY | Capsense_SW_CTRL_WIDGET_SCAN);
 847              		.loc 1 634 0
 848 00aa 0B4B     		ldr	r3, .L42+20
 849 00ac 4122     		movs	r2, #65
 850 00ae 1A70     		strb	r2, [r3]
 635:Generated_Source\PSoC4/Capsense.c ****         /* Scan first sensor of widget*/
 636:Generated_Source\PSoC4/Capsense.c ****         Capsense_PreScan((uint32)Capsense_sensorIndex);
 851              		.loc 1 636 0
 852 00b0 054B     		ldr	r3, .L42+4
 853 00b2 1B78     		ldrb	r3, [r3]
 854 00b4 DBB2     		uxtb	r3, r3
 855 00b6 1800     		movs	r0, r3
 856 00b8 FFF7FEFF 		bl	Capsense_PreScan
 857              	.L41:
 637:Generated_Source\PSoC4/Capsense.c ****     }
 638:Generated_Source\PSoC4/Capsense.c **** }
 858              		.loc 1 638 0
 859 00bc C046     		nop
 860 00be BD46     		mov	sp, r7
 861 00c0 06B0     		add	sp, sp, #24
 862              		@ sp needed
 863 00c2 80BD     		pop	{r7, pc}
 864              	.L43:
 865              		.align	2
 866              	.L42:
 867 00c4 00000000 		.word	Capsense_rawDataIndex
 868 00c8 00000000 		.word	Capsense_sensorIndex
 869 00cc 00000000 		.word	Capsense_numberOfSensors
 870 00d0 00000000 		.word	Capsense_sensorEnableMask
 871 00d4 00000000 		.word	Capsense_sensorEnableMaskBackup
 872 00d8 00000000 		.word	Capsense_csdStatusVar
 873              		.cfi_endproc
 874              	.LFE43:
 875              		.size	Capsense_ScanWidget, .-Capsense_ScanWidget
 876              		.section	.text.Capsense_ScanEnabledWidgets,"ax",%progbits
 877              		.align	2
 878              		.global	Capsense_ScanEnabledWidgets
 879              		.code	16
 880              		.thumb_func
 881              		.type	Capsense_ScanEnabledWidgets, %function
 882              	Capsense_ScanEnabledWidgets:
 883              	.LFB44:
 639:Generated_Source\PSoC4/Capsense.c **** #endif /* (0u != Capsense_CSHL_API_GENERATE) */
 640:Generated_Source\PSoC4/Capsense.c **** 
 641:Generated_Source\PSoC4/Capsense.c **** 
 642:Generated_Source\PSoC4/Capsense.c **** /*******************************************************************************
 643:Generated_Source\PSoC4/Capsense.c **** * Function Name: Capsense_ScanEnableWidgets
 644:Generated_Source\PSoC4/Capsense.c **** ********************************************************************************
 645:Generated_Source\PSoC4/Capsense.c **** *
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 28


 646:Generated_Source\PSoC4/Capsense.c **** * Summary:
 647:Generated_Source\PSoC4/Capsense.c **** *  This is the preferred method to scan all of the enabled widgets.
 648:Generated_Source\PSoC4/Capsense.c **** *  The API starts scanning a sensor within the enabled widgets.
 649:Generated_Source\PSoC4/Capsense.c **** *  The ISR continues scanning the sensors until all the enabled widgets are scanned.
 650:Generated_Source\PSoC4/Capsense.c **** *  Use of the ISR ensures this function is non-blocking.
 651:Generated_Source\PSoC4/Capsense.c **** *  All the widgets are enabled by default except proximity widgets.
 652:Generated_Source\PSoC4/Capsense.c **** *  The proximity widgets must be manually enabled as their long scan time
 653:Generated_Source\PSoC4/Capsense.c **** *  is incompatible with a fast response required of other widget types.
 654:Generated_Source\PSoC4/Capsense.c **** *
 655:Generated_Source\PSoC4/Capsense.c **** * Parameters:
 656:Generated_Source\PSoC4/Capsense.c **** *  None
 657:Generated_Source\PSoC4/Capsense.c **** *
 658:Generated_Source\PSoC4/Capsense.c **** * Return:
 659:Generated_Source\PSoC4/Capsense.c **** *  None
 660:Generated_Source\PSoC4/Capsense.c **** *
 661:Generated_Source\PSoC4/Capsense.c **** * Global Variables:
 662:Generated_Source\PSoC4/Capsense.c **** *  Capsense_csdStatusVar - used to provide the status and mode of the scanning process.
 663:Generated_Source\PSoC4/Capsense.c **** *  Sets the busy status(scan in progress) and clears the single scan mode.
 664:Generated_Source\PSoC4/Capsense.c **** *  Capsense_sensorIndex - used to store a sensor scanning sensor number.
 665:Generated_Source\PSoC4/Capsense.c **** *  Sets to 0xFF and provided to function Capsense_FindNextSensor or
 666:Generated_Source\PSoC4/Capsense.c **** *
 667:Generated_Source\PSoC4/Capsense.c **** * Side Effects:
 668:Generated_Source\PSoC4/Capsense.c **** *  None
 669:Generated_Source\PSoC4/Capsense.c **** *
 670:Generated_Source\PSoC4/Capsense.c **** *******************************************************************************/
 671:Generated_Source\PSoC4/Capsense.c **** void Capsense_ScanEnabledWidgets(void)
 672:Generated_Source\PSoC4/Capsense.c **** {
 884              		.loc 1 672 0
 885              		.cfi_startproc
 886              		@ args = 0, pretend = 0, frame = 0
 887              		@ frame_needed = 1, uses_anonymous_args = 0
 888 0000 80B5     		push	{r7, lr}
 889              		.cfi_def_cfa_offset 8
 890              		.cfi_offset 7, -8
 891              		.cfi_offset 14, -4
 892 0002 00AF     		add	r7, sp, #0
 893              		.cfi_def_cfa_register 7
 673:Generated_Source\PSoC4/Capsense.c ****     /* Clears status/control variable and set sensorIndex */
 674:Generated_Source\PSoC4/Capsense.c ****     Capsense_csdStatusVar = 0u;
 894              		.loc 1 674 0
 895 0004 124B     		ldr	r3, .L47
 896 0006 0022     		movs	r2, #0
 897 0008 1A70     		strb	r2, [r3]
 675:Generated_Source\PSoC4/Capsense.c ****     Capsense_sensorIndex = 0xFFu;
 898              		.loc 1 675 0
 899 000a 124B     		ldr	r3, .L47+4
 900 000c FF22     		movs	r2, #255
 901 000e 1A70     		strb	r2, [r3]
 676:Generated_Source\PSoC4/Capsense.c **** 
 677:Generated_Source\PSoC4/Capsense.c ****     /* Find next sensor */
 678:Generated_Source\PSoC4/Capsense.c ****     Capsense_sensorIndex = (uint8)Capsense_FindNextSensor(Capsense_sensorIndex);
 902              		.loc 1 678 0
 903 0010 104B     		ldr	r3, .L47+4
 904 0012 1B78     		ldrb	r3, [r3]
 905 0014 DBB2     		uxtb	r3, r3
 906 0016 1800     		movs	r0, r3
 907 0018 FFF7FEFF 		bl	Capsense_FindNextSensor
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 29


 908 001c 0300     		movs	r3, r0
 909 001e 1A00     		movs	r2, r3
 910 0020 0C4B     		ldr	r3, .L47+4
 911 0022 1A70     		strb	r2, [r3]
 679:Generated_Source\PSoC4/Capsense.c **** 
 680:Generated_Source\PSoC4/Capsense.c ****     /* Check end of scan condition */
 681:Generated_Source\PSoC4/Capsense.c ****     if(Capsense_sensorIndex < Capsense_TOTAL_SENSOR_COUNT)
 912              		.loc 1 681 0
 913 0024 0B4B     		ldr	r3, .L47+4
 914 0026 1B78     		ldrb	r3, [r3]
 915 0028 DBB2     		uxtb	r3, r3
 916 002a 002B     		cmp	r3, #0
 917 002c 0DD1     		bne	.L46
 682:Generated_Source\PSoC4/Capsense.c ****     {
 683:Generated_Source\PSoC4/Capsense.c ****         Capsense_csdStatusVar |= Capsense_SW_STS_BUSY;
 918              		.loc 1 683 0
 919 002e 084B     		ldr	r3, .L47
 920 0030 1B78     		ldrb	r3, [r3]
 921 0032 DBB2     		uxtb	r3, r3
 922 0034 0122     		movs	r2, #1
 923 0036 1343     		orrs	r3, r2
 924 0038 DAB2     		uxtb	r2, r3
 925 003a 054B     		ldr	r3, .L47
 926 003c 1A70     		strb	r2, [r3]
 684:Generated_Source\PSoC4/Capsense.c ****         Capsense_PreScan((uint32)Capsense_sensorIndex);
 927              		.loc 1 684 0
 928 003e 054B     		ldr	r3, .L47+4
 929 0040 1B78     		ldrb	r3, [r3]
 930 0042 DBB2     		uxtb	r3, r3
 931 0044 1800     		movs	r0, r3
 932 0046 FFF7FEFF 		bl	Capsense_PreScan
 933              	.L46:
 685:Generated_Source\PSoC4/Capsense.c ****     }
 686:Generated_Source\PSoC4/Capsense.c **** }
 934              		.loc 1 686 0
 935 004a C046     		nop
 936 004c BD46     		mov	sp, r7
 937              		@ sp needed
 938 004e 80BD     		pop	{r7, pc}
 939              	.L48:
 940              		.align	2
 941              	.L47:
 942 0050 00000000 		.word	Capsense_csdStatusVar
 943 0054 00000000 		.word	Capsense_sensorIndex
 944              		.cfi_endproc
 945              	.LFE44:
 946              		.size	Capsense_ScanEnabledWidgets, .-Capsense_ScanEnabledWidgets
 947              		.section	.text.Capsense_IsBusy,"ax",%progbits
 948              		.align	2
 949              		.global	Capsense_IsBusy
 950              		.code	16
 951              		.thumb_func
 952              		.type	Capsense_IsBusy, %function
 953              	Capsense_IsBusy:
 954              	.LFB45:
 687:Generated_Source\PSoC4/Capsense.c **** 
 688:Generated_Source\PSoC4/Capsense.c **** 
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 30


 689:Generated_Source\PSoC4/Capsense.c **** /*******************************************************************************
 690:Generated_Source\PSoC4/Capsense.c **** * Function Name: Capsense_IsBusy
 691:Generated_Source\PSoC4/Capsense.c **** ********************************************************************************
 692:Generated_Source\PSoC4/Capsense.c **** *
 693:Generated_Source\PSoC4/Capsense.c **** * Summary:
 694:Generated_Source\PSoC4/Capsense.c **** *  Returns the state of the CapSense component. 1 means that scanning in
 695:Generated_Source\PSoC4/Capsense.c **** *  progress and 0 means that scanning is complete.
 696:Generated_Source\PSoC4/Capsense.c **** *
 697:Generated_Source\PSoC4/Capsense.c **** * Parameters:
 698:Generated_Source\PSoC4/Capsense.c **** *  None
 699:Generated_Source\PSoC4/Capsense.c **** *
 700:Generated_Source\PSoC4/Capsense.c **** * Return:
 701:Generated_Source\PSoC4/Capsense.c **** *  Returns the state of scanning. 1 - scanning in progress, 0 - scanning
 702:Generated_Source\PSoC4/Capsense.c **** *  completed.
 703:Generated_Source\PSoC4/Capsense.c **** *
 704:Generated_Source\PSoC4/Capsense.c **** * Global Variables:
 705:Generated_Source\PSoC4/Capsense.c **** *  Capsense_csdStatusVar - used to provide the status and mode of the scanning process.
 706:Generated_Source\PSoC4/Capsense.c **** *  Checks the busy status.
 707:Generated_Source\PSoC4/Capsense.c **** *
 708:Generated_Source\PSoC4/Capsense.c **** * Side Effects:
 709:Generated_Source\PSoC4/Capsense.c **** *  None
 710:Generated_Source\PSoC4/Capsense.c **** *
 711:Generated_Source\PSoC4/Capsense.c **** *******************************************************************************/
 712:Generated_Source\PSoC4/Capsense.c **** uint32 Capsense_IsBusy(void)
 713:Generated_Source\PSoC4/Capsense.c **** {
 955              		.loc 1 713 0
 956              		.cfi_startproc
 957              		@ args = 0, pretend = 0, frame = 0
 958              		@ frame_needed = 1, uses_anonymous_args = 0
 959 0000 80B5     		push	{r7, lr}
 960              		.cfi_def_cfa_offset 8
 961              		.cfi_offset 7, -8
 962              		.cfi_offset 14, -4
 963 0002 00AF     		add	r7, sp, #0
 964              		.cfi_def_cfa_register 7
 714:Generated_Source\PSoC4/Capsense.c ****     return ((uint32)((0u != (Capsense_csdStatusVar & Capsense_SW_STS_BUSY)) ? 1u : 0u));
 965              		.loc 1 714 0
 966 0004 044B     		ldr	r3, .L51
 967 0006 1B78     		ldrb	r3, [r3]
 968 0008 DBB2     		uxtb	r3, r3
 969 000a 1A00     		movs	r2, r3
 970 000c 0123     		movs	r3, #1
 971 000e 1340     		ands	r3, r2
 715:Generated_Source\PSoC4/Capsense.c **** }
 972              		.loc 1 715 0
 973 0010 1800     		movs	r0, r3
 974 0012 BD46     		mov	sp, r7
 975              		@ sp needed
 976 0014 80BD     		pop	{r7, pc}
 977              	.L52:
 978 0016 C046     		.align	2
 979              	.L51:
 980 0018 00000000 		.word	Capsense_csdStatusVar
 981              		.cfi_endproc
 982              	.LFE45:
 983              		.size	Capsense_IsBusy, .-Capsense_IsBusy
 984              		.section	.text.Capsense_ReadSensorRaw,"ax",%progbits
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 31


 985              		.align	2
 986              		.global	Capsense_ReadSensorRaw
 987              		.code	16
 988              		.thumb_func
 989              		.type	Capsense_ReadSensorRaw, %function
 990              	Capsense_ReadSensorRaw:
 991              	.LFB46:
 716:Generated_Source\PSoC4/Capsense.c **** 
 717:Generated_Source\PSoC4/Capsense.c **** 
 718:Generated_Source\PSoC4/Capsense.c **** /*******************************************************************************
 719:Generated_Source\PSoC4/Capsense.c **** * Function Name: Capsense_ReadSensorRaw
 720:Generated_Source\PSoC4/Capsense.c **** ********************************************************************************
 721:Generated_Source\PSoC4/Capsense.c **** *
 722:Generated_Source\PSoC4/Capsense.c **** * Summary:
 723:Generated_Source\PSoC4/Capsense.c **** *  Returns sensor raw data from the global CapSense_sensorRaw[ ] array.
 724:Generated_Source\PSoC4/Capsense.c **** *  Each scan sensor has a unique number within the sensor array.
 725:Generated_Source\PSoC4/Capsense.c **** *  This number is assigned by the CapSense customizer in sequence.
 726:Generated_Source\PSoC4/Capsense.c **** *  Raw data can be used to perform calculations outside of the CapSense
 727:Generated_Source\PSoC4/Capsense.c **** *  provided framework.
 728:Generated_Source\PSoC4/Capsense.c **** *
 729:Generated_Source\PSoC4/Capsense.c **** * Parameters:
 730:Generated_Source\PSoC4/Capsense.c **** *  sensor:  Sensor number.
 731:Generated_Source\PSoC4/Capsense.c **** *
 732:Generated_Source\PSoC4/Capsense.c **** * Return:
 733:Generated_Source\PSoC4/Capsense.c **** *  Returns the current raw data value for a defined sensor number.
 734:Generated_Source\PSoC4/Capsense.c **** *
 735:Generated_Source\PSoC4/Capsense.c **** * Global Variables:
 736:Generated_Source\PSoC4/Capsense.c **** *  Capsense_sensorRaw[] - used to store sensors raw data.
 737:Generated_Source\PSoC4/Capsense.c **** *
 738:Generated_Source\PSoC4/Capsense.c **** * Side Effects:
 739:Generated_Source\PSoC4/Capsense.c **** *  None
 740:Generated_Source\PSoC4/Capsense.c **** *
 741:Generated_Source\PSoC4/Capsense.c **** *******************************************************************************/
 742:Generated_Source\PSoC4/Capsense.c **** uint16 Capsense_ReadSensorRaw(uint32 sensor)
 743:Generated_Source\PSoC4/Capsense.c **** {
 992              		.loc 1 743 0
 993              		.cfi_startproc
 994              		@ args = 0, pretend = 0, frame = 8
 995              		@ frame_needed = 1, uses_anonymous_args = 0
 996 0000 80B5     		push	{r7, lr}
 997              		.cfi_def_cfa_offset 8
 998              		.cfi_offset 7, -8
 999              		.cfi_offset 14, -4
 1000 0002 82B0     		sub	sp, sp, #8
 1001              		.cfi_def_cfa_offset 16
 1002 0004 00AF     		add	r7, sp, #0
 1003              		.cfi_def_cfa_register 7
 1004 0006 7860     		str	r0, [r7, #4]
 744:Generated_Source\PSoC4/Capsense.c ****     return Capsense_sensorRaw[sensor];
 1005              		.loc 1 744 0
 1006 0008 034B     		ldr	r3, .L55
 1007 000a 7A68     		ldr	r2, [r7, #4]
 1008 000c 5200     		lsls	r2, r2, #1
 1009 000e D35A     		ldrh	r3, [r2, r3]
 745:Generated_Source\PSoC4/Capsense.c **** }
 1010              		.loc 1 745 0
 1011 0010 1800     		movs	r0, r3
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 32


 1012 0012 BD46     		mov	sp, r7
 1013 0014 02B0     		add	sp, sp, #8
 1014              		@ sp needed
 1015 0016 80BD     		pop	{r7, pc}
 1016              	.L56:
 1017              		.align	2
 1018              	.L55:
 1019 0018 00000000 		.word	Capsense_sensorRaw
 1020              		.cfi_endproc
 1021              	.LFE46:
 1022              		.size	Capsense_ReadSensorRaw, .-Capsense_ReadSensorRaw
 1023              		.section	.text.Capsense_WriteSensorRaw,"ax",%progbits
 1024              		.align	2
 1025              		.global	Capsense_WriteSensorRaw
 1026              		.code	16
 1027              		.thumb_func
 1028              		.type	Capsense_WriteSensorRaw, %function
 1029              	Capsense_WriteSensorRaw:
 1030              	.LFB47:
 746:Generated_Source\PSoC4/Capsense.c **** 
 747:Generated_Source\PSoC4/Capsense.c **** 
 748:Generated_Source\PSoC4/Capsense.c **** /*******************************************************************************
 749:Generated_Source\PSoC4/Capsense.c **** * Function Name: Capsense_WriteSensorRaw
 750:Generated_Source\PSoC4/Capsense.c **** ********************************************************************************
 751:Generated_Source\PSoC4/Capsense.c **** *
 752:Generated_Source\PSoC4/Capsense.c **** * Summary:
 753:Generated_Source\PSoC4/Capsense.c **** *  This API writes the raw count value passed as an argument to the sensor Raw count array.
 754:Generated_Source\PSoC4/Capsense.c **** *
 755:Generated_Source\PSoC4/Capsense.c **** * Parameters:
 756:Generated_Source\PSoC4/Capsense.c **** *  sensor:  Sensor number.
 757:Generated_Source\PSoC4/Capsense.c **** *  value: Raw count value.
 758:Generated_Source\PSoC4/Capsense.c **** *
 759:Generated_Source\PSoC4/Capsense.c **** * Global Variables:
 760:Generated_Source\PSoC4/Capsense.c **** *  Capsense_sensorRaw[] - used to store sensors raw data.
 761:Generated_Source\PSoC4/Capsense.c **** *
 762:Generated_Source\PSoC4/Capsense.c **** * Return:
 763:Generated_Source\PSoC4/Capsense.c **** *  None
 764:Generated_Source\PSoC4/Capsense.c **** *
 765:Generated_Source\PSoC4/Capsense.c **** * Side Effects:
 766:Generated_Source\PSoC4/Capsense.c **** *  None
 767:Generated_Source\PSoC4/Capsense.c **** *
 768:Generated_Source\PSoC4/Capsense.c **** *******************************************************************************/
 769:Generated_Source\PSoC4/Capsense.c **** void Capsense_WriteSensorRaw(uint32 sensor, uint16 value)
 770:Generated_Source\PSoC4/Capsense.c **** {
 1031              		.loc 1 770 0
 1032              		.cfi_startproc
 1033              		@ args = 0, pretend = 0, frame = 8
 1034              		@ frame_needed = 1, uses_anonymous_args = 0
 1035 0000 80B5     		push	{r7, lr}
 1036              		.cfi_def_cfa_offset 8
 1037              		.cfi_offset 7, -8
 1038              		.cfi_offset 14, -4
 1039 0002 82B0     		sub	sp, sp, #8
 1040              		.cfi_def_cfa_offset 16
 1041 0004 00AF     		add	r7, sp, #0
 1042              		.cfi_def_cfa_register 7
 1043 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 33


 1044 0008 0A00     		movs	r2, r1
 1045 000a BB1C     		adds	r3, r7, #2
 1046 000c 1A80     		strh	r2, [r3]
 771:Generated_Source\PSoC4/Capsense.c ****     Capsense_sensorRaw[sensor] = value;
 1047              		.loc 1 771 0
 1048 000e 054B     		ldr	r3, .L58
 1049 0010 7A68     		ldr	r2, [r7, #4]
 1050 0012 5200     		lsls	r2, r2, #1
 1051 0014 B91C     		adds	r1, r7, #2
 1052 0016 0988     		ldrh	r1, [r1]
 1053 0018 D152     		strh	r1, [r2, r3]
 772:Generated_Source\PSoC4/Capsense.c **** }
 1054              		.loc 1 772 0
 1055 001a C046     		nop
 1056 001c BD46     		mov	sp, r7
 1057 001e 02B0     		add	sp, sp, #8
 1058              		@ sp needed
 1059 0020 80BD     		pop	{r7, pc}
 1060              	.L59:
 1061 0022 C046     		.align	2
 1062              	.L58:
 1063 0024 00000000 		.word	Capsense_sensorRaw
 1064              		.cfi_endproc
 1065              	.LFE47:
 1066              		.size	Capsense_WriteSensorRaw, .-Capsense_WriteSensorRaw
 1067              		.section	.text.Capsense_SetScanResolution,"ax",%progbits
 1068              		.align	2
 1069              		.global	Capsense_SetScanResolution
 1070              		.code	16
 1071              		.thumb_func
 1072              		.type	Capsense_SetScanResolution, %function
 1073              	Capsense_SetScanResolution:
 1074              	.LFB48:
 773:Generated_Source\PSoC4/Capsense.c **** 
 774:Generated_Source\PSoC4/Capsense.c **** 
 775:Generated_Source\PSoC4/Capsense.c **** #if (Capsense_TUNING_METHOD != Capsense__TUNING_NONE)
 776:Generated_Source\PSoC4/Capsense.c ****     /*******************************************************************************
 777:Generated_Source\PSoC4/Capsense.c ****     * Function Name: Capsense_SetScanResolution
 778:Generated_Source\PSoC4/Capsense.c ****     ********************************************************************************
 779:Generated_Source\PSoC4/Capsense.c ****     *
 780:Generated_Source\PSoC4/Capsense.c ****     * Summary:
 781:Generated_Source\PSoC4/Capsense.c ****     *  Sets a value of the sensor scan resolution for a widget.
 782:Generated_Source\PSoC4/Capsense.c ****     *  The MIN resolution can be set 8-bit. The MAX Resolution can be set 16 bit.
 783:Generated_Source\PSoC4/Capsense.c ****     *  This function is not available for the tuning mode "None".
 784:Generated_Source\PSoC4/Capsense.c ****     *
 785:Generated_Source\PSoC4/Capsense.c ****     * Parameters:
 786:Generated_Source\PSoC4/Capsense.c ****     *  widget:     Widget index.
 787:Generated_Source\PSoC4/Capsense.c ****     *  resolution: Represents the resolution value. The following defines which are available in th
 788:Generated_Source\PSoC4/Capsense.c ****     *              Capsense.h file should be used:
 789:Generated_Source\PSoC4/Capsense.c ****     *              Capsense_RESOLUTION_6_BITS
 790:Generated_Source\PSoC4/Capsense.c ****     *              Capsense_RESOLUTION_7_BITS
 791:Generated_Source\PSoC4/Capsense.c ****     *              Capsense_RESOLUTION_8_BITS
 792:Generated_Source\PSoC4/Capsense.c ****     *              Capsense_RESOLUTION_9_BITS
 793:Generated_Source\PSoC4/Capsense.c ****     *              Capsense_RESOLUTION_10_BITS
 794:Generated_Source\PSoC4/Capsense.c ****     *              Capsense_RESOLUTION_11_BITS
 795:Generated_Source\PSoC4/Capsense.c ****     *              Capsense_RESOLUTION_12_BITS
 796:Generated_Source\PSoC4/Capsense.c ****     *              Capsense_RESOLUTION_13_BITS
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 34


 797:Generated_Source\PSoC4/Capsense.c ****     *              Capsense_RESOLUTION_14_BITS
 798:Generated_Source\PSoC4/Capsense.c ****     *              Capsense_RESOLUTION_15_BITS
 799:Generated_Source\PSoC4/Capsense.c ****     *              Capsense_RESOLUTION_16_BITS
 800:Generated_Source\PSoC4/Capsense.c ****     *
 801:Generated_Source\PSoC4/Capsense.c ****     * Return:
 802:Generated_Source\PSoC4/Capsense.c ****     *  None
 803:Generated_Source\PSoC4/Capsense.c ****     *
 804:Generated_Source\PSoC4/Capsense.c ****     * Global Variables:
 805:Generated_Source\PSoC4/Capsense.c ****     *  Capsense_widgetResolution[] - used to store scan resolution of each widget.
 806:Generated_Source\PSoC4/Capsense.c ****     *
 807:Generated_Source\PSoC4/Capsense.c ****     * Side Effects:
 808:Generated_Source\PSoC4/Capsense.c ****     *  None
 809:Generated_Source\PSoC4/Capsense.c ****     *
 810:Generated_Source\PSoC4/Capsense.c ****     *******************************************************************************/
 811:Generated_Source\PSoC4/Capsense.c ****     void Capsense_SetScanResolution(uint32 widget, uint32 resolution)
 812:Generated_Source\PSoC4/Capsense.c ****     {
 1075              		.loc 1 812 0
 1076              		.cfi_startproc
 1077              		@ args = 0, pretend = 0, frame = 8
 1078              		@ frame_needed = 1, uses_anonymous_args = 0
 1079 0000 80B5     		push	{r7, lr}
 1080              		.cfi_def_cfa_offset 8
 1081              		.cfi_offset 7, -8
 1082              		.cfi_offset 14, -4
 1083 0002 82B0     		sub	sp, sp, #8
 1084              		.cfi_def_cfa_offset 16
 1085 0004 00AF     		add	r7, sp, #0
 1086              		.cfi_def_cfa_register 7
 1087 0006 7860     		str	r0, [r7, #4]
 1088 0008 3960     		str	r1, [r7]
 813:Generated_Source\PSoC4/Capsense.c ****         Capsense_widgetResolution[widget] = resolution;
 1089              		.loc 1 813 0
 1090 000a 044B     		ldr	r3, .L61
 1091 000c 7A68     		ldr	r2, [r7, #4]
 1092 000e 9200     		lsls	r2, r2, #2
 1093 0010 3968     		ldr	r1, [r7]
 1094 0012 D150     		str	r1, [r2, r3]
 814:Generated_Source\PSoC4/Capsense.c ****     }
 1095              		.loc 1 814 0
 1096 0014 C046     		nop
 1097 0016 BD46     		mov	sp, r7
 1098 0018 02B0     		add	sp, sp, #8
 1099              		@ sp needed
 1100 001a 80BD     		pop	{r7, pc}
 1101              	.L62:
 1102              		.align	2
 1103              	.L61:
 1104 001c 00000000 		.word	Capsense_widgetResolution
 1105              		.cfi_endproc
 1106              	.LFE48:
 1107              		.size	Capsense_SetScanResolution, .-Capsense_SetScanResolution
 1108              		.section	.text.Capsense_GetScanResolution,"ax",%progbits
 1109              		.align	2
 1110              		.global	Capsense_GetScanResolution
 1111              		.code	16
 1112              		.thumb_func
 1113              		.type	Capsense_GetScanResolution, %function
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 35


 1114              	Capsense_GetScanResolution:
 1115              	.LFB49:
 815:Generated_Source\PSoC4/Capsense.c **** #endif /* (Capsense_TUNING_METHOD != Capsense__TUNING_NONE) */
 816:Generated_Source\PSoC4/Capsense.c **** 
 817:Generated_Source\PSoC4/Capsense.c **** 
 818:Generated_Source\PSoC4/Capsense.c **** /*******************************************************************************
 819:Generated_Source\PSoC4/Capsense.c **** * Function Name: Capsense_GetScanResolution
 820:Generated_Source\PSoC4/Capsense.c **** ********************************************************************************
 821:Generated_Source\PSoC4/Capsense.c **** *
 822:Generated_Source\PSoC4/Capsense.c **** * Summary:
 823:Generated_Source\PSoC4/Capsense.c **** *  Returns the resolution value for the appropriate sensor.
 824:Generated_Source\PSoC4/Capsense.c **** *  This function is not available for tuning mode "None".
 825:Generated_Source\PSoC4/Capsense.c **** *
 826:Generated_Source\PSoC4/Capsense.c **** * Parameters:
 827:Generated_Source\PSoC4/Capsense.c **** *  widget:     Widget index.
 828:Generated_Source\PSoC4/Capsense.c **** *
 829:Generated_Source\PSoC4/Capsense.c **** * Return:
 830:Generated_Source\PSoC4/Capsense.c **** *  resolution: Returns the resolution value for the appropriate sensor.
 831:Generated_Source\PSoC4/Capsense.c **** *              The resolution values are defined in the Capsense.h file
 832:Generated_Source\PSoC4/Capsense.c **** *              The defines are encountered below:
 833:Generated_Source\PSoC4/Capsense.c **** *              Capsense_RESOLUTION_6_BITS
 834:Generated_Source\PSoC4/Capsense.c **** *              Capsense_RESOLUTION_7_BITS
 835:Generated_Source\PSoC4/Capsense.c **** *              Capsense_RESOLUTION_8_BITS
 836:Generated_Source\PSoC4/Capsense.c **** *              Capsense_RESOLUTION_9_BITS
 837:Generated_Source\PSoC4/Capsense.c **** *              Capsense_RESOLUTION_10_BITS
 838:Generated_Source\PSoC4/Capsense.c **** *              Capsense_RESOLUTION_11_BITS
 839:Generated_Source\PSoC4/Capsense.c **** *              Capsense_RESOLUTION_12_BITS
 840:Generated_Source\PSoC4/Capsense.c **** *              Capsense_RESOLUTION_13_BITS
 841:Generated_Source\PSoC4/Capsense.c **** *              Capsense_RESOLUTION_14_BITS
 842:Generated_Source\PSoC4/Capsense.c **** *              Capsense_RESOLUTION_15_BITS
 843:Generated_Source\PSoC4/Capsense.c **** *              Capsense_RESOLUTION_16_BITS
 844:Generated_Source\PSoC4/Capsense.c **** *
 845:Generated_Source\PSoC4/Capsense.c **** * Global Variables:
 846:Generated_Source\PSoC4/Capsense.c **** *  Capsense_widgetResolution[] - used to store scan resolution of every widget.
 847:Generated_Source\PSoC4/Capsense.c **** *
 848:Generated_Source\PSoC4/Capsense.c **** * Side Effects:
 849:Generated_Source\PSoC4/Capsense.c **** *  None
 850:Generated_Source\PSoC4/Capsense.c **** *
 851:Generated_Source\PSoC4/Capsense.c **** *******************************************************************************/
 852:Generated_Source\PSoC4/Capsense.c **** uint32 Capsense_GetScanResolution(uint32 widget)
 853:Generated_Source\PSoC4/Capsense.c **** {
 1116              		.loc 1 853 0
 1117              		.cfi_startproc
 1118              		@ args = 0, pretend = 0, frame = 8
 1119              		@ frame_needed = 1, uses_anonymous_args = 0
 1120 0000 80B5     		push	{r7, lr}
 1121              		.cfi_def_cfa_offset 8
 1122              		.cfi_offset 7, -8
 1123              		.cfi_offset 14, -4
 1124 0002 82B0     		sub	sp, sp, #8
 1125              		.cfi_def_cfa_offset 16
 1126 0004 00AF     		add	r7, sp, #0
 1127              		.cfi_def_cfa_register 7
 1128 0006 7860     		str	r0, [r7, #4]
 854:Generated_Source\PSoC4/Capsense.c ****     return(Capsense_widgetResolution[widget]);
 1129              		.loc 1 854 0
 1130 0008 034B     		ldr	r3, .L65
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 36


 1131 000a 7A68     		ldr	r2, [r7, #4]
 1132 000c 9200     		lsls	r2, r2, #2
 1133 000e D358     		ldr	r3, [r2, r3]
 855:Generated_Source\PSoC4/Capsense.c **** }
 1134              		.loc 1 855 0
 1135 0010 1800     		movs	r0, r3
 1136 0012 BD46     		mov	sp, r7
 1137 0014 02B0     		add	sp, sp, #8
 1138              		@ sp needed
 1139 0016 80BD     		pop	{r7, pc}
 1140              	.L66:
 1141              		.align	2
 1142              	.L65:
 1143 0018 00000000 		.word	Capsense_widgetResolution
 1144              		.cfi_endproc
 1145              	.LFE49:
 1146              		.size	Capsense_GetScanResolution, .-Capsense_GetScanResolution
 1147              		.section	.text.Capsense_ClearSensors,"ax",%progbits
 1148              		.align	2
 1149              		.global	Capsense_ClearSensors
 1150              		.code	16
 1151              		.thumb_func
 1152              		.type	Capsense_ClearSensors, %function
 1153              	Capsense_ClearSensors:
 1154              	.LFB50:
 856:Generated_Source\PSoC4/Capsense.c **** 
 857:Generated_Source\PSoC4/Capsense.c **** 
 858:Generated_Source\PSoC4/Capsense.c **** /*******************************************************************************
 859:Generated_Source\PSoC4/Capsense.c **** * Function Name: Capsense_ClearSensors
 860:Generated_Source\PSoC4/Capsense.c **** ********************************************************************************
 861:Generated_Source\PSoC4/Capsense.c **** *
 862:Generated_Source\PSoC4/Capsense.c **** * Summary:
 863:Generated_Source\PSoC4/Capsense.c **** *  Resets all the sensors to the non-sampling state by sequentially disconnecting
 864:Generated_Source\PSoC4/Capsense.c **** *  all the sensors from Analog MUX Bus and putting them to an inactive state.
 865:Generated_Source\PSoC4/Capsense.c **** *
 866:Generated_Source\PSoC4/Capsense.c **** * Parameters:
 867:Generated_Source\PSoC4/Capsense.c **** *  None
 868:Generated_Source\PSoC4/Capsense.c **** *
 869:Generated_Source\PSoC4/Capsense.c **** * Return:
 870:Generated_Source\PSoC4/Capsense.c **** *  None
 871:Generated_Source\PSoC4/Capsense.c **** *
 872:Generated_Source\PSoC4/Capsense.c **** * Global Variables:
 873:Generated_Source\PSoC4/Capsense.c **** *  None
 874:Generated_Source\PSoC4/Capsense.c **** *
 875:Generated_Source\PSoC4/Capsense.c **** * Side Effects:
 876:Generated_Source\PSoC4/Capsense.c **** *  None
 877:Generated_Source\PSoC4/Capsense.c **** *
 878:Generated_Source\PSoC4/Capsense.c **** *******************************************************************************/
 879:Generated_Source\PSoC4/Capsense.c **** void Capsense_ClearSensors(void)
 880:Generated_Source\PSoC4/Capsense.c **** {
 1155              		.loc 1 880 0
 1156              		.cfi_startproc
 1157              		@ args = 0, pretend = 0, frame = 8
 1158              		@ frame_needed = 1, uses_anonymous_args = 0
 1159 0000 80B5     		push	{r7, lr}
 1160              		.cfi_def_cfa_offset 8
 1161              		.cfi_offset 7, -8
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 37


 1162              		.cfi_offset 14, -4
 1163 0002 82B0     		sub	sp, sp, #8
 1164              		.cfi_def_cfa_offset 16
 1165 0004 00AF     		add	r7, sp, #0
 1166              		.cfi_def_cfa_register 7
 881:Generated_Source\PSoC4/Capsense.c ****     uint32 snsIndex;
 882:Generated_Source\PSoC4/Capsense.c **** 
 883:Generated_Source\PSoC4/Capsense.c ****     for (snsIndex = 0u; snsIndex < Capsense_TOTAL_SENSOR_COUNT; snsIndex++)
 1167              		.loc 1 883 0
 1168 0006 0023     		movs	r3, #0
 1169 0008 7B60     		str	r3, [r7, #4]
 1170 000a 06E0     		b	.L68
 1171              	.L69:
 884:Generated_Source\PSoC4/Capsense.c ****     {
 885:Generated_Source\PSoC4/Capsense.c ****         Capsense_DisableScanSlot(snsIndex);
 1172              		.loc 1 885 0 discriminator 3
 1173 000c 7B68     		ldr	r3, [r7, #4]
 1174 000e 1800     		movs	r0, r3
 1175 0010 FFF7FEFF 		bl	Capsense_DisableSensor
 883:Generated_Source\PSoC4/Capsense.c ****     {
 1176              		.loc 1 883 0 discriminator 3
 1177 0014 7B68     		ldr	r3, [r7, #4]
 1178 0016 0133     		adds	r3, r3, #1
 1179 0018 7B60     		str	r3, [r7, #4]
 1180              	.L68:
 883:Generated_Source\PSoC4/Capsense.c ****     {
 1181              		.loc 1 883 0 is_stmt 0 discriminator 1
 1182 001a 7B68     		ldr	r3, [r7, #4]
 1183 001c 002B     		cmp	r3, #0
 1184 001e F5D0     		beq	.L69
 886:Generated_Source\PSoC4/Capsense.c ****     }
 887:Generated_Source\PSoC4/Capsense.c **** }
 1185              		.loc 1 887 0 is_stmt 1
 1186 0020 C046     		nop
 1187 0022 BD46     		mov	sp, r7
 1188 0024 02B0     		add	sp, sp, #8
 1189              		@ sp needed
 1190 0026 80BD     		pop	{r7, pc}
 1191              		.cfi_endproc
 1192              	.LFE50:
 1193              		.size	Capsense_ClearSensors, .-Capsense_ClearSensors
 1194              		.section	.text.Capsense_EnableSensor,"ax",%progbits
 1195              		.align	2
 1196              		.global	Capsense_EnableSensor
 1197              		.code	16
 1198              		.thumb_func
 1199              		.type	Capsense_EnableSensor, %function
 1200              	Capsense_EnableSensor:
 1201              	.LFB51:
 888:Generated_Source\PSoC4/Capsense.c **** 
 889:Generated_Source\PSoC4/Capsense.c **** 
 890:Generated_Source\PSoC4/Capsense.c **** #if (Capsense_IS_COMPLEX_SCANSLOTS)
 891:Generated_Source\PSoC4/Capsense.c ****     /*******************************************************************************
 892:Generated_Source\PSoC4/Capsense.c ****     * Function Name: Capsense_EnableScanSlot
 893:Generated_Source\PSoC4/Capsense.c ****     ********************************************************************************
 894:Generated_Source\PSoC4/Capsense.c ****     *
 895:Generated_Source\PSoC4/Capsense.c ****     * Summary:
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 38


 896:Generated_Source\PSoC4/Capsense.c ****     *  Configures the selected slot to measure during the next measurement
 897:Generated_Source\PSoC4/Capsense.c ****     *  cycle. The corresponding pin/pins are set to Analog High-Z mode and
 898:Generated_Source\PSoC4/Capsense.c ****     *  connected to the Analog Mux Bus. This also enables the comparator function.
 899:Generated_Source\PSoC4/Capsense.c ****     *
 900:Generated_Source\PSoC4/Capsense.c ****     * Parameters:
 901:Generated_Source\PSoC4/Capsense.c ****     *  slot:  Slot number.
 902:Generated_Source\PSoC4/Capsense.c ****     *
 903:Generated_Source\PSoC4/Capsense.c ****     * Return:
 904:Generated_Source\PSoC4/Capsense.c ****     *  None
 905:Generated_Source\PSoC4/Capsense.c ****     *
 906:Generated_Source\PSoC4/Capsense.c ****     * Global Constants:
 907:Generated_Source\PSoC4/Capsense.c ****     *  Capsense_portTable[]  - used to store the port number that pin
 908:Generated_Source\PSoC4/Capsense.c ****     *  belongs to for each sensor.
 909:Generated_Source\PSoC4/Capsense.c ****     *  Capsense_maskTable[]  - used to store the pin within the port for
 910:Generated_Source\PSoC4/Capsense.c ****     *  each sensor.
 911:Generated_Source\PSoC4/Capsense.c ****     *  Capsense_indexTable[] - used to store indexes of complex sensors.
 912:Generated_Source\PSoC4/Capsense.c ****     *  The offset and position in this array are stored in a port and mask table for
 913:Generated_Source\PSoC4/Capsense.c ****     *  complex sensors.
 914:Generated_Source\PSoC4/Capsense.c ****     *  Bit 7 (msb) is used to define the sensor type: single or complex.
 915:Generated_Source\PSoC4/Capsense.c ****     *
 916:Generated_Source\PSoC4/Capsense.c ****     * Side Effects:
 917:Generated_Source\PSoC4/Capsense.c ****     *  None
 918:Generated_Source\PSoC4/Capsense.c ****     *
 919:Generated_Source\PSoC4/Capsense.c ****     *******************************************************************************/
 920:Generated_Source\PSoC4/Capsense.c ****     void Capsense_EnableScanSlot(uint32 slot)
 921:Generated_Source\PSoC4/Capsense.c ****     {
 922:Generated_Source\PSoC4/Capsense.c ****         uint8 j;
 923:Generated_Source\PSoC4/Capsense.c ****         uint8 snsNumber;
 924:Generated_Source\PSoC4/Capsense.c ****         const uint8 *index;
 925:Generated_Source\PSoC4/Capsense.c ****         /* Read sensor type: single or complex */
 926:Generated_Source\PSoC4/Capsense.c ****         uint8 snsType = Capsense_portTable[slot];
 927:Generated_Source\PSoC4/Capsense.c **** 
 928:Generated_Source\PSoC4/Capsense.c ****         /* Check if sensor is complex */
 929:Generated_Source\PSoC4/Capsense.c ****         if ((snsType & Capsense_COMPLEX_SS_FLAG) == 0u)
 930:Generated_Source\PSoC4/Capsense.c ****         {
 931:Generated_Source\PSoC4/Capsense.c ****             /* Enable sensor (single) */
 932:Generated_Source\PSoC4/Capsense.c ****             Capsense_EnableSensor(slot);
 933:Generated_Source\PSoC4/Capsense.c ****         }
 934:Generated_Source\PSoC4/Capsense.c ****         else
 935:Generated_Source\PSoC4/Capsense.c ****         {
 936:Generated_Source\PSoC4/Capsense.c ****             /* Enable complex sensor */
 937:Generated_Source\PSoC4/Capsense.c ****             snsType &= ~Capsense_COMPLEX_SS_FLAG;
 938:Generated_Source\PSoC4/Capsense.c ****             index = &Capsense_indexTable[snsType];
 939:Generated_Source\PSoC4/Capsense.c ****             snsNumber = Capsense_maskTable[slot];
 940:Generated_Source\PSoC4/Capsense.c **** 
 941:Generated_Source\PSoC4/Capsense.c ****             for (j = 0u; j < snsNumber; j++)
 942:Generated_Source\PSoC4/Capsense.c ****             {
 943:Generated_Source\PSoC4/Capsense.c ****                 Capsense_EnableSensor(index[j]);
 944:Generated_Source\PSoC4/Capsense.c ****             }
 945:Generated_Source\PSoC4/Capsense.c ****         }
 946:Generated_Source\PSoC4/Capsense.c ****     }
 947:Generated_Source\PSoC4/Capsense.c **** 
 948:Generated_Source\PSoC4/Capsense.c **** 
 949:Generated_Source\PSoC4/Capsense.c ****     /*******************************************************************************
 950:Generated_Source\PSoC4/Capsense.c ****     * Function Name: Capsense_DisableScanSlot
 951:Generated_Source\PSoC4/Capsense.c ****     ********************************************************************************
 952:Generated_Source\PSoC4/Capsense.c ****     *
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 39


 953:Generated_Source\PSoC4/Capsense.c ****     * Summary:
 954:Generated_Source\PSoC4/Capsense.c ****     *  Disables the selected slot. The corresponding pin/pins is/are disconnected
 955:Generated_Source\PSoC4/Capsense.c ****     *  from the Analog Mux Bus and connected to GND, High_Z or Shield electrode.
 956:Generated_Source\PSoC4/Capsense.c ****     *
 957:Generated_Source\PSoC4/Capsense.c ****     * Parameters:
 958:Generated_Source\PSoC4/Capsense.c ****     *  slot:  Slot number.
 959:Generated_Source\PSoC4/Capsense.c ****     *
 960:Generated_Source\PSoC4/Capsense.c ****     * Return:
 961:Generated_Source\PSoC4/Capsense.c ****     *  None
 962:Generated_Source\PSoC4/Capsense.c ****     *
 963:Generated_Source\PSoC4/Capsense.c ****     * Global Variables:
 964:Generated_Source\PSoC4/Capsense.c ****     *  Capsense_portTable[]  - used to store the port number that pin
 965:Generated_Source\PSoC4/Capsense.c ****     *  belongs to for each sensor.
 966:Generated_Source\PSoC4/Capsense.c ****     *  Capsense_maskTable[]  - used to store the pin within the port for
 967:Generated_Source\PSoC4/Capsense.c ****     *  each sensor.
 968:Generated_Source\PSoC4/Capsense.c ****     *  Capsense_indexTable[] - used to store indexes of complex sensors.
 969:Generated_Source\PSoC4/Capsense.c ****     *  The offset and position in this array are stored in a port and mask table for
 970:Generated_Source\PSoC4/Capsense.c ****     *  complex sensors.
 971:Generated_Source\PSoC4/Capsense.c ****     *  7bit(msb) is used to define the sensor type: single or complex.
 972:Generated_Source\PSoC4/Capsense.c ****     *
 973:Generated_Source\PSoC4/Capsense.c ****     * Side Effects:
 974:Generated_Source\PSoC4/Capsense.c ****     *  None
 975:Generated_Source\PSoC4/Capsense.c ****     *
 976:Generated_Source\PSoC4/Capsense.c ****     *******************************************************************************/
 977:Generated_Source\PSoC4/Capsense.c ****     void Capsense_DisableScanSlot(uint32 slot)
 978:Generated_Source\PSoC4/Capsense.c ****     {
 979:Generated_Source\PSoC4/Capsense.c ****         uint8 j;
 980:Generated_Source\PSoC4/Capsense.c ****         uint8 snsNumber;
 981:Generated_Source\PSoC4/Capsense.c ****         const uint8 *index;
 982:Generated_Source\PSoC4/Capsense.c **** 
 983:Generated_Source\PSoC4/Capsense.c ****         /* Read sensor type: single or complex */
 984:Generated_Source\PSoC4/Capsense.c ****         uint8 snsType = Capsense_portTable[slot];
 985:Generated_Source\PSoC4/Capsense.c **** 
 986:Generated_Source\PSoC4/Capsense.c ****         /* Check if sensor is complex */
 987:Generated_Source\PSoC4/Capsense.c ****         if ((snsType & Capsense_COMPLEX_SS_FLAG) == 0u)
 988:Generated_Source\PSoC4/Capsense.c ****         {
 989:Generated_Source\PSoC4/Capsense.c ****             /* Disable sensor (single) */
 990:Generated_Source\PSoC4/Capsense.c ****             Capsense_DisableSensor(slot);
 991:Generated_Source\PSoC4/Capsense.c ****         }
 992:Generated_Source\PSoC4/Capsense.c ****         else
 993:Generated_Source\PSoC4/Capsense.c ****         {
 994:Generated_Source\PSoC4/Capsense.c ****             /* Disable complex sensor */
 995:Generated_Source\PSoC4/Capsense.c ****             snsType &= ~Capsense_COMPLEX_SS_FLAG;
 996:Generated_Source\PSoC4/Capsense.c ****             index = &Capsense_indexTable[snsType];
 997:Generated_Source\PSoC4/Capsense.c ****             snsNumber = Capsense_maskTable[slot];
 998:Generated_Source\PSoC4/Capsense.c **** 
 999:Generated_Source\PSoC4/Capsense.c ****             for (j=0; j < snsNumber; j++)
1000:Generated_Source\PSoC4/Capsense.c ****             {
1001:Generated_Source\PSoC4/Capsense.c ****                 Capsense_DisableSensor(index[j]);
1002:Generated_Source\PSoC4/Capsense.c ****             }
1003:Generated_Source\PSoC4/Capsense.c ****         }
1004:Generated_Source\PSoC4/Capsense.c ****     }
1005:Generated_Source\PSoC4/Capsense.c **** #endif  /* Capsense_IS_COMPLEX_SCANSLOTS */
1006:Generated_Source\PSoC4/Capsense.c **** 
1007:Generated_Source\PSoC4/Capsense.c **** 
1008:Generated_Source\PSoC4/Capsense.c **** /*******************************************************************************
1009:Generated_Source\PSoC4/Capsense.c **** * Function Name: Capsense_EnableSensor
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 40


1010:Generated_Source\PSoC4/Capsense.c **** ********************************************************************************
1011:Generated_Source\PSoC4/Capsense.c **** *
1012:Generated_Source\PSoC4/Capsense.c **** * Summary:
1013:Generated_Source\PSoC4/Capsense.c **** *  Configures the selected sensor to measure during the next measurement cycle.
1014:Generated_Source\PSoC4/Capsense.c **** *  The corresponding pins are set to Analog High-Z mode and connected to the
1015:Generated_Source\PSoC4/Capsense.c **** *  Analog Mux Bus. This also enables the comparator function.
1016:Generated_Source\PSoC4/Capsense.c **** *
1017:Generated_Source\PSoC4/Capsense.c **** * Parameters:
1018:Generated_Source\PSoC4/Capsense.c **** *  sensor:  Sensor number.
1019:Generated_Source\PSoC4/Capsense.c **** *
1020:Generated_Source\PSoC4/Capsense.c **** * Return:
1021:Generated_Source\PSoC4/Capsense.c **** *  None
1022:Generated_Source\PSoC4/Capsense.c **** *
1023:Generated_Source\PSoC4/Capsense.c **** * Global Variables:
1024:Generated_Source\PSoC4/Capsense.c **** *  Capsense_portTable[] - used to store the port number that pin
1025:Generated_Source\PSoC4/Capsense.c **** *  belongs to for each sensor.
1026:Generated_Source\PSoC4/Capsense.c **** *  Capsense_pinShiftTbl[] - used to store position of pin that
1027:Generated_Source\PSoC4/Capsense.c **** *  configured as sensor in port.
1028:Generated_Source\PSoC4/Capsense.c **** *  Capsense_prtSelTbl[] - Contains pointers to the HSIOM
1029:Generated_Source\PSoC4/Capsense.c **** *  registers for each port.
1030:Generated_Source\PSoC4/Capsense.c **** *  Capsense_PrtCfgTb[] - Contains pointers to the port config
1031:Generated_Source\PSoC4/Capsense.c **** *  registers for each port.
1032:Generated_Source\PSoC4/Capsense.c **** *
1033:Generated_Source\PSoC4/Capsense.c **** * Side Effects:
1034:Generated_Source\PSoC4/Capsense.c **** *  None
1035:Generated_Source\PSoC4/Capsense.c **** *
1036:Generated_Source\PSoC4/Capsense.c **** *******************************************************************************/
1037:Generated_Source\PSoC4/Capsense.c **** void Capsense_EnableSensor(uint32 sensor)
1038:Generated_Source\PSoC4/Capsense.c **** {
 1202              		.loc 1 1038 0
 1203              		.cfi_startproc
 1204              		@ args = 0, pretend = 0, frame = 24
 1205              		@ frame_needed = 1, uses_anonymous_args = 0
 1206 0000 90B5     		push	{r4, r7, lr}
 1207              		.cfi_def_cfa_offset 12
 1208              		.cfi_offset 4, -12
 1209              		.cfi_offset 7, -8
 1210              		.cfi_offset 14, -4
 1211 0002 87B0     		sub	sp, sp, #28
 1212              		.cfi_def_cfa_offset 40
 1213 0004 00AF     		add	r7, sp, #0
 1214              		.cfi_def_cfa_register 7
 1215 0006 7860     		str	r0, [r7, #4]
1039:Generated_Source\PSoC4/Capsense.c ****     uint8  pinModeShift;
1040:Generated_Source\PSoC4/Capsense.c ****     uint8  pinHSIOMShift;
1041:Generated_Source\PSoC4/Capsense.c ****     uint8 interruptState;
1042:Generated_Source\PSoC4/Capsense.c ****     uint32 newRegisterValue;
1043:Generated_Source\PSoC4/Capsense.c ****     uint32 port;
1044:Generated_Source\PSoC4/Capsense.c **** 
1045:Generated_Source\PSoC4/Capsense.c ****     port = (uint32) Capsense_portTable[sensor];
 1216              		.loc 1 1045 0
 1217 0008 0223     		movs	r3, #2
 1218 000a 7B61     		str	r3, [r7, #20]
1046:Generated_Source\PSoC4/Capsense.c ****     pinModeShift = Capsense_pinShiftTbl[sensor]  * Capsense_PC_PIN_CFG_SIZE;
 1219              		.loc 1 1046 0
 1220 000c 0123     		movs	r3, #1
 1221 000e 1322     		movs	r2, #19
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 41


 1222 0010 BA18     		adds	r2, r7, r2
 1223 0012 191C     		adds	r1, r3, #0
 1224 0014 0B1C     		adds	r3, r1, #0
 1225 0016 DB18     		adds	r3, r3, r3
 1226 0018 5B18     		adds	r3, r3, r1
 1227 001a 1370     		strb	r3, [r2]
1047:Generated_Source\PSoC4/Capsense.c ****     pinHSIOMShift = Capsense_pinShiftTbl[sensor] * Capsense_HSIOM_PIN_CFG_SIZE;
 1228              		.loc 1 1047 0
 1229 001c 0122     		movs	r2, #1
 1230 001e 1223     		movs	r3, #18
 1231 0020 FB18     		adds	r3, r7, r3
 1232 0022 9200     		lsls	r2, r2, #2
 1233 0024 1A70     		strb	r2, [r3]
1048:Generated_Source\PSoC4/Capsense.c **** 
1049:Generated_Source\PSoC4/Capsense.c ****     interruptState = CyEnterCriticalSection();
 1234              		.loc 1 1049 0
 1235 0026 1123     		movs	r3, #17
 1236 0028 FC18     		adds	r4, r7, r3
 1237 002a FFF7FEFF 		bl	CyEnterCriticalSection
 1238 002e 0300     		movs	r3, r0
 1239 0030 2370     		strb	r3, [r4]
1050:Generated_Source\PSoC4/Capsense.c **** 
1051:Generated_Source\PSoC4/Capsense.c ****     newRegisterValue = *Capsense_prtSelTbl[port];
 1240              		.loc 1 1051 0
 1241 0032 1D4B     		ldr	r3, .L71
 1242 0034 7A69     		ldr	r2, [r7, #20]
 1243 0036 9200     		lsls	r2, r2, #2
 1244 0038 D358     		ldr	r3, [r2, r3]
 1245 003a 1B68     		ldr	r3, [r3]
 1246 003c FB60     		str	r3, [r7, #12]
1052:Generated_Source\PSoC4/Capsense.c ****     newRegisterValue &= ~(Capsense_CSD_HSIOM_MASK << pinHSIOMShift);
 1247              		.loc 1 1052 0
 1248 003e 1223     		movs	r3, #18
 1249 0040 FB18     		adds	r3, r7, r3
 1250 0042 1B78     		ldrb	r3, [r3]
 1251 0044 0F22     		movs	r2, #15
 1252 0046 9A40     		lsls	r2, r2, r3
 1253 0048 1300     		movs	r3, r2
 1254 004a DA43     		mvns	r2, r3
 1255 004c FB68     		ldr	r3, [r7, #12]
 1256 004e 1340     		ands	r3, r2
 1257 0050 FB60     		str	r3, [r7, #12]
1053:Generated_Source\PSoC4/Capsense.c ****     newRegisterValue |= (uint32)((uint32)Capsense_CSD_SENSE_PORT_MODE << pinHSIOMShift);
 1258              		.loc 1 1053 0
 1259 0052 1223     		movs	r3, #18
 1260 0054 FB18     		adds	r3, r7, r3
 1261 0056 1B78     		ldrb	r3, [r3]
 1262 0058 0422     		movs	r2, #4
 1263 005a 9A40     		lsls	r2, r2, r3
 1264 005c 1300     		movs	r3, r2
 1265 005e FA68     		ldr	r2, [r7, #12]
 1266 0060 1343     		orrs	r3, r2
 1267 0062 FB60     		str	r3, [r7, #12]
1054:Generated_Source\PSoC4/Capsense.c **** 
1055:Generated_Source\PSoC4/Capsense.c ****     *Capsense_prtCfgTbl[port] &= (uint32)~((uint32)Capsense_CSD_PIN_MODE_MASK << pinModeShift);
 1268              		.loc 1 1055 0
 1269 0064 114B     		ldr	r3, .L71+4
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 42


 1270 0066 7A69     		ldr	r2, [r7, #20]
 1271 0068 9200     		lsls	r2, r2, #2
 1272 006a D358     		ldr	r3, [r2, r3]
 1273 006c 0F4A     		ldr	r2, .L71+4
 1274 006e 7969     		ldr	r1, [r7, #20]
 1275 0070 8900     		lsls	r1, r1, #2
 1276 0072 8A58     		ldr	r2, [r1, r2]
 1277 0074 1268     		ldr	r2, [r2]
 1278 0076 1321     		movs	r1, #19
 1279 0078 7918     		adds	r1, r7, r1
 1280 007a 0978     		ldrb	r1, [r1]
 1281 007c 0720     		movs	r0, #7
 1282 007e 8840     		lsls	r0, r0, r1
 1283 0080 0100     		movs	r1, r0
 1284 0082 C943     		mvns	r1, r1
 1285 0084 0A40     		ands	r2, r1
 1286 0086 1A60     		str	r2, [r3]
1056:Generated_Source\PSoC4/Capsense.c ****     *Capsense_prtSelTbl[port] = newRegisterValue;
 1287              		.loc 1 1056 0
 1288 0088 074B     		ldr	r3, .L71
 1289 008a 7A69     		ldr	r2, [r7, #20]
 1290 008c 9200     		lsls	r2, r2, #2
 1291 008e D358     		ldr	r3, [r2, r3]
 1292 0090 FA68     		ldr	r2, [r7, #12]
 1293 0092 1A60     		str	r2, [r3]
1057:Generated_Source\PSoC4/Capsense.c **** 
1058:Generated_Source\PSoC4/Capsense.c ****     CyExitCriticalSection(interruptState);
 1294              		.loc 1 1058 0
 1295 0094 1123     		movs	r3, #17
 1296 0096 FB18     		adds	r3, r7, r3
 1297 0098 1B78     		ldrb	r3, [r3]
 1298 009a 1800     		movs	r0, r3
 1299 009c FFF7FEFF 		bl	CyExitCriticalSection
1059:Generated_Source\PSoC4/Capsense.c **** }
 1300              		.loc 1 1059 0
 1301 00a0 C046     		nop
 1302 00a2 BD46     		mov	sp, r7
 1303 00a4 07B0     		add	sp, sp, #28
 1304              		@ sp needed
 1305 00a6 90BD     		pop	{r4, r7, pc}
 1306              	.L72:
 1307              		.align	2
 1308              	.L71:
 1309 00a8 00000000 		.word	Capsense_prtSelTbl
 1310 00ac 00000000 		.word	Capsense_prtCfgTbl
 1311              		.cfi_endproc
 1312              	.LFE51:
 1313              		.size	Capsense_EnableSensor, .-Capsense_EnableSensor
 1314              		.section	.text.Capsense_DisableSensor,"ax",%progbits
 1315              		.align	2
 1316              		.global	Capsense_DisableSensor
 1317              		.code	16
 1318              		.thumb_func
 1319              		.type	Capsense_DisableSensor, %function
 1320              	Capsense_DisableSensor:
 1321              	.LFB52:
1060:Generated_Source\PSoC4/Capsense.c **** 
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 43


1061:Generated_Source\PSoC4/Capsense.c **** 
1062:Generated_Source\PSoC4/Capsense.c **** /*******************************************************************************
1063:Generated_Source\PSoC4/Capsense.c **** * Function Name: Capsense_DisableSensor
1064:Generated_Source\PSoC4/Capsense.c **** ********************************************************************************
1065:Generated_Source\PSoC4/Capsense.c **** *
1066:Generated_Source\PSoC4/Capsense.c **** * Summary:
1067:Generated_Source\PSoC4/Capsense.c **** *  Disables the selected sensor. The corresponding pin is disconnected from the
1068:Generated_Source\PSoC4/Capsense.c **** *  Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1069:Generated_Source\PSoC4/Capsense.c **** *
1070:Generated_Source\PSoC4/Capsense.c **** * Parameters:
1071:Generated_Source\PSoC4/Capsense.c **** *  sensor:  Sensor number
1072:Generated_Source\PSoC4/Capsense.c **** *
1073:Generated_Source\PSoC4/Capsense.c **** * Return:
1074:Generated_Source\PSoC4/Capsense.c **** *  None
1075:Generated_Source\PSoC4/Capsense.c **** *
1076:Generated_Source\PSoC4/Capsense.c **** * Global Variables:
1077:Generated_Source\PSoC4/Capsense.c **** *  Capsense_portTable[] - used to store the port number that pin
1078:Generated_Source\PSoC4/Capsense.c **** *  belongs to for each sensor.
1079:Generated_Source\PSoC4/Capsense.c **** *  Capsense_pinShiftTbl[] - used to store position of pin that
1080:Generated_Source\PSoC4/Capsense.c **** *  configured as a sensor in the port.
1081:Generated_Source\PSoC4/Capsense.c **** *  Capsense_prtSelTbl[] - Contains pointers to the HSIOM
1082:Generated_Source\PSoC4/Capsense.c **** *  registers for each port.
1083:Generated_Source\PSoC4/Capsense.c **** *  Capsense_PrtCfgTb[] - Contains pointers to the port config
1084:Generated_Source\PSoC4/Capsense.c **** *  registers for each port.
1085:Generated_Source\PSoC4/Capsense.c **** *
1086:Generated_Source\PSoC4/Capsense.c **** * Side Effects:
1087:Generated_Source\PSoC4/Capsense.c **** *  None
1088:Generated_Source\PSoC4/Capsense.c **** *
1089:Generated_Source\PSoC4/Capsense.c **** *******************************************************************************/
1090:Generated_Source\PSoC4/Capsense.c **** void Capsense_DisableSensor(uint32 sensor)
1091:Generated_Source\PSoC4/Capsense.c **** {
 1322              		.loc 1 1091 0
 1323              		.cfi_startproc
 1324              		@ args = 0, pretend = 0, frame = 32
 1325              		@ frame_needed = 1, uses_anonymous_args = 0
 1326 0000 90B5     		push	{r4, r7, lr}
 1327              		.cfi_def_cfa_offset 12
 1328              		.cfi_offset 4, -12
 1329              		.cfi_offset 7, -8
 1330              		.cfi_offset 14, -4
 1331 0002 89B0     		sub	sp, sp, #36
 1332              		.cfi_def_cfa_offset 48
 1333 0004 00AF     		add	r7, sp, #0
 1334              		.cfi_def_cfa_register 7
 1335 0006 7860     		str	r0, [r7, #4]
1092:Generated_Source\PSoC4/Capsense.c ****     uint8 interruptState;
1093:Generated_Source\PSoC4/Capsense.c ****     uint32 newRegisterValue;
1094:Generated_Source\PSoC4/Capsense.c **** 
1095:Generated_Source\PSoC4/Capsense.c ****     uint32 port = (uint32) Capsense_portTable[sensor];
 1336              		.loc 1 1095 0
 1337 0008 0223     		movs	r3, #2
 1338 000a 7B61     		str	r3, [r7, #20]
1096:Generated_Source\PSoC4/Capsense.c ****     uint8  pinHSIOMShift = Capsense_pinShiftTbl[sensor] * Capsense_HSIOM_PIN_CFG_SIZE;
 1339              		.loc 1 1096 0
 1340 000c 0122     		movs	r2, #1
 1341 000e 1323     		movs	r3, #19
 1342 0010 FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 44


 1343 0012 9200     		lsls	r2, r2, #2
 1344 0014 1A70     		strb	r2, [r3]
1097:Generated_Source\PSoC4/Capsense.c ****     uint8  pinModeShift = Capsense_pinShiftTbl[sensor]  * Capsense_PC_PIN_CFG_SIZE;
 1345              		.loc 1 1097 0
 1346 0016 0123     		movs	r3, #1
 1347 0018 1222     		movs	r2, #18
 1348 001a BA18     		adds	r2, r7, r2
 1349 001c 191C     		adds	r1, r3, #0
 1350 001e 0B1C     		adds	r3, r1, #0
 1351 0020 DB18     		adds	r3, r3, r3
 1352 0022 5B18     		adds	r3, r3, r1
 1353 0024 1370     		strb	r3, [r2]
1098:Generated_Source\PSoC4/Capsense.c **** 
1099:Generated_Source\PSoC4/Capsense.c ****     uint32 inactiveConnect = Capsense_SNS_HIZANALOG_CONNECT;
 1354              		.loc 1 1099 0
 1355 0026 0023     		movs	r3, #0
 1356 0028 FB61     		str	r3, [r7, #28]
1100:Generated_Source\PSoC4/Capsense.c ****     uint32 sensorState = Capsense_unscannedSnsDriveMode[sensor];
 1357              		.loc 1 1100 0
 1358 002a 304A     		ldr	r2, .L76
 1359 002c 7B68     		ldr	r3, [r7, #4]
 1360 002e D318     		adds	r3, r2, r3
 1361 0030 1B78     		ldrb	r3, [r3]
 1362 0032 BB61     		str	r3, [r7, #24]
1101:Generated_Source\PSoC4/Capsense.c **** 
1102:Generated_Source\PSoC4/Capsense.c ****     *Capsense_prtSelTbl[port] &= ~(Capsense_CSD_HSIOM_MASK << pinHSIOMShift);
 1363              		.loc 1 1102 0
 1364 0034 2E4B     		ldr	r3, .L76+4
 1365 0036 7A69     		ldr	r2, [r7, #20]
 1366 0038 9200     		lsls	r2, r2, #2
 1367 003a D358     		ldr	r3, [r2, r3]
 1368 003c 2C4A     		ldr	r2, .L76+4
 1369 003e 7969     		ldr	r1, [r7, #20]
 1370 0040 8900     		lsls	r1, r1, #2
 1371 0042 8A58     		ldr	r2, [r1, r2]
 1372 0044 1268     		ldr	r2, [r2]
 1373 0046 1321     		movs	r1, #19
 1374 0048 7918     		adds	r1, r7, r1
 1375 004a 0978     		ldrb	r1, [r1]
 1376 004c 0F20     		movs	r0, #15
 1377 004e 8840     		lsls	r0, r0, r1
 1378 0050 0100     		movs	r1, r0
 1379 0052 C943     		mvns	r1, r1
 1380 0054 0A40     		ands	r2, r1
 1381 0056 1A60     		str	r2, [r3]
1103:Generated_Source\PSoC4/Capsense.c **** 
1104:Generated_Source\PSoC4/Capsense.c ****     #if(Capsense_IS_SHIELD_ENABLE != 0)
1105:Generated_Source\PSoC4/Capsense.c ****     if(sensorState != (uint32)Capsense__SHIELD)
1106:Generated_Source\PSoC4/Capsense.c ****     {
1107:Generated_Source\PSoC4/Capsense.c ****     #else
1108:Generated_Source\PSoC4/Capsense.c ****         /* Connected to Ground if shield is disabled */
1109:Generated_Source\PSoC4/Capsense.c ****         if(sensorState == (uint32)Capsense__SHIELD)
 1382              		.loc 1 1109 0
 1383 0058 BB69     		ldr	r3, [r7, #24]
 1384 005a 022B     		cmp	r3, #2
 1385 005c 01D1     		bne	.L74
1110:Generated_Source\PSoC4/Capsense.c ****         {
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 45


1111:Generated_Source\PSoC4/Capsense.c ****             sensorState = (uint32)Capsense__GROUND;
 1386              		.loc 1 1111 0
 1387 005e 0023     		movs	r3, #0
 1388 0060 BB61     		str	r3, [r7, #24]
 1389              	.L74:
1112:Generated_Source\PSoC4/Capsense.c ****         }
1113:Generated_Source\PSoC4/Capsense.c ****     #endif /* (Capsense_IS_SHIELD_ENABLE) */
1114:Generated_Source\PSoC4/Capsense.c ****         if(sensorState != (uint32)Capsense__HIZ_ANALOG)
 1390              		.loc 1 1114 0
 1391 0062 BB69     		ldr	r3, [r7, #24]
 1392 0064 012B     		cmp	r3, #1
 1393 0066 01D0     		beq	.L75
1115:Generated_Source\PSoC4/Capsense.c ****         {
1116:Generated_Source\PSoC4/Capsense.c ****             /* Connected to Ground */
1117:Generated_Source\PSoC4/Capsense.c ****             inactiveConnect = (uint32)Capsense_SNS_GROUND_CONNECT;
 1394              		.loc 1 1117 0
 1395 0068 0623     		movs	r3, #6
 1396 006a FB61     		str	r3, [r7, #28]
 1397              	.L75:
1118:Generated_Source\PSoC4/Capsense.c ****         }
1119:Generated_Source\PSoC4/Capsense.c **** 
1120:Generated_Source\PSoC4/Capsense.c ****         interruptState = CyEnterCriticalSection();
 1398              		.loc 1 1120 0
 1399 006c 1123     		movs	r3, #17
 1400 006e FC18     		adds	r4, r7, r3
 1401 0070 FFF7FEFF 		bl	CyEnterCriticalSection
 1402 0074 0300     		movs	r3, r0
 1403 0076 2370     		strb	r3, [r4]
1121:Generated_Source\PSoC4/Capsense.c **** 
1122:Generated_Source\PSoC4/Capsense.c ****         /* Set drive mode */
1123:Generated_Source\PSoC4/Capsense.c ****         newRegisterValue = *Capsense_prtCfgTbl[port];
 1404              		.loc 1 1123 0
 1405 0078 1E4B     		ldr	r3, .L76+8
 1406 007a 7A69     		ldr	r2, [r7, #20]
 1407 007c 9200     		lsls	r2, r2, #2
 1408 007e D358     		ldr	r3, [r2, r3]
 1409 0080 1B68     		ldr	r3, [r3]
 1410 0082 FB60     		str	r3, [r7, #12]
1124:Generated_Source\PSoC4/Capsense.c ****         newRegisterValue &= ~(Capsense_CSD_PIN_MODE_MASK << pinModeShift);
 1411              		.loc 1 1124 0
 1412 0084 1223     		movs	r3, #18
 1413 0086 FB18     		adds	r3, r7, r3
 1414 0088 1B78     		ldrb	r3, [r3]
 1415 008a 0722     		movs	r2, #7
 1416 008c 9A40     		lsls	r2, r2, r3
 1417 008e 1300     		movs	r3, r2
 1418 0090 DA43     		mvns	r2, r3
 1419 0092 FB68     		ldr	r3, [r7, #12]
 1420 0094 1340     		ands	r3, r2
 1421 0096 FB60     		str	r3, [r7, #12]
1125:Generated_Source\PSoC4/Capsense.c ****         newRegisterValue |=  (uint32)(inactiveConnect << pinModeShift);
 1422              		.loc 1 1125 0
 1423 0098 1223     		movs	r3, #18
 1424 009a FB18     		adds	r3, r7, r3
 1425 009c 1B78     		ldrb	r3, [r3]
 1426 009e FA69     		ldr	r2, [r7, #28]
 1427 00a0 9A40     		lsls	r2, r2, r3
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 46


 1428 00a2 1300     		movs	r3, r2
 1429 00a4 FA68     		ldr	r2, [r7, #12]
 1430 00a6 1343     		orrs	r3, r2
 1431 00a8 FB60     		str	r3, [r7, #12]
1126:Generated_Source\PSoC4/Capsense.c ****         *Capsense_prtCfgTbl[port] =  newRegisterValue;
 1432              		.loc 1 1126 0
 1433 00aa 124B     		ldr	r3, .L76+8
 1434 00ac 7A69     		ldr	r2, [r7, #20]
 1435 00ae 9200     		lsls	r2, r2, #2
 1436 00b0 D358     		ldr	r3, [r2, r3]
 1437 00b2 FA68     		ldr	r2, [r7, #12]
 1438 00b4 1A60     		str	r2, [r3]
1127:Generated_Source\PSoC4/Capsense.c **** 
1128:Generated_Source\PSoC4/Capsense.c ****         CyExitCriticalSection(interruptState);
 1439              		.loc 1 1128 0
 1440 00b6 1123     		movs	r3, #17
 1441 00b8 FB18     		adds	r3, r7, r3
 1442 00ba 1B78     		ldrb	r3, [r3]
 1443 00bc 1800     		movs	r0, r3
 1444 00be FFF7FEFF 		bl	CyExitCriticalSection
1129:Generated_Source\PSoC4/Capsense.c **** 
1130:Generated_Source\PSoC4/Capsense.c ****         *Capsense_prtDRTbl[port]  &=  (uint32)~(uint32)((uint32)1u << Capsense_pinShiftTbl[sensor])
 1445              		.loc 1 1130 0
 1446 00c2 0D4B     		ldr	r3, .L76+12
 1447 00c4 7A69     		ldr	r2, [r7, #20]
 1448 00c6 9200     		lsls	r2, r2, #2
 1449 00c8 D358     		ldr	r3, [r2, r3]
 1450 00ca 0B4A     		ldr	r2, .L76+12
 1451 00cc 7969     		ldr	r1, [r7, #20]
 1452 00ce 8900     		lsls	r1, r1, #2
 1453 00d0 8A58     		ldr	r2, [r1, r2]
 1454 00d2 1268     		ldr	r2, [r2]
 1455 00d4 0121     		movs	r1, #1
 1456 00d6 0800     		movs	r0, r1
 1457 00d8 0121     		movs	r1, #1
 1458 00da 8140     		lsls	r1, r1, r0
 1459 00dc C943     		mvns	r1, r1
 1460 00de 0A40     		ands	r2, r1
 1461 00e0 1A60     		str	r2, [r3]
1131:Generated_Source\PSoC4/Capsense.c ****     #if(Capsense_IS_SHIELD_ENABLE != 0)
1132:Generated_Source\PSoC4/Capsense.c ****     }
1133:Generated_Source\PSoC4/Capsense.c ****     else
1134:Generated_Source\PSoC4/Capsense.c ****     {
1135:Generated_Source\PSoC4/Capsense.c ****         /* Connect to Shield */
1136:Generated_Source\PSoC4/Capsense.c ****         *Capsense_prtSelTbl[port] |= (Capsense_CSD_SHIELD_PORT_MODE << pinHSIOMShift);
1137:Generated_Source\PSoC4/Capsense.c ****     }
1138:Generated_Source\PSoC4/Capsense.c ****     #endif /* (Capsense_IS_SHIELD_ENABLE) */
1139:Generated_Source\PSoC4/Capsense.c **** }
 1462              		.loc 1 1139 0
 1463 00e2 C046     		nop
 1464 00e4 BD46     		mov	sp, r7
 1465 00e6 09B0     		add	sp, sp, #36
 1466              		@ sp needed
 1467 00e8 90BD     		pop	{r4, r7, pc}
 1468              	.L77:
 1469 00ea C046     		.align	2
 1470              	.L76:
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 47


 1471 00ec 00000000 		.word	Capsense_unscannedSnsDriveMode
 1472 00f0 00000000 		.word	Capsense_prtSelTbl
 1473 00f4 00000000 		.word	Capsense_prtCfgTbl
 1474 00f8 00000000 		.word	Capsense_prtDRTbl
 1475              		.cfi_endproc
 1476              	.LFE52:
 1477              		.size	Capsense_DisableSensor, .-Capsense_DisableSensor
 1478              		.section	.text.Capsense_SetDriveModeAllPins,"ax",%progbits
 1479              		.align	2
 1480              		.global	Capsense_SetDriveModeAllPins
 1481              		.code	16
 1482              		.thumb_func
 1483              		.type	Capsense_SetDriveModeAllPins, %function
 1484              	Capsense_SetDriveModeAllPins:
 1485              	.LFB53:
1140:Generated_Source\PSoC4/Capsense.c **** 
1141:Generated_Source\PSoC4/Capsense.c **** 
1142:Generated_Source\PSoC4/Capsense.c **** /*******************************************************************************
1143:Generated_Source\PSoC4/Capsense.c **** * Function Name: Capsense_SetDriveModeAllPins
1144:Generated_Source\PSoC4/Capsense.c **** ********************************************************************************
1145:Generated_Source\PSoC4/Capsense.c **** *
1146:Generated_Source\PSoC4/Capsense.c **** * Summary:
1147:Generated_Source\PSoC4/Capsense.c **** * This API sets the drive mode of port pins used by the CapSense
1148:Generated_Source\PSoC4/Capsense.c **** * component (sensors, guard, shield, shield tank and Cmod) to drive the
1149:Generated_Source\PSoC4/Capsense.c **** * mode specified by the argument.
1150:Generated_Source\PSoC4/Capsense.c **** *
1151:Generated_Source\PSoC4/Capsense.c **** * Parameters:
1152:Generated_Source\PSoC4/Capsense.c **** *  driveMode:  Drive mode definition.
1153:Generated_Source\PSoC4/Capsense.c **** *
1154:Generated_Source\PSoC4/Capsense.c **** * Return:
1155:Generated_Source\PSoC4/Capsense.c **** *  None
1156:Generated_Source\PSoC4/Capsense.c **** *
1157:Generated_Source\PSoC4/Capsense.c **** * Global Variables:
1158:Generated_Source\PSoC4/Capsense.c **** *  Capsense_portTable[] - used to store the port number that pin
1159:Generated_Source\PSoC4/Capsense.c **** *  belongs to for each sensor.
1160:Generated_Source\PSoC4/Capsense.c **** *  Capsense_pinShiftTbl[] - used to store position of pin that
1161:Generated_Source\PSoC4/Capsense.c **** *  configured as a sensor in the port.
1162:Generated_Source\PSoC4/Capsense.c **** *
1163:Generated_Source\PSoC4/Capsense.c **** * Side Effects:
1164:Generated_Source\PSoC4/Capsense.c **** *  This API shall be called only after CapSense component is stopped.
1165:Generated_Source\PSoC4/Capsense.c **** *
1166:Generated_Source\PSoC4/Capsense.c **** *******************************************************************************/
1167:Generated_Source\PSoC4/Capsense.c **** void Capsense_SetDriveModeAllPins(uint32 driveMode)
1168:Generated_Source\PSoC4/Capsense.c **** {
 1486              		.loc 1 1168 0
 1487              		.cfi_startproc
 1488              		@ args = 0, pretend = 0, frame = 24
 1489              		@ frame_needed = 1, uses_anonymous_args = 0
 1490 0000 80B5     		push	{r7, lr}
 1491              		.cfi_def_cfa_offset 8
 1492              		.cfi_offset 7, -8
 1493              		.cfi_offset 14, -4
 1494 0002 86B0     		sub	sp, sp, #24
 1495              		.cfi_def_cfa_offset 32
 1496 0004 00AF     		add	r7, sp, #0
 1497              		.cfi_def_cfa_register 7
 1498 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 48


1169:Generated_Source\PSoC4/Capsense.c ****     uint8 curSensor;
1170:Generated_Source\PSoC4/Capsense.c ****     #if (Capsense_IS_COMPLEX_SCANSLOTS)
1171:Generated_Source\PSoC4/Capsense.c ****         uint8 snsNumber;
1172:Generated_Source\PSoC4/Capsense.c ****         uint8 snsType;
1173:Generated_Source\PSoC4/Capsense.c ****     #endif  /* Capsense_IS_COMPLEX_SCANSLOTS */
1174:Generated_Source\PSoC4/Capsense.c ****     uint32 prtNumberTmp;
1175:Generated_Source\PSoC4/Capsense.c ****     uint32 pinNumberTmp;
1176:Generated_Source\PSoC4/Capsense.c **** 
1177:Generated_Source\PSoC4/Capsense.c ****     for(curSensor = 0u; curSensor < Capsense_TOTAL_SENSOR_COUNT; curSensor++)
 1499              		.loc 1 1177 0
 1500 0008 1723     		movs	r3, #23
 1501 000a FB18     		adds	r3, r7, r3
 1502 000c 0022     		movs	r2, #0
 1503 000e 1A70     		strb	r2, [r3]
 1504 0010 10E0     		b	.L79
 1505              	.L80:
1178:Generated_Source\PSoC4/Capsense.c ****     {
1179:Generated_Source\PSoC4/Capsense.c ****         #if (Capsense_IS_COMPLEX_SCANSLOTS)
1180:Generated_Source\PSoC4/Capsense.c ****             /* Read sensor type: single or complex */
1181:Generated_Source\PSoC4/Capsense.c ****             snsType = Capsense_portTable[curSensor];
1182:Generated_Source\PSoC4/Capsense.c **** 
1183:Generated_Source\PSoC4/Capsense.c ****             /* Check if sensor is complex */
1184:Generated_Source\PSoC4/Capsense.c ****             if ((snsType & Capsense_COMPLEX_SS_FLAG) == 0u)
1185:Generated_Source\PSoC4/Capsense.c ****             {
1186:Generated_Source\PSoC4/Capsense.c ****                 /* The sensor is not complex */
1187:Generated_Source\PSoC4/Capsense.c ****                 snsNumber = curSensor;
1188:Generated_Source\PSoC4/Capsense.c ****             }
1189:Generated_Source\PSoC4/Capsense.c ****             else
1190:Generated_Source\PSoC4/Capsense.c ****             {
1191:Generated_Source\PSoC4/Capsense.c ****                 /* Get dedicated sensor ID of the complex sensor */
1192:Generated_Source\PSoC4/Capsense.c ****                 snsType &= ~Capsense_COMPLEX_SS_FLAG;
1193:Generated_Source\PSoC4/Capsense.c ****                 snsNumber = Capsense_indexTable[snsType];
1194:Generated_Source\PSoC4/Capsense.c ****             }
1195:Generated_Source\PSoC4/Capsense.c **** 
1196:Generated_Source\PSoC4/Capsense.c ****             prtNumberTmp = Capsense_portTable[snsNumber];
1197:Generated_Source\PSoC4/Capsense.c ****             pinNumberTmp = Capsense_pinShiftTbl[snsNumber];
1198:Generated_Source\PSoC4/Capsense.c ****         #else
1199:Generated_Source\PSoC4/Capsense.c ****             prtNumberTmp = Capsense_portTable[curSensor];
 1506              		.loc 1 1199 0 discriminator 3
 1507 0012 0223     		movs	r3, #2
 1508 0014 3B61     		str	r3, [r7, #16]
1200:Generated_Source\PSoC4/Capsense.c ****             pinNumberTmp = Capsense_pinShiftTbl[curSensor];
 1509              		.loc 1 1200 0 discriminator 3
 1510 0016 0123     		movs	r3, #1
 1511 0018 FB60     		str	r3, [r7, #12]
1201:Generated_Source\PSoC4/Capsense.c ****         #endif  /* Capsense_IS_COMPLEX_SCANSLOTS */
1202:Generated_Source\PSoC4/Capsense.c **** 
1203:Generated_Source\PSoC4/Capsense.c ****         Capsense_SetPinDriveMode(driveMode, pinNumberTmp, prtNumberTmp);
 1512              		.loc 1 1203 0 discriminator 3
 1513 001a 3A69     		ldr	r2, [r7, #16]
 1514 001c F968     		ldr	r1, [r7, #12]
 1515 001e 7B68     		ldr	r3, [r7, #4]
 1516 0020 1800     		movs	r0, r3
 1517 0022 FFF7FEFF 		bl	Capsense_SetPinDriveMode
1177:Generated_Source\PSoC4/Capsense.c ****     {
 1518              		.loc 1 1177 0 discriminator 3
 1519 0026 1723     		movs	r3, #23
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 49


 1520 0028 FB18     		adds	r3, r7, r3
 1521 002a 1A78     		ldrb	r2, [r3]
 1522 002c 1723     		movs	r3, #23
 1523 002e FB18     		adds	r3, r7, r3
 1524 0030 0132     		adds	r2, r2, #1
 1525 0032 1A70     		strb	r2, [r3]
 1526              	.L79:
1177:Generated_Source\PSoC4/Capsense.c ****     {
 1527              		.loc 1 1177 0 is_stmt 0 discriminator 1
 1528 0034 1723     		movs	r3, #23
 1529 0036 FB18     		adds	r3, r7, r3
 1530 0038 1B78     		ldrb	r3, [r3]
 1531 003a 002B     		cmp	r3, #0
 1532 003c E9D0     		beq	.L80
1204:Generated_Source\PSoC4/Capsense.c ****     }
1205:Generated_Source\PSoC4/Capsense.c **** 
1206:Generated_Source\PSoC4/Capsense.c ****     Capsense_SetPinDriveMode(driveMode, (uint32)Capsense_CMOD_PIN_NUMBER, (uint32)Capsense_CMOD_PRT
 1533              		.loc 1 1206 0 is_stmt 1
 1534 003e 7B68     		ldr	r3, [r7, #4]
 1535 0040 0422     		movs	r2, #4
 1536 0042 0021     		movs	r1, #0
 1537 0044 1800     		movs	r0, r3
 1538 0046 FFF7FEFF 		bl	Capsense_SetPinDriveMode
1207:Generated_Source\PSoC4/Capsense.c **** 
1208:Generated_Source\PSoC4/Capsense.c ****     #if(0u != Capsense_CSH_TANK_ENABLE)
1209:Generated_Source\PSoC4/Capsense.c ****         Capsense_SetPinDriveMode(driveMode, (uint32)Capsense_CTANK_PIN_NUMBER, (uint32)Capsense_CTA
1210:Generated_Source\PSoC4/Capsense.c ****     #endif /* (0u != Capsense_CSH_TANK_ENABLE) */
1211:Generated_Source\PSoC4/Capsense.c **** 
1212:Generated_Source\PSoC4/Capsense.c ****     #if(0u != Capsense_IS_SHIELD_ENABLE)
1213:Generated_Source\PSoC4/Capsense.c ****         Capsense_SetPinDriveMode(driveMode, (uint32)Capsense_SHIELD_PIN_NUMBER, (uint32)Capsense_SH
1214:Generated_Source\PSoC4/Capsense.c ****     #endif /* (0u != Capsense_IS_SHIELD_ENABLE) */
1215:Generated_Source\PSoC4/Capsense.c **** }
 1539              		.loc 1 1215 0
 1540 004a C046     		nop
 1541 004c BD46     		mov	sp, r7
 1542 004e 06B0     		add	sp, sp, #24
 1543              		@ sp needed
 1544 0050 80BD     		pop	{r7, pc}
 1545              		.cfi_endproc
 1546              	.LFE53:
 1547              		.size	Capsense_SetDriveModeAllPins, .-Capsense_SetDriveModeAllPins
 1548 0052 C046     		.section	.text.Capsense_RestoreDriveModeAllPins,"ax",%progbits
 1549              		.align	2
 1550              		.global	Capsense_RestoreDriveModeAllPins
 1551              		.code	16
 1552              		.thumb_func
 1553              		.type	Capsense_RestoreDriveModeAllPins, %function
 1554              	Capsense_RestoreDriveModeAllPins:
 1555              	.LFB54:
1216:Generated_Source\PSoC4/Capsense.c **** 
1217:Generated_Source\PSoC4/Capsense.c **** 
1218:Generated_Source\PSoC4/Capsense.c **** /*******************************************************************************
1219:Generated_Source\PSoC4/Capsense.c **** * Function Name: Capsense_RestoreDriveModeAllPins
1220:Generated_Source\PSoC4/Capsense.c **** ********************************************************************************
1221:Generated_Source\PSoC4/Capsense.c **** *
1222:Generated_Source\PSoC4/Capsense.c **** * Summary:
1223:Generated_Source\PSoC4/Capsense.c **** *  This API restores the drive for all the CapSense port pins to the original
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 50


1224:Generated_Source\PSoC4/Capsense.c **** *  state.
1225:Generated_Source\PSoC4/Capsense.c **** *
1226:Generated_Source\PSoC4/Capsense.c **** * Parameters:
1227:Generated_Source\PSoC4/Capsense.c **** *  None
1228:Generated_Source\PSoC4/Capsense.c **** *
1229:Generated_Source\PSoC4/Capsense.c **** * Return:
1230:Generated_Source\PSoC4/Capsense.c **** *  None
1231:Generated_Source\PSoC4/Capsense.c **** *
1232:Generated_Source\PSoC4/Capsense.c **** * Global Variables:
1233:Generated_Source\PSoC4/Capsense.c **** *  Capsense_prtSelTbl[] - Contains pointers to the HSIOM
1234:Generated_Source\PSoC4/Capsense.c **** *  registers for each port.
1235:Generated_Source\PSoC4/Capsense.c **** *
1236:Generated_Source\PSoC4/Capsense.c **** * Side Effects:
1237:Generated_Source\PSoC4/Capsense.c **** *  This API is called only after the CapSense component is stopped.
1238:Generated_Source\PSoC4/Capsense.c **** *
1239:Generated_Source\PSoC4/Capsense.c **** *******************************************************************************/
1240:Generated_Source\PSoC4/Capsense.c **** void Capsense_RestoreDriveModeAllPins(void)
1241:Generated_Source\PSoC4/Capsense.c **** {
 1556              		.loc 1 1241 0
 1557              		.cfi_startproc
 1558              		@ args = 0, pretend = 0, frame = 8
 1559              		@ frame_needed = 1, uses_anonymous_args = 0
 1560 0000 80B5     		push	{r7, lr}
 1561              		.cfi_def_cfa_offset 8
 1562              		.cfi_offset 7, -8
 1563              		.cfi_offset 14, -4
 1564 0002 82B0     		sub	sp, sp, #8
 1565              		.cfi_def_cfa_offset 16
 1566 0004 00AF     		add	r7, sp, #0
 1567              		.cfi_def_cfa_register 7
1242:Generated_Source\PSoC4/Capsense.c ****     uint32 newRegisterValue;
1243:Generated_Source\PSoC4/Capsense.c **** 
1244:Generated_Source\PSoC4/Capsense.c ****     Capsense_SetDriveModeAllPins(CY_SYS_PINS_DM_ALG_HIZ);
 1568              		.loc 1 1244 0
 1569 0006 0020     		movs	r0, #0
 1570 0008 FFF7FEFF 		bl	Capsense_SetDriveModeAllPins
1245:Generated_Source\PSoC4/Capsense.c **** 
1246:Generated_Source\PSoC4/Capsense.c ****     newRegisterValue = Capsense_CMOD_CONNECTION_REG;
 1571              		.loc 1 1246 0
 1572 000c 084B     		ldr	r3, .L82
 1573 000e 1B68     		ldr	r3, [r3]
 1574 0010 7B60     		str	r3, [r7, #4]
1247:Generated_Source\PSoC4/Capsense.c ****     newRegisterValue &= ~(Capsense_CSD_CMOD_CONNECTION_MASK);
 1575              		.loc 1 1247 0
 1576 0012 7B68     		ldr	r3, [r7, #4]
 1577 0014 0F22     		movs	r2, #15
 1578 0016 9343     		bics	r3, r2
 1579 0018 7B60     		str	r3, [r7, #4]
1248:Generated_Source\PSoC4/Capsense.c ****     newRegisterValue |= Capsense_CSD_CMOD_TO_AMUXBUS_A;
 1580              		.loc 1 1248 0
 1581 001a 7B68     		ldr	r3, [r7, #4]
 1582 001c 0622     		movs	r2, #6
 1583 001e 1343     		orrs	r3, r2
 1584 0020 7B60     		str	r3, [r7, #4]
1249:Generated_Source\PSoC4/Capsense.c ****     Capsense_CMOD_CONNECTION_REG = newRegisterValue;
 1585              		.loc 1 1249 0
 1586 0022 034B     		ldr	r3, .L82
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 51


 1587 0024 7A68     		ldr	r2, [r7, #4]
 1588 0026 1A60     		str	r2, [r3]
1250:Generated_Source\PSoC4/Capsense.c **** 
1251:Generated_Source\PSoC4/Capsense.c ****     #if(0u != Capsense_CSH_TANK_ENABLE)
1252:Generated_Source\PSoC4/Capsense.c ****         newRegisterValue = Capsense_CTANK_CONNECTION_REG;
1253:Generated_Source\PSoC4/Capsense.c ****         newRegisterValue &= ~(Capsense_CSD_CTANK_CONNECTION_MASK);
1254:Generated_Source\PSoC4/Capsense.c ****         newRegisterValue |= Capsense_CSD_CTANK_TO_AMUXBUS_B;
1255:Generated_Source\PSoC4/Capsense.c ****         Capsense_CTANK_CONNECTION_REG = newRegisterValue;
1256:Generated_Source\PSoC4/Capsense.c ****     #endif/* (0u != Capsense_CSH_TANK_ENABLE) */
1257:Generated_Source\PSoC4/Capsense.c **** 
1258:Generated_Source\PSoC4/Capsense.c ****     #if(0u != Capsense_IS_SHIELD_ENABLE)
1259:Generated_Source\PSoC4/Capsense.c ****         newRegisterValue = *Capsense_prtSelTbl[Capsense_SHIELD_PORT_NUMBER];
1260:Generated_Source\PSoC4/Capsense.c ****         newRegisterValue &= ~(Capsense_CSD_HSIOM_MASK << ((uint32)Capsense_SHIELD_PIN_NUMBER * Caps
1261:Generated_Source\PSoC4/Capsense.c ****         newRegisterValue |= (Capsense_CSD_SHIELD_PORT_MODE << ((uint32)Capsense_SHIELD_PIN_NUMBER *
1262:Generated_Source\PSoC4/Capsense.c ****         *Capsense_prtSelTbl[Capsense_SHIELD_PORT_NUMBER] = newRegisterValue;
1263:Generated_Source\PSoC4/Capsense.c ****     #endif /* (0u != Capsense_IS_SHIELD_ENABLE) */
1264:Generated_Source\PSoC4/Capsense.c **** }
 1589              		.loc 1 1264 0
 1590 0028 C046     		nop
 1591 002a BD46     		mov	sp, r7
 1592 002c 02B0     		add	sp, sp, #8
 1593              		@ sp needed
 1594 002e 80BD     		pop	{r7, pc}
 1595              	.L83:
 1596              		.align	2
 1597              	.L82:
 1598 0030 00040240 		.word	1073873920
 1599              		.cfi_endproc
 1600              	.LFE54:
 1601              		.size	Capsense_RestoreDriveModeAllPins, .-Capsense_RestoreDriveModeAllPins
 1602              		.section	.text.Capsense_SetPinDriveMode,"ax",%progbits
 1603              		.align	2
 1604              		.global	Capsense_SetPinDriveMode
 1605              		.code	16
 1606              		.thumb_func
 1607              		.type	Capsense_SetPinDriveMode, %function
 1608              	Capsense_SetPinDriveMode:
 1609              	.LFB55:
1265:Generated_Source\PSoC4/Capsense.c **** 
1266:Generated_Source\PSoC4/Capsense.c **** 
1267:Generated_Source\PSoC4/Capsense.c **** /*******************************************************************************
1268:Generated_Source\PSoC4/Capsense.c **** * Function Name: Capsense_SetPinDriveMode
1269:Generated_Source\PSoC4/Capsense.c **** ********************************************************************************
1270:Generated_Source\PSoC4/Capsense.c **** *
1271:Generated_Source\PSoC4/Capsense.c **** * Summary:
1272:Generated_Source\PSoC4/Capsense.c **** * This API sets the drive mode for the appropriate port/pin.
1273:Generated_Source\PSoC4/Capsense.c **** *
1274:Generated_Source\PSoC4/Capsense.c **** * Parameters:
1275:Generated_Source\PSoC4/Capsense.c **** *  driveMode:  Drive mode definition.
1276:Generated_Source\PSoC4/Capsense.c **** *  portNumber: contains port number (0, 1, 2).
1277:Generated_Source\PSoC4/Capsense.c **** *  pinNumber: contains pin number (0, 1, 2, ... , 7).
1278:Generated_Source\PSoC4/Capsense.c **** *
1279:Generated_Source\PSoC4/Capsense.c **** * Return:
1280:Generated_Source\PSoC4/Capsense.c **** *  None
1281:Generated_Source\PSoC4/Capsense.c **** *
1282:Generated_Source\PSoC4/Capsense.c **** * Global Variables:
1283:Generated_Source\PSoC4/Capsense.c **** *  Capsense_prtSelTbl[] - Contains pointers to the HSIOM
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 52


1284:Generated_Source\PSoC4/Capsense.c **** *  registers for each port.
1285:Generated_Source\PSoC4/Capsense.c **** *  Capsense_prtCfgTb[] - Contains pointers to the port config
1286:Generated_Source\PSoC4/Capsense.c **** *  registers for each port.
1287:Generated_Source\PSoC4/Capsense.c **** *
1288:Generated_Source\PSoC4/Capsense.c **** * Side Effects:
1289:Generated_Source\PSoC4/Capsense.c **** *  This API is called only after CapSense component is stopped.
1290:Generated_Source\PSoC4/Capsense.c **** *
1291:Generated_Source\PSoC4/Capsense.c **** *******************************************************************************/
1292:Generated_Source\PSoC4/Capsense.c **** void Capsense_SetPinDriveMode(uint32 driveMode, uint32 pinNumber, uint32 portNumber)
1293:Generated_Source\PSoC4/Capsense.c **** {
 1610              		.loc 1 1293 0
 1611              		.cfi_startproc
 1612              		@ args = 0, pretend = 0, frame = 24
 1613              		@ frame_needed = 1, uses_anonymous_args = 0
 1614 0000 80B5     		push	{r7, lr}
 1615              		.cfi_def_cfa_offset 8
 1616              		.cfi_offset 7, -8
 1617              		.cfi_offset 14, -4
 1618 0002 86B0     		sub	sp, sp, #24
 1619              		.cfi_def_cfa_offset 32
 1620 0004 00AF     		add	r7, sp, #0
 1621              		.cfi_def_cfa_register 7
 1622 0006 F860     		str	r0, [r7, #12]
 1623 0008 B960     		str	r1, [r7, #8]
 1624 000a 7A60     		str	r2, [r7, #4]
1294:Generated_Source\PSoC4/Capsense.c ****     uint32  pinModeShift;
1295:Generated_Source\PSoC4/Capsense.c ****     uint32 newRegisterValue;
1296:Generated_Source\PSoC4/Capsense.c **** 
1297:Generated_Source\PSoC4/Capsense.c ****     pinModeShift  = pinNumber * Capsense_PC_PIN_CFG_SIZE;
 1625              		.loc 1 1297 0
 1626 000c BA68     		ldr	r2, [r7, #8]
 1627 000e 1300     		movs	r3, r2
 1628 0010 5B00     		lsls	r3, r3, #1
 1629 0012 9B18     		adds	r3, r3, r2
 1630 0014 7B61     		str	r3, [r7, #20]
1298:Generated_Source\PSoC4/Capsense.c **** 
1299:Generated_Source\PSoC4/Capsense.c ****     newRegisterValue = *Capsense_prtCfgTbl[portNumber];
 1631              		.loc 1 1299 0
 1632 0016 0F4B     		ldr	r3, .L85
 1633 0018 7A68     		ldr	r2, [r7, #4]
 1634 001a 9200     		lsls	r2, r2, #2
 1635 001c D358     		ldr	r3, [r2, r3]
 1636 001e 1B68     		ldr	r3, [r3]
 1637 0020 3B61     		str	r3, [r7, #16]
1300:Generated_Source\PSoC4/Capsense.c ****     newRegisterValue &= ~(Capsense_CSD_PIN_MODE_MASK << pinModeShift);
 1638              		.loc 1 1300 0
 1639 0022 0722     		movs	r2, #7
 1640 0024 7B69     		ldr	r3, [r7, #20]
 1641 0026 9A40     		lsls	r2, r2, r3
 1642 0028 1300     		movs	r3, r2
 1643 002a DA43     		mvns	r2, r3
 1644 002c 3B69     		ldr	r3, [r7, #16]
 1645 002e 1340     		ands	r3, r2
 1646 0030 3B61     		str	r3, [r7, #16]
1301:Generated_Source\PSoC4/Capsense.c ****     newRegisterValue |=  (uint32)((uint32)driveMode << pinModeShift);
 1647              		.loc 1 1301 0
 1648 0032 FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 53


 1649 0034 7B69     		ldr	r3, [r7, #20]
 1650 0036 9A40     		lsls	r2, r2, r3
 1651 0038 1300     		movs	r3, r2
 1652 003a 3A69     		ldr	r2, [r7, #16]
 1653 003c 1343     		orrs	r3, r2
 1654 003e 3B61     		str	r3, [r7, #16]
1302:Generated_Source\PSoC4/Capsense.c ****     *Capsense_prtCfgTbl[portNumber] =  newRegisterValue;
 1655              		.loc 1 1302 0
 1656 0040 044B     		ldr	r3, .L85
 1657 0042 7A68     		ldr	r2, [r7, #4]
 1658 0044 9200     		lsls	r2, r2, #2
 1659 0046 D358     		ldr	r3, [r2, r3]
 1660 0048 3A69     		ldr	r2, [r7, #16]
 1661 004a 1A60     		str	r2, [r3]
1303:Generated_Source\PSoC4/Capsense.c **** }
 1662              		.loc 1 1303 0
 1663 004c C046     		nop
 1664 004e BD46     		mov	sp, r7
 1665 0050 06B0     		add	sp, sp, #24
 1666              		@ sp needed
 1667 0052 80BD     		pop	{r7, pc}
 1668              	.L86:
 1669              		.align	2
 1670              	.L85:
 1671 0054 00000000 		.word	Capsense_prtCfgTbl
 1672              		.cfi_endproc
 1673              	.LFE55:
 1674              		.size	Capsense_SetPinDriveMode, .-Capsense_SetPinDriveMode
 1675              		.section	.text.Capsense_PreScan,"ax",%progbits
 1676              		.align	2
 1677              		.global	Capsense_PreScan
 1678              		.code	16
 1679              		.thumb_func
 1680              		.type	Capsense_PreScan, %function
 1681              	Capsense_PreScan:
 1682              	.LFB56:
1304:Generated_Source\PSoC4/Capsense.c **** 
1305:Generated_Source\PSoC4/Capsense.c **** 
1306:Generated_Source\PSoC4/Capsense.c **** /*******************************************************************************
1307:Generated_Source\PSoC4/Capsense.c **** * Function Name: Capsense_PreScan
1308:Generated_Source\PSoC4/Capsense.c **** ********************************************************************************
1309:Generated_Source\PSoC4/Capsense.c **** *
1310:Generated_Source\PSoC4/Capsense.c **** * Summary:
1311:Generated_Source\PSoC4/Capsense.c **** *  Sets required settings, enables a sensor, removes Vref from AMUX and starts the
1312:Generated_Source\PSoC4/Capsense.c **** *  scanning process of the sensor.
1313:Generated_Source\PSoC4/Capsense.c **** *
1314:Generated_Source\PSoC4/Capsense.c **** * Parameters:
1315:Generated_Source\PSoC4/Capsense.c **** *  sensor:  Sensor number.
1316:Generated_Source\PSoC4/Capsense.c **** *
1317:Generated_Source\PSoC4/Capsense.c **** * Return:
1318:Generated_Source\PSoC4/Capsense.c **** *  None
1319:Generated_Source\PSoC4/Capsense.c **** *
1320:Generated_Source\PSoC4/Capsense.c **** * Global Variables:
1321:Generated_Source\PSoC4/Capsense.c **** * Capsense_widgetNumber[] - This array contains numbers of widgets for each sensor.
1322:Generated_Source\PSoC4/Capsense.c **** * Capsense_widgetResolution[] - Contains the widget resolution.
1323:Generated_Source\PSoC4/Capsense.c **** *
1324:Generated_Source\PSoC4/Capsense.c **** * Side Effects:
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 54


1325:Generated_Source\PSoC4/Capsense.c **** *  None
1326:Generated_Source\PSoC4/Capsense.c **** *
1327:Generated_Source\PSoC4/Capsense.c **** *******************************************************************************/
1328:Generated_Source\PSoC4/Capsense.c **** void Capsense_PreScan(uint32 sensor)
1329:Generated_Source\PSoC4/Capsense.c **** {
 1683              		.loc 1 1329 0
 1684              		.cfi_startproc
 1685              		@ args = 0, pretend = 0, frame = 24
 1686              		@ frame_needed = 1, uses_anonymous_args = 0
 1687 0000 90B5     		push	{r4, r7, lr}
 1688              		.cfi_def_cfa_offset 12
 1689              		.cfi_offset 4, -12
 1690              		.cfi_offset 7, -8
 1691              		.cfi_offset 14, -4
 1692 0002 87B0     		sub	sp, sp, #28
 1693              		.cfi_def_cfa_offset 40
 1694 0004 00AF     		add	r7, sp, #0
 1695              		.cfi_def_cfa_register 7
 1696 0006 7860     		str	r0, [r7, #4]
1330:Generated_Source\PSoC4/Capsense.c ****     uint8 widget;
1331:Generated_Source\PSoC4/Capsense.c ****     uint8 interruptState;
1332:Generated_Source\PSoC4/Capsense.c ****     uint32 newRegValue;
1333:Generated_Source\PSoC4/Capsense.c ****     uint32 counterResolution;
1334:Generated_Source\PSoC4/Capsense.c **** 
1335:Generated_Source\PSoC4/Capsense.c ****     #if(Capsense_PRS_OPTIONS == Capsense__PRS_AUTO)
1336:Generated_Source\PSoC4/Capsense.c ****         uint8 senseClkDivMath;
1337:Generated_Source\PSoC4/Capsense.c ****         uint8 sampleClkDivMath;
1338:Generated_Source\PSoC4/Capsense.c ****     #endif /* (Capsense_PRS_OPTIONS == Capsense__PRS_AUTO) */
1339:Generated_Source\PSoC4/Capsense.c **** 
1340:Generated_Source\PSoC4/Capsense.c ****     #if ((Capsense_TUNING_METHOD == Capsense__TUNING_AUTO) &&\
1341:Generated_Source\PSoC4/Capsense.c ****          (0 != Capsense_IS_OVERSAMPLING_EN))
1342:Generated_Source\PSoC4/Capsense.c ****         uint32 oversamplingFactor;
1343:Generated_Source\PSoC4/Capsense.c ****     #endif /* ((Capsense_TUNING_METHOD == Capsense__TUNING_AUTO) &&\
1344:Generated_Source\PSoC4/Capsense.c ****                (0 != Capsense_IS_OVERSAMPLING_EN)) */
1345:Generated_Source\PSoC4/Capsense.c **** 
1346:Generated_Source\PSoC4/Capsense.c ****     /* Define widget sensor belongs to */
1347:Generated_Source\PSoC4/Capsense.c ****     widget = Capsense_widgetNumber[sensor];
 1697              		.loc 1 1347 0
 1698 0008 1723     		movs	r3, #23
 1699 000a FB18     		adds	r3, r7, r3
 1700 000c 0022     		movs	r2, #0
 1701 000e 1A70     		strb	r2, [r3]
1348:Generated_Source\PSoC4/Capsense.c **** 
1349:Generated_Source\PSoC4/Capsense.c ****     /* Recalculate Counter Resolution to MSB 16 bits */
1350:Generated_Source\PSoC4/Capsense.c ****     counterResolution = Capsense_widgetResolution[widget];
 1702              		.loc 1 1350 0
 1703 0010 1723     		movs	r3, #23
 1704 0012 FB18     		adds	r3, r7, r3
 1705 0014 1A78     		ldrb	r2, [r3]
 1706 0016 404B     		ldr	r3, .L89
 1707 0018 9200     		lsls	r2, r2, #2
 1708 001a D358     		ldr	r3, [r2, r3]
 1709 001c 3B61     		str	r3, [r7, #16]
1351:Generated_Source\PSoC4/Capsense.c **** 
1352:Generated_Source\PSoC4/Capsense.c ****     #if ((Capsense_TUNING_METHOD == Capsense__TUNING_AUTO) &&\
1353:Generated_Source\PSoC4/Capsense.c ****          (0 != Capsense_IS_OVERSAMPLING_EN))
1354:Generated_Source\PSoC4/Capsense.c ****         oversamplingFactor = Capsense_GetBitValue(Capsense_scanSpeedTbl, sensor);
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 55


1355:Generated_Source\PSoC4/Capsense.c **** 
1356:Generated_Source\PSoC4/Capsense.c ****         if(counterResolution < Capsense_RESOLUTION_16_BITS)
1357:Generated_Source\PSoC4/Capsense.c ****         {
1358:Generated_Source\PSoC4/Capsense.c ****             counterResolution <<= oversamplingFactor;
1359:Generated_Source\PSoC4/Capsense.c ****             counterResolution |= (uint32)(Capsense_RESOLUTION_8_BITS);
1360:Generated_Source\PSoC4/Capsense.c ****         }
1361:Generated_Source\PSoC4/Capsense.c ****     #endif /* ((Capsense_TUNING_METHOD == Capsense__TUNING_AUTO) &&\
1362:Generated_Source\PSoC4/Capsense.c ****                (0 != Capsense_IS_OVERSAMPLING_EN)) */
1363:Generated_Source\PSoC4/Capsense.c **** 
1364:Generated_Source\PSoC4/Capsense.c ****     #if (0u != Capsense_IS_M0S8PERI_BLOCK)
1365:Generated_Source\PSoC4/Capsense.c ****         Capsense_SenseClk_Stop();
 1710              		.loc 1 1365 0
 1711 001e FFF7FEFF 		bl	Capsense_SenseClk_Stop
1366:Generated_Source\PSoC4/Capsense.c ****         Capsense_SampleClk_Stop();
 1712              		.loc 1 1366 0
 1713 0022 FFF7FEFF 		bl	Capsense_SampleClk_Stop
1367:Generated_Source\PSoC4/Capsense.c ****     #endif /* (0u != Capsense_IS_M0S8PERI_BLOCK) */
1368:Generated_Source\PSoC4/Capsense.c **** 
1369:Generated_Source\PSoC4/Capsense.c ****     #if (0u != Capsense_MULTIPLE_FREQUENCY_SET)
1370:Generated_Source\PSoC4/Capsense.c ****         Capsense_SampleClk_SetDividerValue((uint16)Capsense_sampleClkDividerVal[sensor]);
 1714              		.loc 1 1370 0
 1715 0026 3D4A     		ldr	r2, .L89+4
 1716 0028 7B68     		ldr	r3, [r7, #4]
 1717 002a D318     		adds	r3, r2, r3
 1718 002c 1B78     		ldrb	r3, [r3]
 1719 002e 9BB2     		uxth	r3, r3
 1720 0030 013B     		subs	r3, r3, #1
 1721 0032 9BB2     		uxth	r3, r3
 1722 0034 0021     		movs	r1, #0
 1723 0036 1800     		movs	r0, r3
 1724 0038 FFF7FEFF 		bl	Capsense_SampleClk_SetFractionalDividerRegister
1371:Generated_Source\PSoC4/Capsense.c ****         Capsense_SenseClk_SetDividerValue((uint16)Capsense_senseClkDividerVal[sensor]);
 1725              		.loc 1 1371 0
 1726 003c 384A     		ldr	r2, .L89+8
 1727 003e 7B68     		ldr	r3, [r7, #4]
 1728 0040 D318     		adds	r3, r2, r3
 1729 0042 1B78     		ldrb	r3, [r3]
 1730 0044 9BB2     		uxth	r3, r3
 1731 0046 013B     		subs	r3, r3, #1
 1732 0048 9BB2     		uxth	r3, r3
 1733 004a 0021     		movs	r1, #0
 1734 004c 1800     		movs	r0, r3
 1735 004e FFF7FEFF 		bl	Capsense_SenseClk_SetFractionalDividerRegister
1372:Generated_Source\PSoC4/Capsense.c ****     #else
1373:Generated_Source\PSoC4/Capsense.c ****         Capsense_SampleClk_SetDividerValue((uint16)Capsense_sampleClkDividerVal);
1374:Generated_Source\PSoC4/Capsense.c ****         Capsense_SenseClk_SetDividerValue((uint16)Capsense_senseClkDividerVal);
1375:Generated_Source\PSoC4/Capsense.c ****     #endif /* (0u != Capsense_MULTIPLE_FREQUENCY_SET) */
1376:Generated_Source\PSoC4/Capsense.c **** 
1377:Generated_Source\PSoC4/Capsense.c ****     #if (0u != Capsense_IS_M0S8PERI_BLOCK)
1378:Generated_Source\PSoC4/Capsense.c ****         Capsense_SampleClk_Start();
 1736              		.loc 1 1378 0
 1737 0052 FF20     		movs	r0, #255
 1738 0054 FFF7FEFF 		bl	Capsense_SampleClk_StartEx
1379:Generated_Source\PSoC4/Capsense.c ****         Capsense_SenseClk_StartEx(Capsense_SampleClk__DIV_ID);
 1739              		.loc 1 1379 0
 1740 0058 4020     		movs	r0, #64
 1741 005a FFF7FEFF 		bl	Capsense_SenseClk_StartEx
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 56


1380:Generated_Source\PSoC4/Capsense.c **** 
1381:Generated_Source\PSoC4/Capsense.c ****         #if(Capsense_PRS_OPTIONS == Capsense__PRS_NONE)
1382:Generated_Source\PSoC4/Capsense.c ****             CyIntDisable(Capsense_ISR_NUMBER);
 1742              		.loc 1 1382 0
 1743 005e 1020     		movs	r0, #16
 1744 0060 FFF7FEFF 		bl	CyIntDisable
1383:Generated_Source\PSoC4/Capsense.c ****             Capsense_CSD_CNT_REG = Capsense_ONE_CYCLE;
 1745              		.loc 1 1383 0
 1746 0064 2F4B     		ldr	r3, .L89+12
 1747 0066 8022     		movs	r2, #128
 1748 0068 5202     		lsls	r2, r2, #9
 1749 006a 1A60     		str	r2, [r3]
1384:Generated_Source\PSoC4/Capsense.c ****             while(0u != (Capsense_CSD_CNT_REG & Capsense_RESOLUTION_16_BITS))
 1750              		.loc 1 1384 0
 1751 006c C046     		nop
 1752              	.L88:
 1753              		.loc 1 1384 0 is_stmt 0 discriminator 1
 1754 006e 2D4B     		ldr	r3, .L89+12
 1755 0070 1B68     		ldr	r3, [r3]
 1756 0072 1B0C     		lsrs	r3, r3, #16
 1757 0074 1B04     		lsls	r3, r3, #16
 1758 0076 FAD1     		bne	.L88
1385:Generated_Source\PSoC4/Capsense.c ****             {
1386:Generated_Source\PSoC4/Capsense.c ****             /* Wait until scanning is complete */
1387:Generated_Source\PSoC4/Capsense.c ****             }
1388:Generated_Source\PSoC4/Capsense.c ****             Capsense_CSD_INTR_REG = 1u;
 1759              		.loc 1 1388 0 is_stmt 1
 1760 0078 2B4B     		ldr	r3, .L89+16
 1761 007a 0122     		movs	r2, #1
 1762 007c 1A60     		str	r2, [r3]
1389:Generated_Source\PSoC4/Capsense.c ****             CyIntClearPending(Capsense_ISR_NUMBER);
 1763              		.loc 1 1389 0
 1764 007e 1020     		movs	r0, #16
 1765 0080 FFF7FEFF 		bl	CyIntClearPending
1390:Generated_Source\PSoC4/Capsense.c ****             CyIntEnable(Capsense_ISR_NUMBER);
 1766              		.loc 1 1390 0
 1767 0084 1020     		movs	r0, #16
 1768 0086 FFF7FEFF 		bl	CyIntEnable
1391:Generated_Source\PSoC4/Capsense.c ****         #endif /* Capsense_PRS_OPTIONS == Capsense__PRS_NONE */
1392:Generated_Source\PSoC4/Capsense.c ****     #endif /* (0u != Capsense_IS_M0S8PERI_BLOCK) */
1393:Generated_Source\PSoC4/Capsense.c **** 
1394:Generated_Source\PSoC4/Capsense.c **** #if(Capsense_PRS_OPTIONS != Capsense__PRS_NONE)
1395:Generated_Source\PSoC4/Capsense.c **** 
1396:Generated_Source\PSoC4/Capsense.c ****     #if(Capsense_TUNING_METHOD == Capsense__TUNING_AUTO)
1397:Generated_Source\PSoC4/Capsense.c ****         if(Capsense_prescalersTuningDone != 0u)
1398:Generated_Source\PSoC4/Capsense.c ****         {
1399:Generated_Source\PSoC4/Capsense.c ****     #endif /* (Capsense_TUNING_METHOD == Capsense__TUNING_AUTO) */
1400:Generated_Source\PSoC4/Capsense.c **** 
1401:Generated_Source\PSoC4/Capsense.c ****             CyIntDisable(Capsense_ISR_NUMBER);
1402:Generated_Source\PSoC4/Capsense.c **** 
1403:Generated_Source\PSoC4/Capsense.c ****             newRegValue = Capsense_CSD_CFG_REG;
1404:Generated_Source\PSoC4/Capsense.c ****             newRegValue |= Capsense_CSD_CFG_PRS_SELECT;
1405:Generated_Source\PSoC4/Capsense.c **** 
1406:Generated_Source\PSoC4/Capsense.c ****             #if(Capsense_PRS_OPTIONS == Capsense__PRS_AUTO)
1407:Generated_Source\PSoC4/Capsense.c **** 
1408:Generated_Source\PSoC4/Capsense.c ****                 newRegValue &= ~(Capsense_PRS_MODE_MASK);
1409:Generated_Source\PSoC4/Capsense.c **** 
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 57


1410:Generated_Source\PSoC4/Capsense.c ****                 #if (0u != Capsense_MULTIPLE_FREQUENCY_SET)
1411:Generated_Source\PSoC4/Capsense.c ****                     senseClkDivMath = Capsense_senseClkDividerVal[sensor];
1412:Generated_Source\PSoC4/Capsense.c ****                     sampleClkDivMath = Capsense_sampleClkDividerVal[sensor];
1413:Generated_Source\PSoC4/Capsense.c ****                 #else
1414:Generated_Source\PSoC4/Capsense.c ****                     senseClkDivMath = Capsense_senseClkDividerVal;
1415:Generated_Source\PSoC4/Capsense.c ****                     sampleClkDivMath = Capsense_sampleClkDividerVal;
1416:Generated_Source\PSoC4/Capsense.c ****                 #endif /* ( Capsense_MULTIPLE_FREQUENCY_SET) */
1417:Generated_Source\PSoC4/Capsense.c **** 
1418:Generated_Source\PSoC4/Capsense.c ****                 #if(0u == Capsense_IS_M0S8PERI_BLOCK)
1419:Generated_Source\PSoC4/Capsense.c ****                     senseClkDivMath *= sampleClkDivMath;
1420:Generated_Source\PSoC4/Capsense.c ****                 #endif /* (0u == Capsense_IS_M0S8PERI_BLOCK) */
1421:Generated_Source\PSoC4/Capsense.c **** 
1422:Generated_Source\PSoC4/Capsense.c ****                 if((senseClkDivMath * Capsense_RESOLUTION_12_BITS) <
1423:Generated_Source\PSoC4/Capsense.c ****                    (sampleClkDivMath * Capsense_widgetResolution[widget]))
1424:Generated_Source\PSoC4/Capsense.c ****                 {
1425:Generated_Source\PSoC4/Capsense.c ****                     newRegValue |= Capsense_CSD_PRS_12_BIT;
1426:Generated_Source\PSoC4/Capsense.c ****                 }
1427:Generated_Source\PSoC4/Capsense.c ****             #endif /* (Capsense_PRS_OPTIONS == Capsense__PRS_AUTO) */
1428:Generated_Source\PSoC4/Capsense.c **** 
1429:Generated_Source\PSoC4/Capsense.c ****             Capsense_CSD_CFG_REG = newRegValue;
1430:Generated_Source\PSoC4/Capsense.c **** 
1431:Generated_Source\PSoC4/Capsense.c ****             CyIntEnable(Capsense_ISR_NUMBER);
1432:Generated_Source\PSoC4/Capsense.c **** 
1433:Generated_Source\PSoC4/Capsense.c ****     #if(Capsense_TUNING_METHOD == Capsense__TUNING_AUTO)
1434:Generated_Source\PSoC4/Capsense.c ****         }
1435:Generated_Source\PSoC4/Capsense.c ****     #endif /* (Capsense_PRS_OPTIONS != Capsense__PRS_NONE) */
1436:Generated_Source\PSoC4/Capsense.c **** 
1437:Generated_Source\PSoC4/Capsense.c **** #endif /* (Capsense_PRS_OPTIONS == Capsense__PRS_NONE) */
1438:Generated_Source\PSoC4/Capsense.c **** 
1439:Generated_Source\PSoC4/Capsense.c ****     /* Set Idac Value */
1440:Generated_Source\PSoC4/Capsense.c ****     CyIntDisable(Capsense_ISR_NUMBER);
 1769              		.loc 1 1440 0
 1770 008a 1020     		movs	r0, #16
 1771 008c FFF7FEFF 		bl	CyIntDisable
1441:Generated_Source\PSoC4/Capsense.c ****     newRegValue = Capsense_CSD_IDAC_REG;
 1772              		.loc 1 1441 0
 1773 0090 264B     		ldr	r3, .L89+20
 1774 0092 1B68     		ldr	r3, [r3]
 1775 0094 FB60     		str	r3, [r7, #12]
1442:Generated_Source\PSoC4/Capsense.c **** 
1443:Generated_Source\PSoC4/Capsense.c **** #if (Capsense_IDAC_CNT == 1u)
1444:Generated_Source\PSoC4/Capsense.c ****     newRegValue &= ~(Capsense_CSD_IDAC1_DATA_MASK);
1445:Generated_Source\PSoC4/Capsense.c ****     newRegValue |= Capsense_modulationIDAC[sensor];
1446:Generated_Source\PSoC4/Capsense.c **** #else
1447:Generated_Source\PSoC4/Capsense.c ****     newRegValue &= ~(Capsense_CSD_IDAC1_DATA_MASK | Capsense_CSD_IDAC2_DATA_MASK);
 1776              		.loc 1 1447 0
 1777 0096 FB68     		ldr	r3, [r7, #12]
 1778 0098 254A     		ldr	r2, .L89+24
 1779 009a 1340     		ands	r3, r2
 1780 009c FB60     		str	r3, [r7, #12]
1448:Generated_Source\PSoC4/Capsense.c ****     newRegValue |= (Capsense_modulationIDAC[sensor] |
 1781              		.loc 1 1448 0
 1782 009e 254A     		ldr	r2, .L89+28
 1783 00a0 7B68     		ldr	r3, [r7, #4]
 1784 00a2 D318     		adds	r3, r2, r3
 1785 00a4 1B78     		ldrb	r3, [r3]
 1786 00a6 1900     		movs	r1, r3
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 58


1449:Generated_Source\PSoC4/Capsense.c ****                             (uint32)((uint32)Capsense_compensationIDAC[sensor] <<
 1787              		.loc 1 1449 0
 1788 00a8 234A     		ldr	r2, .L89+32
 1789 00aa 7B68     		ldr	r3, [r7, #4]
 1790 00ac D318     		adds	r3, r2, r3
 1791 00ae 1B78     		ldrb	r3, [r3]
 1792 00b0 1B04     		lsls	r3, r3, #16
1448:Generated_Source\PSoC4/Capsense.c ****     newRegValue |= (Capsense_modulationIDAC[sensor] |
 1793              		.loc 1 1448 0
 1794 00b2 0B43     		orrs	r3, r1
 1795 00b4 FA68     		ldr	r2, [r7, #12]
 1796 00b6 1343     		orrs	r3, r2
 1797 00b8 FB60     		str	r3, [r7, #12]
1450:Generated_Source\PSoC4/Capsense.c ****                             Capsense_CSD_IDAC2_DATA_OFFSET));
1451:Generated_Source\PSoC4/Capsense.c **** #endif /* (Capsense_IDAC_CNT == 1u) */
1452:Generated_Source\PSoC4/Capsense.c **** 
1453:Generated_Source\PSoC4/Capsense.c ****     Capsense_CSD_IDAC_REG = newRegValue;
 1798              		.loc 1 1453 0
 1799 00ba 1C4B     		ldr	r3, .L89+20
 1800 00bc FA68     		ldr	r2, [r7, #12]
 1801 00be 1A60     		str	r2, [r3]
1454:Generated_Source\PSoC4/Capsense.c **** 
1455:Generated_Source\PSoC4/Capsense.c **** #if(Capsense_CMOD_PREGARGE_OPTION == Capsense__CAPPRIOBUF)
1456:Generated_Source\PSoC4/Capsense.c ****     newRegValue = Capsense_CMOD_CONNECTION_REG;
1457:Generated_Source\PSoC4/Capsense.c ****     newRegValue &= ~(Capsense_CSD_CMOD_CONNECTION_MASK);
1458:Generated_Source\PSoC4/Capsense.c ****     newRegValue |= Capsense_CSD_CMOD_TO_AMUXBUS_A;
1459:Generated_Source\PSoC4/Capsense.c ****     Capsense_CMOD_CONNECTION_REG = newRegValue;
1460:Generated_Source\PSoC4/Capsense.c **** 
1461:Generated_Source\PSoC4/Capsense.c ****     newRegValue = Capsense_CMOD_PORT_PC_REG;
1462:Generated_Source\PSoC4/Capsense.c ****     newRegValue &= ~(Capsense_CSD_CMOD_PC_MASK);
1463:Generated_Source\PSoC4/Capsense.c ****     newRegValue |= Capsense_CMOD_PC_HIGH_Z_MODE;
1464:Generated_Source\PSoC4/Capsense.c ****     Capsense_CMOD_PORT_PC_REG = newRegValue;
1465:Generated_Source\PSoC4/Capsense.c **** #endif /* (Capsense_CMOD_PREGARGE_OPTION == Capsense__CAPPRIOBUF) */
1466:Generated_Source\PSoC4/Capsense.c **** 
1467:Generated_Source\PSoC4/Capsense.c ****     /* Disconnect Vref Buffer from AMUX */
1468:Generated_Source\PSoC4/Capsense.c ****     newRegValue = Capsense_CSD_CFG_REG;
 1802              		.loc 1 1468 0
 1803 00c0 1E4B     		ldr	r3, .L89+36
 1804 00c2 1B68     		ldr	r3, [r3]
 1805 00c4 FB60     		str	r3, [r7, #12]
1469:Generated_Source\PSoC4/Capsense.c ****     newRegValue &= ~(Capsense_PRECHARGE_CONFIG_MASK);
 1806              		.loc 1 1469 0
 1807 00c6 FB68     		ldr	r3, [r7, #12]
 1808 00c8 1D4A     		ldr	r2, .L89+40
 1809 00ca 1340     		ands	r3, r2
 1810 00cc FB60     		str	r3, [r7, #12]
1470:Generated_Source\PSoC4/Capsense.c ****     newRegValue |= Capsense_CTANK_PRECHARGE_CONFIG;
 1811              		.loc 1 1470 0
 1812 00ce FB68     		ldr	r3, [r7, #12]
 1813 00d0 1C4A     		ldr	r2, .L89+44
 1814 00d2 1343     		orrs	r3, r2
 1815 00d4 FB60     		str	r3, [r7, #12]
1471:Generated_Source\PSoC4/Capsense.c **** 
1472:Generated_Source\PSoC4/Capsense.c ****     CyIntEnable(Capsense_ISR_NUMBER);
 1816              		.loc 1 1472 0
 1817 00d6 1020     		movs	r0, #16
 1818 00d8 FFF7FEFF 		bl	CyIntEnable
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 59


1473:Generated_Source\PSoC4/Capsense.c **** 
1474:Generated_Source\PSoC4/Capsense.c ****     /* Enable Sensor */
1475:Generated_Source\PSoC4/Capsense.c ****     Capsense_EnableScanSlot(sensor);
 1819              		.loc 1 1475 0
 1820 00dc 7B68     		ldr	r3, [r7, #4]
 1821 00de 1800     		movs	r0, r3
 1822 00e0 FFF7FEFF 		bl	Capsense_EnableSensor
1476:Generated_Source\PSoC4/Capsense.c **** 
1477:Generated_Source\PSoC4/Capsense.c ****     interruptState = CyEnterCriticalSection();
 1823              		.loc 1 1477 0
 1824 00e4 0B23     		movs	r3, #11
 1825 00e6 FC18     		adds	r4, r7, r3
 1826 00e8 FFF7FEFF 		bl	CyEnterCriticalSection
 1827 00ec 0300     		movs	r3, r0
 1828 00ee 2370     		strb	r3, [r4]
1478:Generated_Source\PSoC4/Capsense.c ****     Capsense_CSD_CFG_REG = newRegValue;
 1829              		.loc 1 1478 0
 1830 00f0 124B     		ldr	r3, .L89+36
 1831 00f2 FA68     		ldr	r2, [r7, #12]
 1832 00f4 1A60     		str	r2, [r3]
1479:Generated_Source\PSoC4/Capsense.c **** 
1480:Generated_Source\PSoC4/Capsense.c ****     /* `#START Capsense_PreSettlingDelay_Debug` */
1481:Generated_Source\PSoC4/Capsense.c **** 
1482:Generated_Source\PSoC4/Capsense.c ****     /* `#END` */
1483:Generated_Source\PSoC4/Capsense.c **** 
1484:Generated_Source\PSoC4/Capsense.c **** #ifdef Capsense_PRE_SCAN_PRE_SETTLING_DELAY_DEBUG_CALLBACK
1485:Generated_Source\PSoC4/Capsense.c ****     Capsense_PreScan_Pre_SettlingDelay_Debug_Callback();
1486:Generated_Source\PSoC4/Capsense.c **** #endif /* Capsense_PRE_SCAN_PRE_SETTLING_DELAY_DEBUG_CALLBACK */
1487:Generated_Source\PSoC4/Capsense.c **** 
1488:Generated_Source\PSoC4/Capsense.c ****     CyDelayCycles(Capsense_GLITCH_ELIMINATION_CYCLES);
 1833              		.loc 1 1488 0
 1834 00f6 0020     		movs	r0, #0
 1835 00f8 FFF7FEFF 		bl	CyDelayCycles
1489:Generated_Source\PSoC4/Capsense.c **** 
1490:Generated_Source\PSoC4/Capsense.c ****     /* `#START Capsense_PreScan_Debug` */
1491:Generated_Source\PSoC4/Capsense.c **** 
1492:Generated_Source\PSoC4/Capsense.c ****     /* `#END` */
1493:Generated_Source\PSoC4/Capsense.c **** 
1494:Generated_Source\PSoC4/Capsense.c **** #ifdef Capsense_PRE_SCAN_DEBUG_CALLBACK
1495:Generated_Source\PSoC4/Capsense.c ****     Capsense_PreScan_Debug_Callback();
1496:Generated_Source\PSoC4/Capsense.c **** #endif /* Capsense_PRE_SCAN_DEBUG_CALLBACK */
1497:Generated_Source\PSoC4/Capsense.c **** 
1498:Generated_Source\PSoC4/Capsense.c ****     Capsense_CSD_CNT_REG = counterResolution;
 1836              		.loc 1 1498 0
 1837 00fc 094B     		ldr	r3, .L89+12
 1838 00fe 3A69     		ldr	r2, [r7, #16]
 1839 0100 1A60     		str	r2, [r3]
1499:Generated_Source\PSoC4/Capsense.c ****     CyExitCriticalSection(interruptState);
 1840              		.loc 1 1499 0
 1841 0102 0B23     		movs	r3, #11
 1842 0104 FB18     		adds	r3, r7, r3
 1843 0106 1B78     		ldrb	r3, [r3]
 1844 0108 1800     		movs	r0, r3
 1845 010a FFF7FEFF 		bl	CyExitCriticalSection
1500:Generated_Source\PSoC4/Capsense.c **** }
 1846              		.loc 1 1500 0
 1847 010e C046     		nop
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 60


 1848 0110 BD46     		mov	sp, r7
 1849 0112 07B0     		add	sp, sp, #28
 1850              		@ sp needed
 1851 0114 90BD     		pop	{r4, r7, pc}
 1852              	.L90:
 1853 0116 C046     		.align	2
 1854              	.L89:
 1855 0118 00000000 		.word	Capsense_widgetResolution
 1856 011c 00000000 		.word	Capsense_sampleClkDividerVal
 1857 0120 00000000 		.word	Capsense_senseClkDividerVal
 1858 0124 0C002840 		.word	1076363276
 1859 0128 14002840 		.word	1076363284
 1860 012c 08002840 		.word	1076363272
 1861 0130 00FF80FF 		.word	-8323328
 1862 0134 00000000 		.word	Capsense_modulationIDAC
 1863 0138 00000000 		.word	Capsense_compensationIDAC
 1864 013c 04002840 		.word	1076363268
 1865 0140 FF1FDFFF 		.word	-2154497
 1866 0144 20002000 		.word	2097184
 1867              		.cfi_endproc
 1868              	.LFE56:
 1869              		.size	Capsense_PreScan, .-Capsense_PreScan
 1870              		.section	.text.Capsense_PostScan,"ax",%progbits
 1871              		.align	2
 1872              		.global	Capsense_PostScan
 1873              		.code	16
 1874              		.thumb_func
 1875              		.type	Capsense_PostScan, %function
 1876              	Capsense_PostScan:
 1877              	.LFB57:
1501:Generated_Source\PSoC4/Capsense.c **** 
1502:Generated_Source\PSoC4/Capsense.c **** 
1503:Generated_Source\PSoC4/Capsense.c **** /*******************************************************************************
1504:Generated_Source\PSoC4/Capsense.c **** * Function Name: Capsense_PostScan
1505:Generated_Source\PSoC4/Capsense.c **** ********************************************************************************
1506:Generated_Source\PSoC4/Capsense.c **** *
1507:Generated_Source\PSoC4/Capsense.c **** * Summary:
1508:Generated_Source\PSoC4/Capsense.c **** *  Stores the results of measurement in the Capsense_sensorRaw[] array,
1509:Generated_Source\PSoC4/Capsense.c **** *  sets the scanning sensor in the non-sampling state, turns off Idac(Current Source IDAC),
1510:Generated_Source\PSoC4/Capsense.c **** *  disconnects the IDAC(Sink mode), and applies Vref on AMUX.
1511:Generated_Source\PSoC4/Capsense.c **** *
1512:Generated_Source\PSoC4/Capsense.c **** * Parameters:
1513:Generated_Source\PSoC4/Capsense.c **** *  sensor:  Sensor number.
1514:Generated_Source\PSoC4/Capsense.c **** *
1515:Generated_Source\PSoC4/Capsense.c **** * Return:
1516:Generated_Source\PSoC4/Capsense.c **** *  None
1517:Generated_Source\PSoC4/Capsense.c **** *
1518:Generated_Source\PSoC4/Capsense.c **** * Global Variables:
1519:Generated_Source\PSoC4/Capsense.c **** *  Capsense_sensorRaw[] - used to store sensors raw data.
1520:Generated_Source\PSoC4/Capsense.c **** *
1521:Generated_Source\PSoC4/Capsense.c **** * Side Effects:
1522:Generated_Source\PSoC4/Capsense.c **** *  None
1523:Generated_Source\PSoC4/Capsense.c **** *
1524:Generated_Source\PSoC4/Capsense.c **** *******************************************************************************/
1525:Generated_Source\PSoC4/Capsense.c **** void Capsense_PostScan(uint32 sensor)
1526:Generated_Source\PSoC4/Capsense.c **** {
 1878              		.loc 1 1526 0
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 61


 1879              		.cfi_startproc
 1880              		@ args = 0, pretend = 0, frame = 16
 1881              		@ frame_needed = 1, uses_anonymous_args = 0
 1882 0000 80B5     		push	{r7, lr}
 1883              		.cfi_def_cfa_offset 8
 1884              		.cfi_offset 7, -8
 1885              		.cfi_offset 14, -4
 1886 0002 84B0     		sub	sp, sp, #16
 1887              		.cfi_def_cfa_offset 24
 1888 0004 00AF     		add	r7, sp, #0
 1889              		.cfi_def_cfa_register 7
 1890 0006 7860     		str	r0, [r7, #4]
1527:Generated_Source\PSoC4/Capsense.c ****     uint32 newRegValue;
1528:Generated_Source\PSoC4/Capsense.c **** #if ((Capsense_TUNING_METHOD == Capsense__TUNING_AUTO) &&\
1529:Generated_Source\PSoC4/Capsense.c ****      (0 != Capsense_IS_OVERSAMPLING_EN))
1530:Generated_Source\PSoC4/Capsense.c ****     uint32 oversamplingFactor;
1531:Generated_Source\PSoC4/Capsense.c ****     uint32 widget;
1532:Generated_Source\PSoC4/Capsense.c **** #endif /* ((Capsense_TUNING_METHOD == Capsense__TUNING_AUTO) &&\
1533:Generated_Source\PSoC4/Capsense.c ****            (0 != Capsense_IS_OVERSAMPLING_EN)) */
1534:Generated_Source\PSoC4/Capsense.c **** 
1535:Generated_Source\PSoC4/Capsense.c ****     /* `#START Capsense_PostScan_Debug` */
1536:Generated_Source\PSoC4/Capsense.c **** 
1537:Generated_Source\PSoC4/Capsense.c ****     /* `#END` */
1538:Generated_Source\PSoC4/Capsense.c **** 
1539:Generated_Source\PSoC4/Capsense.c **** #ifdef Capsense_POST_SCAN_DEBUG_CALLBACK
1540:Generated_Source\PSoC4/Capsense.c ****     Capsense_PostScan_Debug_Callback();
1541:Generated_Source\PSoC4/Capsense.c **** #endif /* Capsense_POST_SCAN_DEBUG_Callback */
1542:Generated_Source\PSoC4/Capsense.c **** 
1543:Generated_Source\PSoC4/Capsense.c ****     /* Read SlotResult from Raw Counter */
1544:Generated_Source\PSoC4/Capsense.c ****     Capsense_sensorRaw[sensor]  = (uint16)Capsense_CSD_CNT_REG;
 1891              		.loc 1 1544 0
 1892 0008 144B     		ldr	r3, .L92
 1893 000a 1B68     		ldr	r3, [r3]
 1894 000c 99B2     		uxth	r1, r3
 1895 000e 144B     		ldr	r3, .L92+4
 1896 0010 7A68     		ldr	r2, [r7, #4]
 1897 0012 5200     		lsls	r2, r2, #1
 1898 0014 D152     		strh	r1, [r2, r3]
1545:Generated_Source\PSoC4/Capsense.c **** 
1546:Generated_Source\PSoC4/Capsense.c **** #if ((Capsense_TUNING_METHOD == Capsense__TUNING_AUTO) &&\
1547:Generated_Source\PSoC4/Capsense.c ****      (0 != Capsense_IS_OVERSAMPLING_EN))
1548:Generated_Source\PSoC4/Capsense.c ****     widget = Capsense_widgetNumber[sensor];
1549:Generated_Source\PSoC4/Capsense.c ****     if(Capsense_widgetResolution[widget] < Capsense_RESOLUTION_16_BITS)
1550:Generated_Source\PSoC4/Capsense.c ****     {
1551:Generated_Source\PSoC4/Capsense.c ****         oversamplingFactor = Capsense_GetBitValue(Capsense_scanSpeedTbl, sensor);
1552:Generated_Source\PSoC4/Capsense.c ****         Capsense_sensorRaw[sensor] >>= oversamplingFactor;
1553:Generated_Source\PSoC4/Capsense.c ****     }
1554:Generated_Source\PSoC4/Capsense.c **** #endif /* ((Capsense_TUNING_METHOD == Capsense__TUNING_AUTO) &&\
1555:Generated_Source\PSoC4/Capsense.c ****            (0 != Capsense_IS_OVERSAMPLING_EN)) */
1556:Generated_Source\PSoC4/Capsense.c **** 
1557:Generated_Source\PSoC4/Capsense.c ****     /* Disable Sensor */
1558:Generated_Source\PSoC4/Capsense.c ****     Capsense_DisableScanSlot(sensor);
 1899              		.loc 1 1558 0
 1900 0016 7B68     		ldr	r3, [r7, #4]
 1901 0018 1800     		movs	r0, r3
 1902 001a FFF7FEFF 		bl	Capsense_DisableSensor
1559:Generated_Source\PSoC4/Capsense.c **** 
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 62


1560:Generated_Source\PSoC4/Capsense.c ****     CyIntDisable(Capsense_ISR_NUMBER);
 1903              		.loc 1 1560 0
 1904 001e 1020     		movs	r0, #16
 1905 0020 FFF7FEFF 		bl	CyIntDisable
1561:Generated_Source\PSoC4/Capsense.c **** 
1562:Generated_Source\PSoC4/Capsense.c **** #if(Capsense_CMOD_PREGARGE_OPTION == Capsense__CAPPRIOBUF)
1563:Generated_Source\PSoC4/Capsense.c ****     newRegValue = Capsense_CMOD_CONNECTION_REG;
1564:Generated_Source\PSoC4/Capsense.c ****     newRegValue &= ~(Capsense_CSD_CMOD_CONNECTION_MASK);
1565:Generated_Source\PSoC4/Capsense.c ****     newRegValue |= Capsense_CSD_CMOD_TO_AMUXBUS_B;
1566:Generated_Source\PSoC4/Capsense.c ****     Capsense_CMOD_CONNECTION_REG = newRegValue;
1567:Generated_Source\PSoC4/Capsense.c **** 
1568:Generated_Source\PSoC4/Capsense.c ****     newRegValue = Capsense_CMOD_PORT_PC_REG;
1569:Generated_Source\PSoC4/Capsense.c ****     newRegValue &= ~(Capsense_CSD_CMOD_PC_MASK);
1570:Generated_Source\PSoC4/Capsense.c ****     newRegValue |= Capsense_CMOD_PC_STRONG_MODE;
1571:Generated_Source\PSoC4/Capsense.c ****     Capsense_CMOD_PORT_PC_REG = newRegValue;
1572:Generated_Source\PSoC4/Capsense.c **** 
1573:Generated_Source\PSoC4/Capsense.c ****     newRegValue = Capsense_CMOD_PORT_DR_REG;
1574:Generated_Source\PSoC4/Capsense.c ****     newRegValue &= ~(Capsense_CMOD_DR_MASK);
1575:Generated_Source\PSoC4/Capsense.c ****     newRegValue |= Capsense_CMOD_DR_CONFIG;
1576:Generated_Source\PSoC4/Capsense.c ****     Capsense_CMOD_PORT_DR_REG = newRegValue;
1577:Generated_Source\PSoC4/Capsense.c **** #endif /* (Capsense_CMOD_PREGARGE_OPTION == Capsense__CAPPRIOBUF) */
1578:Generated_Source\PSoC4/Capsense.c **** 
1579:Generated_Source\PSoC4/Capsense.c ****     /* Connect Vref Buffer to AMUX bus  */
1580:Generated_Source\PSoC4/Capsense.c ****     newRegValue = Capsense_CSD_CFG_REG;
 1906              		.loc 1 1580 0
 1907 0024 0F4B     		ldr	r3, .L92+8
 1908 0026 1B68     		ldr	r3, [r3]
 1909 0028 FB60     		str	r3, [r7, #12]
1581:Generated_Source\PSoC4/Capsense.c ****     newRegValue &= ~(Capsense_PRECHARGE_CONFIG_MASK);
 1910              		.loc 1 1581 0
 1911 002a FB68     		ldr	r3, [r7, #12]
 1912 002c 0E4A     		ldr	r2, .L92+12
 1913 002e 1340     		ands	r3, r2
 1914 0030 FB60     		str	r3, [r7, #12]
1582:Generated_Source\PSoC4/Capsense.c ****     newRegValue |= Capsense_CMOD_PRECHARGE_CONFIG;
 1915              		.loc 1 1582 0
 1916 0032 FB68     		ldr	r3, [r7, #12]
 1917 0034 A022     		movs	r2, #160
 1918 0036 1202     		lsls	r2, r2, #8
 1919 0038 1343     		orrs	r3, r2
 1920 003a FB60     		str	r3, [r7, #12]
1583:Generated_Source\PSoC4/Capsense.c ****     Capsense_CSD_CFG_REG = newRegValue;
 1921              		.loc 1 1583 0
 1922 003c 094B     		ldr	r3, .L92+8
 1923 003e FA68     		ldr	r2, [r7, #12]
 1924 0040 1A60     		str	r2, [r3]
1584:Generated_Source\PSoC4/Capsense.c **** 
1585:Generated_Source\PSoC4/Capsense.c ****     /* Set Idac Value = 0 */
1586:Generated_Source\PSoC4/Capsense.c **** #if (Capsense_IDAC_CNT == 1u)
1587:Generated_Source\PSoC4/Capsense.c ****     Capsense_CSD_IDAC_REG &= ~(Capsense_CSD_IDAC1_DATA_MASK);
1588:Generated_Source\PSoC4/Capsense.c **** #else
1589:Generated_Source\PSoC4/Capsense.c ****     Capsense_CSD_IDAC_REG &= ~(Capsense_CSD_IDAC1_DATA_MASK | Capsense_CSD_IDAC2_DATA_MASK);
 1925              		.loc 1 1589 0
 1926 0042 0A4B     		ldr	r3, .L92+16
 1927 0044 094A     		ldr	r2, .L92+16
 1928 0046 1268     		ldr	r2, [r2]
 1929 0048 0949     		ldr	r1, .L92+20
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 63


 1930 004a 0A40     		ands	r2, r1
 1931 004c 1A60     		str	r2, [r3]
1590:Generated_Source\PSoC4/Capsense.c **** #endif /* (Capsense_IDAC_CNT == 1u) */
1591:Generated_Source\PSoC4/Capsense.c **** 
1592:Generated_Source\PSoC4/Capsense.c ****     CyIntEnable(Capsense_ISR_NUMBER);
 1932              		.loc 1 1592 0
 1933 004e 1020     		movs	r0, #16
 1934 0050 FFF7FEFF 		bl	CyIntEnable
1593:Generated_Source\PSoC4/Capsense.c **** }
 1935              		.loc 1 1593 0
 1936 0054 C046     		nop
 1937 0056 BD46     		mov	sp, r7
 1938 0058 04B0     		add	sp, sp, #16
 1939              		@ sp needed
 1940 005a 80BD     		pop	{r7, pc}
 1941              	.L93:
 1942              		.align	2
 1943              	.L92:
 1944 005c 0C002840 		.word	1076363276
 1945 0060 00000000 		.word	Capsense_sensorRaw
 1946 0064 04002840 		.word	1076363268
 1947 0068 FF1FDFFF 		.word	-2154497
 1948 006c 08002840 		.word	1076363272
 1949 0070 00FF80FF 		.word	-8323328
 1950              		.cfi_endproc
 1951              	.LFE57:
 1952              		.size	Capsense_PostScan, .-Capsense_PostScan
 1953              		.section	.text.Capsense_EnableShieldElectrode,"ax",%progbits
 1954              		.align	2
 1955              		.global	Capsense_EnableShieldElectrode
 1956              		.code	16
 1957              		.thumb_func
 1958              		.type	Capsense_EnableShieldElectrode, %function
 1959              	Capsense_EnableShieldElectrode:
 1960              	.LFB58:
1594:Generated_Source\PSoC4/Capsense.c **** 
1595:Generated_Source\PSoC4/Capsense.c **** 
1596:Generated_Source\PSoC4/Capsense.c **** /*******************************************************************************
1597:Generated_Source\PSoC4/Capsense.c **** * Function Name: Capsense_EnableShieldElectrode
1598:Generated_Source\PSoC4/Capsense.c **** ********************************************************************************
1599:Generated_Source\PSoC4/Capsense.c **** *
1600:Generated_Source\PSoC4/Capsense.c **** * Summary:
1601:Generated_Source\PSoC4/Capsense.c **** *  This API enables or disables the shield electrode on a specified port pin.
1602:Generated_Source\PSoC4/Capsense.c **** *
1603:Generated_Source\PSoC4/Capsense.c **** * Parameters:
1604:Generated_Source\PSoC4/Capsense.c **** *  portNumber: contains the shield electrode port number (0, 1, 2).
1605:Generated_Source\PSoC4/Capsense.c **** *  pinNumber: contains the shield electrode pin number (0, 1, 2, ... , 7).
1606:Generated_Source\PSoC4/Capsense.c **** *
1607:Generated_Source\PSoC4/Capsense.c **** * Return:
1608:Generated_Source\PSoC4/Capsense.c **** *  None
1609:Generated_Source\PSoC4/Capsense.c **** *
1610:Generated_Source\PSoC4/Capsense.c **** * Global Variables:
1611:Generated_Source\PSoC4/Capsense.c **** *  Capsense_prtCfgTbl[] - Contains pointers to the port config registers for each port.
1612:Generated_Source\PSoC4/Capsense.c **** *  Capsense_prtSelTbl[] - Contains pointers to the HSIOM registers for each port.
1613:Generated_Source\PSoC4/Capsense.c **** *
1614:Generated_Source\PSoC4/Capsense.c **** * Side Effects:
1615:Generated_Source\PSoC4/Capsense.c **** *  None
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 64


1616:Generated_Source\PSoC4/Capsense.c **** *
1617:Generated_Source\PSoC4/Capsense.c **** *******************************************************************************/
1618:Generated_Source\PSoC4/Capsense.c **** void Capsense_EnableShieldElectrode(uint32 pinNumber, uint32 portNumber)
1619:Generated_Source\PSoC4/Capsense.c **** {
 1961              		.loc 1 1619 0
 1962              		.cfi_startproc
 1963              		@ args = 0, pretend = 0, frame = 16
 1964              		@ frame_needed = 1, uses_anonymous_args = 0
 1965 0000 80B5     		push	{r7, lr}
 1966              		.cfi_def_cfa_offset 8
 1967              		.cfi_offset 7, -8
 1968              		.cfi_offset 14, -4
 1969 0002 84B0     		sub	sp, sp, #16
 1970              		.cfi_def_cfa_offset 24
 1971 0004 00AF     		add	r7, sp, #0
 1972              		.cfi_def_cfa_register 7
 1973 0006 7860     		str	r0, [r7, #4]
 1974 0008 3960     		str	r1, [r7]
1620:Generated_Source\PSoC4/Capsense.c ****     uint32 newRegValue;
1621:Generated_Source\PSoC4/Capsense.c **** 
1622:Generated_Source\PSoC4/Capsense.c ****     *Capsense_prtCfgTbl[portNumber] &= ~(Capsense_CSD_PIN_MODE_MASK << (pinNumber * Capsense_PC_PIN
 1975              		.loc 1 1622 0
 1976 000a 1A4B     		ldr	r3, .L95
 1977 000c 3A68     		ldr	r2, [r7]
 1978 000e 9200     		lsls	r2, r2, #2
 1979 0010 D258     		ldr	r2, [r2, r3]
 1980 0012 184B     		ldr	r3, .L95
 1981 0014 3968     		ldr	r1, [r7]
 1982 0016 8900     		lsls	r1, r1, #2
 1983 0018 CB58     		ldr	r3, [r1, r3]
 1984 001a 1868     		ldr	r0, [r3]
 1985 001c 7968     		ldr	r1, [r7, #4]
 1986 001e 0B00     		movs	r3, r1
 1987 0020 5B00     		lsls	r3, r3, #1
 1988 0022 5B18     		adds	r3, r3, r1
 1989 0024 0721     		movs	r1, #7
 1990 0026 9940     		lsls	r1, r1, r3
 1991 0028 0B00     		movs	r3, r1
 1992 002a DB43     		mvns	r3, r3
 1993 002c 0340     		ands	r3, r0
 1994 002e 1360     		str	r3, [r2]
1623:Generated_Source\PSoC4/Capsense.c ****     newRegValue = *Capsense_prtSelTbl[portNumber];
 1995              		.loc 1 1623 0
 1996 0030 114B     		ldr	r3, .L95+4
 1997 0032 3A68     		ldr	r2, [r7]
 1998 0034 9200     		lsls	r2, r2, #2
 1999 0036 D358     		ldr	r3, [r2, r3]
 2000 0038 1B68     		ldr	r3, [r3]
 2001 003a FB60     		str	r3, [r7, #12]
1624:Generated_Source\PSoC4/Capsense.c ****     newRegValue &= ~(Capsense_CSD_HSIOM_MASK << (pinNumber * Capsense_HSIOM_PIN_CFG_SIZE));
 2002              		.loc 1 1624 0
 2003 003c 7B68     		ldr	r3, [r7, #4]
 2004 003e 9B00     		lsls	r3, r3, #2
 2005 0040 0F22     		movs	r2, #15
 2006 0042 9A40     		lsls	r2, r2, r3
 2007 0044 1300     		movs	r3, r2
 2008 0046 DA43     		mvns	r2, r3
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 65


 2009 0048 FB68     		ldr	r3, [r7, #12]
 2010 004a 1340     		ands	r3, r2
 2011 004c FB60     		str	r3, [r7, #12]
1625:Generated_Source\PSoC4/Capsense.c ****     newRegValue |= (Capsense_CSD_SHIELD_PORT_MODE << (pinNumber * Capsense_HSIOM_PIN_CFG_SIZE));
 2012              		.loc 1 1625 0
 2013 004e 7B68     		ldr	r3, [r7, #4]
 2014 0050 9B00     		lsls	r3, r3, #2
 2015 0052 0522     		movs	r2, #5
 2016 0054 9A40     		lsls	r2, r2, r3
 2017 0056 1300     		movs	r3, r2
 2018 0058 FA68     		ldr	r2, [r7, #12]
 2019 005a 1343     		orrs	r3, r2
 2020 005c FB60     		str	r3, [r7, #12]
1626:Generated_Source\PSoC4/Capsense.c ****     *Capsense_prtSelTbl[portNumber] = newRegValue;
 2021              		.loc 1 1626 0
 2022 005e 064B     		ldr	r3, .L95+4
 2023 0060 3A68     		ldr	r2, [r7]
 2024 0062 9200     		lsls	r2, r2, #2
 2025 0064 D358     		ldr	r3, [r2, r3]
 2026 0066 FA68     		ldr	r2, [r7, #12]
 2027 0068 1A60     		str	r2, [r3]
1627:Generated_Source\PSoC4/Capsense.c **** }
 2028              		.loc 1 1627 0
 2029 006a C046     		nop
 2030 006c BD46     		mov	sp, r7
 2031 006e 04B0     		add	sp, sp, #16
 2032              		@ sp needed
 2033 0070 80BD     		pop	{r7, pc}
 2034              	.L96:
 2035 0072 C046     		.align	2
 2036              	.L95:
 2037 0074 00000000 		.word	Capsense_prtCfgTbl
 2038 0078 00000000 		.word	Capsense_prtSelTbl
 2039              		.cfi_endproc
 2040              	.LFE58:
 2041              		.size	Capsense_EnableShieldElectrode, .-Capsense_EnableShieldElectrode
 2042              		.section	.text.Capsense_SetShieldDelay,"ax",%progbits
 2043              		.align	2
 2044              		.global	Capsense_SetShieldDelay
 2045              		.code	16
 2046              		.thumb_func
 2047              		.type	Capsense_SetShieldDelay, %function
 2048              	Capsense_SetShieldDelay:
 2049              	.LFB59:
1628:Generated_Source\PSoC4/Capsense.c **** 
1629:Generated_Source\PSoC4/Capsense.c **** 
1630:Generated_Source\PSoC4/Capsense.c **** /*******************************************************************************
1631:Generated_Source\PSoC4/Capsense.c **** * Function Name: Capsense_SetShieldDelay
1632:Generated_Source\PSoC4/Capsense.c **** ********************************************************************************
1633:Generated_Source\PSoC4/Capsense.c **** *
1634:Generated_Source\PSoC4/Capsense.c **** * Summary:
1635:Generated_Source\PSoC4/Capsense.c **** *  This API sets a shield delay.
1636:Generated_Source\PSoC4/Capsense.c **** *
1637:Generated_Source\PSoC4/Capsense.c **** * Parameters:
1638:Generated_Source\PSoC4/Capsense.c **** *  delay:  shield delay value:
1639:Generated_Source\PSoC4/Capsense.c **** *                               0 - no delay
1640:Generated_Source\PSoC4/Capsense.c **** *                               1 - 1 cycle delay
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 66


1641:Generated_Source\PSoC4/Capsense.c **** *                               2 - 2 cycles delay
1642:Generated_Source\PSoC4/Capsense.c **** *
1643:Generated_Source\PSoC4/Capsense.c **** * Return:
1644:Generated_Source\PSoC4/Capsense.c **** *  None
1645:Generated_Source\PSoC4/Capsense.c **** *
1646:Generated_Source\PSoC4/Capsense.c **** * Global Variables:
1647:Generated_Source\PSoC4/Capsense.c **** *  None
1648:Generated_Source\PSoC4/Capsense.c **** *
1649:Generated_Source\PSoC4/Capsense.c **** * Side Effects:
1650:Generated_Source\PSoC4/Capsense.c **** *  None
1651:Generated_Source\PSoC4/Capsense.c **** *
1652:Generated_Source\PSoC4/Capsense.c **** *******************************************************************************/
1653:Generated_Source\PSoC4/Capsense.c **** void Capsense_SetShieldDelay(uint32 delay)
1654:Generated_Source\PSoC4/Capsense.c **** {
 2050              		.loc 1 1654 0
 2051              		.cfi_startproc
 2052              		@ args = 0, pretend = 0, frame = 16
 2053              		@ frame_needed = 1, uses_anonymous_args = 0
 2054 0000 80B5     		push	{r7, lr}
 2055              		.cfi_def_cfa_offset 8
 2056              		.cfi_offset 7, -8
 2057              		.cfi_offset 14, -4
 2058 0002 84B0     		sub	sp, sp, #16
 2059              		.cfi_def_cfa_offset 24
 2060 0004 00AF     		add	r7, sp, #0
 2061              		.cfi_def_cfa_register 7
 2062 0006 7860     		str	r0, [r7, #4]
1655:Generated_Source\PSoC4/Capsense.c ****     uint32 newRegValue;
1656:Generated_Source\PSoC4/Capsense.c **** 
1657:Generated_Source\PSoC4/Capsense.c ****     delay &= 0x03u;
 2063              		.loc 1 1657 0
 2064 0008 7B68     		ldr	r3, [r7, #4]
 2065 000a 0322     		movs	r2, #3
 2066 000c 1340     		ands	r3, r2
 2067 000e 7B60     		str	r3, [r7, #4]
1658:Generated_Source\PSoC4/Capsense.c **** 
1659:Generated_Source\PSoC4/Capsense.c ****     newRegValue = Capsense_CSD_CFG_REG;
 2068              		.loc 1 1659 0
 2069 0010 074B     		ldr	r3, .L98
 2070 0012 1B68     		ldr	r3, [r3]
 2071 0014 FB60     		str	r3, [r7, #12]
1660:Generated_Source\PSoC4/Capsense.c ****     newRegValue &= (uint32)(~(uint32)Capsense_SHIELD_DELAY);
1661:Generated_Source\PSoC4/Capsense.c ****     newRegValue |= (delay << Capsense_CSD_CFG_SHIELD_DELAY_POS);
 2072              		.loc 1 1661 0
 2073 0016 7B68     		ldr	r3, [r7, #4]
 2074 0018 5B02     		lsls	r3, r3, #9
 2075 001a FA68     		ldr	r2, [r7, #12]
 2076 001c 1343     		orrs	r3, r2
 2077 001e FB60     		str	r3, [r7, #12]
1662:Generated_Source\PSoC4/Capsense.c ****     Capsense_CSD_CFG_REG = newRegValue;
 2078              		.loc 1 1662 0
 2079 0020 034B     		ldr	r3, .L98
 2080 0022 FA68     		ldr	r2, [r7, #12]
 2081 0024 1A60     		str	r2, [r3]
1663:Generated_Source\PSoC4/Capsense.c **** }
 2082              		.loc 1 1663 0
 2083 0026 C046     		nop
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 67


 2084 0028 BD46     		mov	sp, r7
 2085 002a 04B0     		add	sp, sp, #16
 2086              		@ sp needed
 2087 002c 80BD     		pop	{r7, pc}
 2088              	.L99:
 2089 002e C046     		.align	2
 2090              	.L98:
 2091 0030 04002840 		.word	1076363268
 2092              		.cfi_endproc
 2093              	.LFE59:
 2094              		.size	Capsense_SetShieldDelay, .-Capsense_SetShieldDelay
 2095              		.section	.text.Capsense_ReadCurrentScanningSensor,"ax",%progbits
 2096              		.align	2
 2097              		.global	Capsense_ReadCurrentScanningSensor
 2098              		.code	16
 2099              		.thumb_func
 2100              		.type	Capsense_ReadCurrentScanningSensor, %function
 2101              	Capsense_ReadCurrentScanningSensor:
 2102              	.LFB60:
1664:Generated_Source\PSoC4/Capsense.c **** 
1665:Generated_Source\PSoC4/Capsense.c **** 
1666:Generated_Source\PSoC4/Capsense.c **** /*******************************************************************************
1667:Generated_Source\PSoC4/Capsense.c **** * Function Name: Capsense_ReadCurrentScanningSensor
1668:Generated_Source\PSoC4/Capsense.c **** ********************************************************************************
1669:Generated_Source\PSoC4/Capsense.c **** *
1670:Generated_Source\PSoC4/Capsense.c **** * Summary:
1671:Generated_Source\PSoC4/Capsense.c **** *  This API returns scanning sensor number when sensor scan is in progress.
1672:Generated_Source\PSoC4/Capsense.c **** *  When sensor scan is completed the API returns
1673:Generated_Source\PSoC4/Capsense.c **** *  $INSTANCE_NAME`_NOT_SENSOR (0xFFFFFFFF) (when no sensor is scanned).
1674:Generated_Source\PSoC4/Capsense.c **** *
1675:Generated_Source\PSoC4/Capsense.c **** * Parameters:
1676:Generated_Source\PSoC4/Capsense.c **** *   None.
1677:Generated_Source\PSoC4/Capsense.c **** *
1678:Generated_Source\PSoC4/Capsense.c **** * Return:
1679:Generated_Source\PSoC4/Capsense.c **** *  Returns Sensor number if sensor is being scanned and
1680:Generated_Source\PSoC4/Capsense.c **** *  $INSTANCE_NAME`_NOT_SENSOR (0xFFFFFFFF) if scanning is complete.
1681:Generated_Source\PSoC4/Capsense.c **** *
1682:Generated_Source\PSoC4/Capsense.c **** * Global Variables:
1683:Generated_Source\PSoC4/Capsense.c **** *  Capsense_sensorIndex - the sensor number is being scanned.
1684:Generated_Source\PSoC4/Capsense.c **** *
1685:Generated_Source\PSoC4/Capsense.c **** * Side Effects:
1686:Generated_Source\PSoC4/Capsense.c **** *  None
1687:Generated_Source\PSoC4/Capsense.c **** *
1688:Generated_Source\PSoC4/Capsense.c **** *******************************************************************************/
1689:Generated_Source\PSoC4/Capsense.c **** uint32 Capsense_ReadCurrentScanningSensor(void)
1690:Generated_Source\PSoC4/Capsense.c **** {
 2103              		.loc 1 1690 0
 2104              		.cfi_startproc
 2105              		@ args = 0, pretend = 0, frame = 0
 2106              		@ frame_needed = 1, uses_anonymous_args = 0
 2107 0000 80B5     		push	{r7, lr}
 2108              		.cfi_def_cfa_offset 8
 2109              		.cfi_offset 7, -8
 2110              		.cfi_offset 14, -4
 2111 0002 00AF     		add	r7, sp, #0
 2112              		.cfi_def_cfa_register 7
1691:Generated_Source\PSoC4/Capsense.c ****     return ((uint32)(( 0u != (Capsense_csdStatusVar & Capsense_SW_STS_BUSY)) ?
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 68


 2113              		.loc 1 1691 0
 2114 0004 074B     		ldr	r3, .L104
 2115 0006 1B78     		ldrb	r3, [r3]
 2116 0008 DBB2     		uxtb	r3, r3
 2117 000a 1A00     		movs	r2, r3
 2118 000c 0123     		movs	r3, #1
 2119 000e 1340     		ands	r3, r2
 2120 0010 03D0     		beq	.L101
 2121              		.loc 1 1691 0 is_stmt 0 discriminator 1
 2122 0012 054B     		ldr	r3, .L104+4
 2123 0014 1B78     		ldrb	r3, [r3]
 2124 0016 DBB2     		uxtb	r3, r3
 2125 0018 01E0     		b	.L103
 2126              	.L101:
 2127              		.loc 1 1691 0 discriminator 2
 2128 001a 0123     		movs	r3, #1
 2129 001c 5B42     		rsbs	r3, r3, #0
 2130              	.L103:
1692:Generated_Source\PSoC4/Capsense.c ****                      Capsense_sensorIndex : Capsense_NOT_SENSOR));
1693:Generated_Source\PSoC4/Capsense.c **** }
 2131              		.loc 1 1693 0 is_stmt 1 discriminator 5
 2132 001e 1800     		movs	r0, r3
 2133 0020 BD46     		mov	sp, r7
 2134              		@ sp needed
 2135 0022 80BD     		pop	{r7, pc}
 2136              	.L105:
 2137              		.align	2
 2138              	.L104:
 2139 0024 00000000 		.word	Capsense_csdStatusVar
 2140 0028 00000000 		.word	Capsense_sensorIndex
 2141              		.cfi_endproc
 2142              	.LFE60:
 2143              		.size	Capsense_ReadCurrentScanningSensor, .-Capsense_ReadCurrentScanningSensor
 2144              		.section	.text.Capsense_GetBitValue,"ax",%progbits
 2145              		.align	2
 2146              		.global	Capsense_GetBitValue
 2147              		.code	16
 2148              		.thumb_func
 2149              		.type	Capsense_GetBitValue, %function
 2150              	Capsense_GetBitValue:
 2151              	.LFB61:
1694:Generated_Source\PSoC4/Capsense.c **** 
1695:Generated_Source\PSoC4/Capsense.c **** 
1696:Generated_Source\PSoC4/Capsense.c **** /*******************************************************************************
1697:Generated_Source\PSoC4/Capsense.c **** * Function Name: Capsense_GetBitValue
1698:Generated_Source\PSoC4/Capsense.c **** ********************************************************************************
1699:Generated_Source\PSoC4/Capsense.c **** *
1700:Generated_Source\PSoC4/Capsense.c **** * Summary:
1701:Generated_Source\PSoC4/Capsense.c **** *  The API returns a bit status of the bit in the table array which contains the masks.
1702:Generated_Source\PSoC4/Capsense.c **** *
1703:Generated_Source\PSoC4/Capsense.c **** * Parameters:
1704:Generated_Source\PSoC4/Capsense.c **** *  table[] - array with bit masks.
1705:Generated_Source\PSoC4/Capsense.c **** *  position - position of bit in the table[] array.
1706:Generated_Source\PSoC4/Capsense.c **** *
1707:Generated_Source\PSoC4/Capsense.c **** * Return:
1708:Generated_Source\PSoC4/Capsense.c **** *  0 - bit is not set; 1 - bit is set.
1709:Generated_Source\PSoC4/Capsense.c **** *
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 69


1710:Generated_Source\PSoC4/Capsense.c **** * Global Variables:
1711:Generated_Source\PSoC4/Capsense.c **** *  None
1712:Generated_Source\PSoC4/Capsense.c **** *
1713:Generated_Source\PSoC4/Capsense.c **** * Side Effects:
1714:Generated_Source\PSoC4/Capsense.c **** *  None
1715:Generated_Source\PSoC4/Capsense.c **** *
1716:Generated_Source\PSoC4/Capsense.c **** *******************************************************************************/
1717:Generated_Source\PSoC4/Capsense.c **** uint32 Capsense_GetBitValue(const uint8 table[], uint32 position)
1718:Generated_Source\PSoC4/Capsense.c **** {
 2152              		.loc 1 1718 0
 2153              		.cfi_startproc
 2154              		@ args = 0, pretend = 0, frame = 16
 2155              		@ frame_needed = 1, uses_anonymous_args = 0
 2156 0000 80B5     		push	{r7, lr}
 2157              		.cfi_def_cfa_offset 8
 2158              		.cfi_offset 7, -8
 2159              		.cfi_offset 14, -4
 2160 0002 84B0     		sub	sp, sp, #16
 2161              		.cfi_def_cfa_offset 24
 2162 0004 00AF     		add	r7, sp, #0
 2163              		.cfi_def_cfa_register 7
 2164 0006 7860     		str	r0, [r7, #4]
 2165 0008 3960     		str	r1, [r7]
1719:Generated_Source\PSoC4/Capsense.c ****     uint32 offset;
1720:Generated_Source\PSoC4/Capsense.c ****     uint8 enMask;
1721:Generated_Source\PSoC4/Capsense.c **** 
1722:Generated_Source\PSoC4/Capsense.c ****     /* position is divided by 8 to calculate the element of the
1723:Generated_Source\PSoC4/Capsense.c ****        table[] array that contains the enable bit
1724:Generated_Source\PSoC4/Capsense.c ****        for an appropriate sensor.
1725:Generated_Source\PSoC4/Capsense.c ****     */
1726:Generated_Source\PSoC4/Capsense.c ****     offset = (position >> 3u);
 2166              		.loc 1 1726 0
 2167 000a 3B68     		ldr	r3, [r7]
 2168 000c DB08     		lsrs	r3, r3, #3
 2169 000e FB60     		str	r3, [r7, #12]
1727:Generated_Source\PSoC4/Capsense.c **** 
1728:Generated_Source\PSoC4/Capsense.c ****     /* The enMask calculation for the appropriate sensor. Operation (position & 0x07u)
1729:Generated_Source\PSoC4/Capsense.c ****        intends to calculate the enable bit offset for the 8-bit element of the
1730:Generated_Source\PSoC4/Capsense.c ****        table[] array.
1731:Generated_Source\PSoC4/Capsense.c ****     */
1732:Generated_Source\PSoC4/Capsense.c ****     enMask = 0x01u << (position & 0x07u);
 2170              		.loc 1 1732 0
 2171 0010 3B68     		ldr	r3, [r7]
 2172 0012 0722     		movs	r2, #7
 2173 0014 1340     		ands	r3, r2
 2174 0016 0122     		movs	r2, #1
 2175 0018 9A40     		lsls	r2, r2, r3
 2176 001a 0B23     		movs	r3, #11
 2177 001c FB18     		adds	r3, r7, r3
 2178 001e 1A70     		strb	r2, [r3]
1733:Generated_Source\PSoC4/Capsense.c **** 
1734:Generated_Source\PSoC4/Capsense.c ****     return ((0u !=(table[offset] & enMask)) ? 1Lu : 0Lu);
 2179              		.loc 1 1734 0
 2180 0020 7A68     		ldr	r2, [r7, #4]
 2181 0022 FB68     		ldr	r3, [r7, #12]
 2182 0024 D318     		adds	r3, r2, r3
 2183 0026 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 70


 2184 0028 0B22     		movs	r2, #11
 2185 002a BA18     		adds	r2, r7, r2
 2186 002c 1278     		ldrb	r2, [r2]
 2187 002e 1340     		ands	r3, r2
 2188 0030 DBB2     		uxtb	r3, r3
 2189 0032 002B     		cmp	r3, #0
 2190 0034 01D0     		beq	.L107
 2191              		.loc 1 1734 0 is_stmt 0 discriminator 1
 2192 0036 0123     		movs	r3, #1
 2193 0038 00E0     		b	.L109
 2194              	.L107:
 2195              		.loc 1 1734 0 discriminator 2
 2196 003a 0023     		movs	r3, #0
 2197              	.L109:
1735:Generated_Source\PSoC4/Capsense.c **** }
 2198              		.loc 1 1735 0 is_stmt 1 discriminator 5
 2199 003c 1800     		movs	r0, r3
 2200 003e BD46     		mov	sp, r7
 2201 0040 04B0     		add	sp, sp, #16
 2202              		@ sp needed
 2203 0042 80BD     		pop	{r7, pc}
 2204              		.cfi_endproc
 2205              	.LFE61:
 2206              		.size	Capsense_GetBitValue, .-Capsense_GetBitValue
 2207              		.section	.text.Capsense_SetBitValue,"ax",%progbits
 2208              		.align	2
 2209              		.global	Capsense_SetBitValue
 2210              		.code	16
 2211              		.thumb_func
 2212              		.type	Capsense_SetBitValue, %function
 2213              	Capsense_SetBitValue:
 2214              	.LFB62:
1736:Generated_Source\PSoC4/Capsense.c **** 
1737:Generated_Source\PSoC4/Capsense.c **** 
1738:Generated_Source\PSoC4/Capsense.c **** /*******************************************************************************
1739:Generated_Source\PSoC4/Capsense.c **** * Function Name: Capsense_SetBitValue
1740:Generated_Source\PSoC4/Capsense.c **** ********************************************************************************
1741:Generated_Source\PSoC4/Capsense.c **** *
1742:Generated_Source\PSoC4/Capsense.c **** * Summary:
1743:Generated_Source\PSoC4/Capsense.c **** *  The API sets a bit status of the bit in the table array which contains masks.
1744:Generated_Source\PSoC4/Capsense.c **** *
1745:Generated_Source\PSoC4/Capsense.c **** * Parameters:
1746:Generated_Source\PSoC4/Capsense.c **** *  table[] - array with bit masks.
1747:Generated_Source\PSoC4/Capsense.c **** *  position - position of bit in the table[] array.
1748:Generated_Source\PSoC4/Capsense.c **** *  value: 0 - bit is not set; 1 - bit is set.
1749:Generated_Source\PSoC4/Capsense.c **** *
1750:Generated_Source\PSoC4/Capsense.c **** * Return:
1751:Generated_Source\PSoC4/Capsense.c **** *  None
1752:Generated_Source\PSoC4/Capsense.c **** *
1753:Generated_Source\PSoC4/Capsense.c **** * Global Variables:
1754:Generated_Source\PSoC4/Capsense.c **** *  None
1755:Generated_Source\PSoC4/Capsense.c **** *
1756:Generated_Source\PSoC4/Capsense.c **** * Side Effects:
1757:Generated_Source\PSoC4/Capsense.c **** *  None
1758:Generated_Source\PSoC4/Capsense.c **** *
1759:Generated_Source\PSoC4/Capsense.c **** *******************************************************************************/
1760:Generated_Source\PSoC4/Capsense.c **** void Capsense_SetBitValue(uint8 table[], uint32 position, uint32 value)
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 71


1761:Generated_Source\PSoC4/Capsense.c **** {
 2215              		.loc 1 1761 0
 2216              		.cfi_startproc
 2217              		@ args = 0, pretend = 0, frame = 24
 2218              		@ frame_needed = 1, uses_anonymous_args = 0
 2219 0000 80B5     		push	{r7, lr}
 2220              		.cfi_def_cfa_offset 8
 2221              		.cfi_offset 7, -8
 2222              		.cfi_offset 14, -4
 2223 0002 86B0     		sub	sp, sp, #24
 2224              		.cfi_def_cfa_offset 32
 2225 0004 00AF     		add	r7, sp, #0
 2226              		.cfi_def_cfa_register 7
 2227 0006 F860     		str	r0, [r7, #12]
 2228 0008 B960     		str	r1, [r7, #8]
 2229 000a 7A60     		str	r2, [r7, #4]
1762:Generated_Source\PSoC4/Capsense.c ****     uint32 offset;
1763:Generated_Source\PSoC4/Capsense.c ****     uint8 enMask;
1764:Generated_Source\PSoC4/Capsense.c **** 
1765:Generated_Source\PSoC4/Capsense.c ****     /* position is divided by 8 to calculate the element of the
1766:Generated_Source\PSoC4/Capsense.c ****        table[] array that contains the enable bit
1767:Generated_Source\PSoC4/Capsense.c ****        for an appropriate sensor.
1768:Generated_Source\PSoC4/Capsense.c ****     */
1769:Generated_Source\PSoC4/Capsense.c ****     offset = (position >> 3u);
 2230              		.loc 1 1769 0
 2231 000c BB68     		ldr	r3, [r7, #8]
 2232 000e DB08     		lsrs	r3, r3, #3
 2233 0010 7B61     		str	r3, [r7, #20]
1770:Generated_Source\PSoC4/Capsense.c **** 
1771:Generated_Source\PSoC4/Capsense.c ****     /* The enMask calculation for the appropriate sensor. Operation (position & 0x07u)
1772:Generated_Source\PSoC4/Capsense.c ****        intends to calculate the enable bit offset for the 8-bit element of the
1773:Generated_Source\PSoC4/Capsense.c ****        table[] array.
1774:Generated_Source\PSoC4/Capsense.c ****     */
1775:Generated_Source\PSoC4/Capsense.c ****     enMask = 0x01u << (position & 0x07u);
 2234              		.loc 1 1775 0
 2235 0012 BB68     		ldr	r3, [r7, #8]
 2236 0014 0722     		movs	r2, #7
 2237 0016 1340     		ands	r3, r2
 2238 0018 0122     		movs	r2, #1
 2239 001a 9A40     		lsls	r2, r2, r3
 2240 001c 1323     		movs	r3, #19
 2241 001e FB18     		adds	r3, r7, r3
 2242 0020 1A70     		strb	r2, [r3]
1776:Generated_Source\PSoC4/Capsense.c **** 
1777:Generated_Source\PSoC4/Capsense.c ****     if(0u != value)
 2243              		.loc 1 1777 0
 2244 0022 7B68     		ldr	r3, [r7, #4]
 2245 0024 002B     		cmp	r3, #0
 2246 0026 0DD0     		beq	.L111
1778:Generated_Source\PSoC4/Capsense.c ****     {
1779:Generated_Source\PSoC4/Capsense.c ****         table[offset] |= enMask;
 2247              		.loc 1 1779 0
 2248 0028 FA68     		ldr	r2, [r7, #12]
 2249 002a 7B69     		ldr	r3, [r7, #20]
 2250 002c D318     		adds	r3, r2, r3
 2251 002e F968     		ldr	r1, [r7, #12]
 2252 0030 7A69     		ldr	r2, [r7, #20]
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 72


 2253 0032 8A18     		adds	r2, r1, r2
 2254 0034 1178     		ldrb	r1, [r2]
 2255 0036 1322     		movs	r2, #19
 2256 0038 BA18     		adds	r2, r7, r2
 2257 003a 1278     		ldrb	r2, [r2]
 2258 003c 0A43     		orrs	r2, r1
 2259 003e D2B2     		uxtb	r2, r2
 2260 0040 1A70     		strb	r2, [r3]
1780:Generated_Source\PSoC4/Capsense.c ****     }
1781:Generated_Source\PSoC4/Capsense.c ****     else
1782:Generated_Source\PSoC4/Capsense.c ****     {
1783:Generated_Source\PSoC4/Capsense.c ****         table[offset] &= (uint8)~(enMask);
1784:Generated_Source\PSoC4/Capsense.c ****     }
1785:Generated_Source\PSoC4/Capsense.c **** }
 2261              		.loc 1 1785 0
 2262 0042 0EE0     		b	.L113
 2263              	.L111:
1783:Generated_Source\PSoC4/Capsense.c ****     }
 2264              		.loc 1 1783 0
 2265 0044 FA68     		ldr	r2, [r7, #12]
 2266 0046 7B69     		ldr	r3, [r7, #20]
 2267 0048 D318     		adds	r3, r2, r3
 2268 004a F968     		ldr	r1, [r7, #12]
 2269 004c 7A69     		ldr	r2, [r7, #20]
 2270 004e 8A18     		adds	r2, r1, r2
 2271 0050 1278     		ldrb	r2, [r2]
 2272 0052 1321     		movs	r1, #19
 2273 0054 7918     		adds	r1, r7, r1
 2274 0056 0978     		ldrb	r1, [r1]
 2275 0058 C943     		mvns	r1, r1
 2276 005a C9B2     		uxtb	r1, r1
 2277 005c 0A40     		ands	r2, r1
 2278 005e D2B2     		uxtb	r2, r2
 2279 0060 1A70     		strb	r2, [r3]
 2280              	.L113:
 2281              		.loc 1 1785 0
 2282 0062 C046     		nop
 2283 0064 BD46     		mov	sp, r7
 2284 0066 06B0     		add	sp, sp, #24
 2285              		@ sp needed
 2286 0068 80BD     		pop	{r7, pc}
 2287              		.cfi_endproc
 2288              	.LFE62:
 2289              		.size	Capsense_SetBitValue, .-Capsense_SetBitValue
 2290 006a C046     		.section	.text.Capsense_GetSenseClkDivider,"ax",%progbits
 2291              		.align	2
 2292              		.global	Capsense_GetSenseClkDivider
 2293              		.code	16
 2294              		.thumb_func
 2295              		.type	Capsense_GetSenseClkDivider, %function
 2296              	Capsense_GetSenseClkDivider:
 2297              	.LFB63:
1786:Generated_Source\PSoC4/Capsense.c **** 
1787:Generated_Source\PSoC4/Capsense.c **** 
1788:Generated_Source\PSoC4/Capsense.c **** 
1789:Generated_Source\PSoC4/Capsense.c **** /*******************************************************************************
1790:Generated_Source\PSoC4/Capsense.c **** * Function Name: Capsense_GetSenseClkDivider
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 73


1791:Generated_Source\PSoC4/Capsense.c **** ********************************************************************************
1792:Generated_Source\PSoC4/Capsense.c **** *
1793:Generated_Source\PSoC4/Capsense.c **** * Summary:
1794:Generated_Source\PSoC4/Capsense.c **** *  This API returns a value of the sense clock divider for the  sensor.
1795:Generated_Source\PSoC4/Capsense.c **** *
1796:Generated_Source\PSoC4/Capsense.c **** * Parameters:
1797:Generated_Source\PSoC4/Capsense.c **** *  sensor: sensor index. The index value can be
1798:Generated_Source\PSoC4/Capsense.c **** *  from 0 to (Capsense_TOTAL_SENSOR_COUNT-1).
1799:Generated_Source\PSoC4/Capsense.c **** *
1800:Generated_Source\PSoC4/Capsense.c **** * Return:
1801:Generated_Source\PSoC4/Capsense.c **** *  This API returns the sense clock divider of the sensor.
1802:Generated_Source\PSoC4/Capsense.c **** *
1803:Generated_Source\PSoC4/Capsense.c **** * Global Variables:
1804:Generated_Source\PSoC4/Capsense.c **** *  Capsense_senseClkDividerVal[] - stores the sense clock divider values.
1805:Generated_Source\PSoC4/Capsense.c **** *
1806:Generated_Source\PSoC4/Capsense.c **** * Side Effects:
1807:Generated_Source\PSoC4/Capsense.c **** *  None
1808:Generated_Source\PSoC4/Capsense.c **** *
1809:Generated_Source\PSoC4/Capsense.c **** *******************************************************************************/
1810:Generated_Source\PSoC4/Capsense.c **** uint32 Capsense_GetSenseClkDivider(uint32 sensor)
1811:Generated_Source\PSoC4/Capsense.c **** {
 2298              		.loc 1 1811 0
 2299              		.cfi_startproc
 2300              		@ args = 0, pretend = 0, frame = 8
 2301              		@ frame_needed = 1, uses_anonymous_args = 0
 2302 0000 80B5     		push	{r7, lr}
 2303              		.cfi_def_cfa_offset 8
 2304              		.cfi_offset 7, -8
 2305              		.cfi_offset 14, -4
 2306 0002 82B0     		sub	sp, sp, #8
 2307              		.cfi_def_cfa_offset 16
 2308 0004 00AF     		add	r7, sp, #0
 2309              		.cfi_def_cfa_register 7
 2310 0006 7860     		str	r0, [r7, #4]
1812:Generated_Source\PSoC4/Capsense.c ****     #if(0u != Capsense_MULTIPLE_FREQUENCY_SET)
1813:Generated_Source\PSoC4/Capsense.c ****         return((uint32)Capsense_senseClkDividerVal[sensor]);
 2311              		.loc 1 1813 0
 2312 0008 034A     		ldr	r2, .L116
 2313 000a 7B68     		ldr	r3, [r7, #4]
 2314 000c D318     		adds	r3, r2, r3
 2315 000e 1B78     		ldrb	r3, [r3]
1814:Generated_Source\PSoC4/Capsense.c ****     #else
1815:Generated_Source\PSoC4/Capsense.c ****         return((uint32)Capsense_senseClkDividerVal);
1816:Generated_Source\PSoC4/Capsense.c ****     #endif /* (0u != Capsense_MULTIPLE_FREQUENCY_SET) */
1817:Generated_Source\PSoC4/Capsense.c **** }
 2316              		.loc 1 1817 0
 2317 0010 1800     		movs	r0, r3
 2318 0012 BD46     		mov	sp, r7
 2319 0014 02B0     		add	sp, sp, #8
 2320              		@ sp needed
 2321 0016 80BD     		pop	{r7, pc}
 2322              	.L117:
 2323              		.align	2
 2324              	.L116:
 2325 0018 00000000 		.word	Capsense_senseClkDividerVal
 2326              		.cfi_endproc
 2327              	.LFE63:
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 74


 2328              		.size	Capsense_GetSenseClkDivider, .-Capsense_GetSenseClkDivider
 2329              		.section	.text.Capsense_SetSenseClkDivider,"ax",%progbits
 2330              		.align	2
 2331              		.global	Capsense_SetSenseClkDivider
 2332              		.code	16
 2333              		.thumb_func
 2334              		.type	Capsense_SetSenseClkDivider, %function
 2335              	Capsense_SetSenseClkDivider:
 2336              	.LFB64:
1818:Generated_Source\PSoC4/Capsense.c **** 
1819:Generated_Source\PSoC4/Capsense.c **** #if (Capsense_TUNING_METHOD != Capsense__TUNING_NONE)
1820:Generated_Source\PSoC4/Capsense.c ****     /*******************************************************************************
1821:Generated_Source\PSoC4/Capsense.c ****     * Function Name: Capsense_SetSenseClkDivider
1822:Generated_Source\PSoC4/Capsense.c ****     ********************************************************************************
1823:Generated_Source\PSoC4/Capsense.c ****     *
1824:Generated_Source\PSoC4/Capsense.c ****     * Summary:
1825:Generated_Source\PSoC4/Capsense.c ****     *  This API sets a value of the sense clock divider for the  sensor.
1826:Generated_Source\PSoC4/Capsense.c ****     *
1827:Generated_Source\PSoC4/Capsense.c ****     * Parameters:
1828:Generated_Source\PSoC4/Capsense.c ****     *  sensor:  Sensor index.
1829:Generated_Source\PSoC4/Capsense.c ****     *  senseClk: represents the sense clock value.
1830:Generated_Source\PSoC4/Capsense.c ****     *
1831:Generated_Source\PSoC4/Capsense.c ****     * Return:
1832:Generated_Source\PSoC4/Capsense.c ****     *  None.
1833:Generated_Source\PSoC4/Capsense.c ****     *
1834:Generated_Source\PSoC4/Capsense.c ****     * Global Variables:
1835:Generated_Source\PSoC4/Capsense.c ****     *  Capsense_senseClkDividerVal[] - stores the sense clock divider values.
1836:Generated_Source\PSoC4/Capsense.c ****     *
1837:Generated_Source\PSoC4/Capsense.c ****     * Side Effects:
1838:Generated_Source\PSoC4/Capsense.c ****     *  None
1839:Generated_Source\PSoC4/Capsense.c ****     *
1840:Generated_Source\PSoC4/Capsense.c ****     *******************************************************************************/
1841:Generated_Source\PSoC4/Capsense.c ****     void Capsense_SetSenseClkDivider(uint32 sensor, uint32 senseClk)
1842:Generated_Source\PSoC4/Capsense.c ****     {
 2337              		.loc 1 1842 0
 2338              		.cfi_startproc
 2339              		@ args = 0, pretend = 0, frame = 8
 2340              		@ frame_needed = 1, uses_anonymous_args = 0
 2341 0000 80B5     		push	{r7, lr}
 2342              		.cfi_def_cfa_offset 8
 2343              		.cfi_offset 7, -8
 2344              		.cfi_offset 14, -4
 2345 0002 82B0     		sub	sp, sp, #8
 2346              		.cfi_def_cfa_offset 16
 2347 0004 00AF     		add	r7, sp, #0
 2348              		.cfi_def_cfa_register 7
 2349 0006 7860     		str	r0, [r7, #4]
 2350 0008 3960     		str	r1, [r7]
1843:Generated_Source\PSoC4/Capsense.c ****         #if(0u != Capsense_MULTIPLE_FREQUENCY_SET)
1844:Generated_Source\PSoC4/Capsense.c ****             Capsense_senseClkDividerVal[sensor] = (uint8)senseClk;
 2351              		.loc 1 1844 0
 2352 000a 3B68     		ldr	r3, [r7]
 2353 000c D9B2     		uxtb	r1, r3
 2354 000e 044A     		ldr	r2, .L119
 2355 0010 7B68     		ldr	r3, [r7, #4]
 2356 0012 D318     		adds	r3, r2, r3
 2357 0014 0A1C     		adds	r2, r1, #0
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 75


 2358 0016 1A70     		strb	r2, [r3]
1845:Generated_Source\PSoC4/Capsense.c ****         #else
1846:Generated_Source\PSoC4/Capsense.c ****             Capsense_senseClkDividerVal = (uint8)senseClk;
1847:Generated_Source\PSoC4/Capsense.c ****         #endif /* (0u != Capsense_MULTIPLE_FREQUENCY_SET) */
1848:Generated_Source\PSoC4/Capsense.c ****     }
 2359              		.loc 1 1848 0
 2360 0018 C046     		nop
 2361 001a BD46     		mov	sp, r7
 2362 001c 02B0     		add	sp, sp, #8
 2363              		@ sp needed
 2364 001e 80BD     		pop	{r7, pc}
 2365              	.L120:
 2366              		.align	2
 2367              	.L119:
 2368 0020 00000000 		.word	Capsense_senseClkDividerVal
 2369              		.cfi_endproc
 2370              	.LFE64:
 2371              		.size	Capsense_SetSenseClkDivider, .-Capsense_SetSenseClkDivider
 2372              		.section	.text.Capsense_GetModulatorClkDivider,"ax",%progbits
 2373              		.align	2
 2374              		.global	Capsense_GetModulatorClkDivider
 2375              		.code	16
 2376              		.thumb_func
 2377              		.type	Capsense_GetModulatorClkDivider, %function
 2378              	Capsense_GetModulatorClkDivider:
 2379              	.LFB65:
1849:Generated_Source\PSoC4/Capsense.c **** #endif /* (Capsense_TUNING_METHOD != Capsense__TUNING_NONE) */
1850:Generated_Source\PSoC4/Capsense.c **** 
1851:Generated_Source\PSoC4/Capsense.c **** 
1852:Generated_Source\PSoC4/Capsense.c **** /*******************************************************************************
1853:Generated_Source\PSoC4/Capsense.c **** * Function Name: Capsense_GetModulatorClkDivider
1854:Generated_Source\PSoC4/Capsense.c **** ********************************************************************************
1855:Generated_Source\PSoC4/Capsense.c **** *
1856:Generated_Source\PSoC4/Capsense.c **** * Summary:
1857:Generated_Source\PSoC4/Capsense.c **** *  This API returns a value of the modulator sample clock divider for the  sensor.
1858:Generated_Source\PSoC4/Capsense.c **** *
1859:Generated_Source\PSoC4/Capsense.c **** * Parameters:
1860:Generated_Source\PSoC4/Capsense.c **** *  sensor: sensor index. The value of index can be
1861:Generated_Source\PSoC4/Capsense.c **** *  from 0 to (Capsense_TOTAL_SENSOR_COUNT-1).
1862:Generated_Source\PSoC4/Capsense.c **** *
1863:Generated_Source\PSoC4/Capsense.c **** * Return:
1864:Generated_Source\PSoC4/Capsense.c **** *  This API returns the modulator sample clock divider for the  sensor.
1865:Generated_Source\PSoC4/Capsense.c **** *
1866:Generated_Source\PSoC4/Capsense.c **** * Global Variables:
1867:Generated_Source\PSoC4/Capsense.c **** *  Capsense_sampleClkDividerVal[] - stores the modulator sample divider values.
1868:Generated_Source\PSoC4/Capsense.c **** *
1869:Generated_Source\PSoC4/Capsense.c **** * Side Effects:
1870:Generated_Source\PSoC4/Capsense.c **** *  None
1871:Generated_Source\PSoC4/Capsense.c **** *
1872:Generated_Source\PSoC4/Capsense.c **** *******************************************************************************/
1873:Generated_Source\PSoC4/Capsense.c **** uint32 Capsense_GetModulatorClkDivider(uint32 sensor)
1874:Generated_Source\PSoC4/Capsense.c **** {
 2380              		.loc 1 1874 0
 2381              		.cfi_startproc
 2382              		@ args = 0, pretend = 0, frame = 8
 2383              		@ frame_needed = 1, uses_anonymous_args = 0
 2384 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 76


 2385              		.cfi_def_cfa_offset 8
 2386              		.cfi_offset 7, -8
 2387              		.cfi_offset 14, -4
 2388 0002 82B0     		sub	sp, sp, #8
 2389              		.cfi_def_cfa_offset 16
 2390 0004 00AF     		add	r7, sp, #0
 2391              		.cfi_def_cfa_register 7
 2392 0006 7860     		str	r0, [r7, #4]
1875:Generated_Source\PSoC4/Capsense.c ****     #if(0u != Capsense_MULTIPLE_FREQUENCY_SET)
1876:Generated_Source\PSoC4/Capsense.c ****         return((uint32)Capsense_sampleClkDividerVal[sensor]);
 2393              		.loc 1 1876 0
 2394 0008 034A     		ldr	r2, .L123
 2395 000a 7B68     		ldr	r3, [r7, #4]
 2396 000c D318     		adds	r3, r2, r3
 2397 000e 1B78     		ldrb	r3, [r3]
1877:Generated_Source\PSoC4/Capsense.c ****     #else
1878:Generated_Source\PSoC4/Capsense.c ****         return((uint32)Capsense_sampleClkDividerVal);
1879:Generated_Source\PSoC4/Capsense.c ****     #endif /* (0u != Capsense_MULTIPLE_FREQUENCY_SET) */
1880:Generated_Source\PSoC4/Capsense.c **** }
 2398              		.loc 1 1880 0
 2399 0010 1800     		movs	r0, r3
 2400 0012 BD46     		mov	sp, r7
 2401 0014 02B0     		add	sp, sp, #8
 2402              		@ sp needed
 2403 0016 80BD     		pop	{r7, pc}
 2404              	.L124:
 2405              		.align	2
 2406              	.L123:
 2407 0018 00000000 		.word	Capsense_sampleClkDividerVal
 2408              		.cfi_endproc
 2409              	.LFE65:
 2410              		.size	Capsense_GetModulatorClkDivider, .-Capsense_GetModulatorClkDivider
 2411              		.section	.text.Capsense_SetModulatorClkDivider,"ax",%progbits
 2412              		.align	2
 2413              		.global	Capsense_SetModulatorClkDivider
 2414              		.code	16
 2415              		.thumb_func
 2416              		.type	Capsense_SetModulatorClkDivider, %function
 2417              	Capsense_SetModulatorClkDivider:
 2418              	.LFB66:
1881:Generated_Source\PSoC4/Capsense.c **** 
1882:Generated_Source\PSoC4/Capsense.c **** #if (Capsense_TUNING_METHOD != Capsense__TUNING_NONE)
1883:Generated_Source\PSoC4/Capsense.c ****     /*******************************************************************************
1884:Generated_Source\PSoC4/Capsense.c ****     * Function Name: Capsense_SetModulatorClkDivider
1885:Generated_Source\PSoC4/Capsense.c ****     ********************************************************************************
1886:Generated_Source\PSoC4/Capsense.c ****     *
1887:Generated_Source\PSoC4/Capsense.c ****     * Summary:
1888:Generated_Source\PSoC4/Capsense.c ****     *  This API sets a value of the modulator sample clock divider for the  sensor.
1889:Generated_Source\PSoC4/Capsense.c ****     *
1890:Generated_Source\PSoC4/Capsense.c ****     * Parameters:
1891:Generated_Source\PSoC4/Capsense.c ****     *  sensor:  Sensor index.
1892:Generated_Source\PSoC4/Capsense.c ****     *  modulatorClk: represents the modulator sample clock value.
1893:Generated_Source\PSoC4/Capsense.c ****     *
1894:Generated_Source\PSoC4/Capsense.c ****     * Return:
1895:Generated_Source\PSoC4/Capsense.c ****     *  None.
1896:Generated_Source\PSoC4/Capsense.c ****     *
1897:Generated_Source\PSoC4/Capsense.c ****     * Global Variables:
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 77


1898:Generated_Source\PSoC4/Capsense.c ****     *  Capsense_sampleClkDividerVal[] - stores the modulator sample divider values.
1899:Generated_Source\PSoC4/Capsense.c ****     *
1900:Generated_Source\PSoC4/Capsense.c ****     * Side Effects:
1901:Generated_Source\PSoC4/Capsense.c ****     *  None
1902:Generated_Source\PSoC4/Capsense.c ****     *
1903:Generated_Source\PSoC4/Capsense.c ****     *******************************************************************************/
1904:Generated_Source\PSoC4/Capsense.c ****     void Capsense_SetModulatorClkDivider(uint32 sensor, uint32 modulatorClk)
1905:Generated_Source\PSoC4/Capsense.c ****     {
 2419              		.loc 1 1905 0
 2420              		.cfi_startproc
 2421              		@ args = 0, pretend = 0, frame = 8
 2422              		@ frame_needed = 1, uses_anonymous_args = 0
 2423 0000 80B5     		push	{r7, lr}
 2424              		.cfi_def_cfa_offset 8
 2425              		.cfi_offset 7, -8
 2426              		.cfi_offset 14, -4
 2427 0002 82B0     		sub	sp, sp, #8
 2428              		.cfi_def_cfa_offset 16
 2429 0004 00AF     		add	r7, sp, #0
 2430              		.cfi_def_cfa_register 7
 2431 0006 7860     		str	r0, [r7, #4]
 2432 0008 3960     		str	r1, [r7]
1906:Generated_Source\PSoC4/Capsense.c ****         #if(0u != Capsense_MULTIPLE_FREQUENCY_SET)
1907:Generated_Source\PSoC4/Capsense.c ****             Capsense_sampleClkDividerVal[sensor] = (uint8)modulatorClk;
 2433              		.loc 1 1907 0
 2434 000a 3B68     		ldr	r3, [r7]
 2435 000c D9B2     		uxtb	r1, r3
 2436 000e 044A     		ldr	r2, .L126
 2437 0010 7B68     		ldr	r3, [r7, #4]
 2438 0012 D318     		adds	r3, r2, r3
 2439 0014 0A1C     		adds	r2, r1, #0
 2440 0016 1A70     		strb	r2, [r3]
1908:Generated_Source\PSoC4/Capsense.c ****         #else
1909:Generated_Source\PSoC4/Capsense.c ****             Capsense_sampleClkDividerVal = (uint8)modulatorClk;
1910:Generated_Source\PSoC4/Capsense.c ****         #endif /* (0u != Capsense_MULTIPLE_FREQUENCY_SET) */
1911:Generated_Source\PSoC4/Capsense.c ****     }
 2441              		.loc 1 1911 0
 2442 0018 C046     		nop
 2443 001a BD46     		mov	sp, r7
 2444 001c 02B0     		add	sp, sp, #8
 2445              		@ sp needed
 2446 001e 80BD     		pop	{r7, pc}
 2447              	.L127:
 2448              		.align	2
 2449              	.L126:
 2450 0020 00000000 		.word	Capsense_sampleClkDividerVal
 2451              		.cfi_endproc
 2452              	.LFE66:
 2453              		.size	Capsense_SetModulatorClkDivider, .-Capsense_SetModulatorClkDivider
 2454              		.section	.text.Capsense_GetModulationIDAC,"ax",%progbits
 2455              		.align	2
 2456              		.global	Capsense_GetModulationIDAC
 2457              		.code	16
 2458              		.thumb_func
 2459              		.type	Capsense_GetModulationIDAC, %function
 2460              	Capsense_GetModulationIDAC:
 2461              	.LFB67:
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 78


1912:Generated_Source\PSoC4/Capsense.c **** #endif /* (Capsense_TUNING_METHOD != Capsense__TUNING_NONE) */
1913:Generated_Source\PSoC4/Capsense.c **** 
1914:Generated_Source\PSoC4/Capsense.c **** /*******************************************************************************
1915:Generated_Source\PSoC4/Capsense.c **** * Function Name: Capsense_GetModulationIDAC
1916:Generated_Source\PSoC4/Capsense.c **** ********************************************************************************
1917:Generated_Source\PSoC4/Capsense.c **** *
1918:Generated_Source\PSoC4/Capsense.c **** * Summary:
1919:Generated_Source\PSoC4/Capsense.c **** *  This API returns a value of the modulation IDAC for the  sensor.
1920:Generated_Source\PSoC4/Capsense.c **** *
1921:Generated_Source\PSoC4/Capsense.c **** * Parameters:
1922:Generated_Source\PSoC4/Capsense.c **** *  sensor: sensor index. The index value can be
1923:Generated_Source\PSoC4/Capsense.c **** *  from 0 to (Capsense_TOTAL_SENSOR_COUNT-1).
1924:Generated_Source\PSoC4/Capsense.c **** *
1925:Generated_Source\PSoC4/Capsense.c **** * Return:
1926:Generated_Source\PSoC4/Capsense.c **** *  This API returns the modulation IDAC of the sensor.
1927:Generated_Source\PSoC4/Capsense.c **** *
1928:Generated_Source\PSoC4/Capsense.c **** * Global Variables:
1929:Generated_Source\PSoC4/Capsense.c **** *  Capsense_modulationIDAC[] - stores modulation IDAC values.
1930:Generated_Source\PSoC4/Capsense.c **** *
1931:Generated_Source\PSoC4/Capsense.c **** * Side Effects:
1932:Generated_Source\PSoC4/Capsense.c **** *  None
1933:Generated_Source\PSoC4/Capsense.c **** *
1934:Generated_Source\PSoC4/Capsense.c **** *******************************************************************************/
1935:Generated_Source\PSoC4/Capsense.c **** uint32 Capsense_GetModulationIDAC(uint32 sensor)
1936:Generated_Source\PSoC4/Capsense.c **** {
 2462              		.loc 1 1936 0
 2463              		.cfi_startproc
 2464              		@ args = 0, pretend = 0, frame = 8
 2465              		@ frame_needed = 1, uses_anonymous_args = 0
 2466 0000 80B5     		push	{r7, lr}
 2467              		.cfi_def_cfa_offset 8
 2468              		.cfi_offset 7, -8
 2469              		.cfi_offset 14, -4
 2470 0002 82B0     		sub	sp, sp, #8
 2471              		.cfi_def_cfa_offset 16
 2472 0004 00AF     		add	r7, sp, #0
 2473              		.cfi_def_cfa_register 7
 2474 0006 7860     		str	r0, [r7, #4]
1937:Generated_Source\PSoC4/Capsense.c ****         return((uint32)Capsense_modulationIDAC[sensor]);
 2475              		.loc 1 1937 0
 2476 0008 034A     		ldr	r2, .L130
 2477 000a 7B68     		ldr	r3, [r7, #4]
 2478 000c D318     		adds	r3, r2, r3
 2479 000e 1B78     		ldrb	r3, [r3]
1938:Generated_Source\PSoC4/Capsense.c **** }
 2480              		.loc 1 1938 0
 2481 0010 1800     		movs	r0, r3
 2482 0012 BD46     		mov	sp, r7
 2483 0014 02B0     		add	sp, sp, #8
 2484              		@ sp needed
 2485 0016 80BD     		pop	{r7, pc}
 2486              	.L131:
 2487              		.align	2
 2488              	.L130:
 2489 0018 00000000 		.word	Capsense_modulationIDAC
 2490              		.cfi_endproc
 2491              	.LFE67:
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 79


 2492              		.size	Capsense_GetModulationIDAC, .-Capsense_GetModulationIDAC
 2493              		.section	.text.Capsense_SetModulationIDAC,"ax",%progbits
 2494              		.align	2
 2495              		.global	Capsense_SetModulationIDAC
 2496              		.code	16
 2497              		.thumb_func
 2498              		.type	Capsense_SetModulationIDAC, %function
 2499              	Capsense_SetModulationIDAC:
 2500              	.LFB68:
1939:Generated_Source\PSoC4/Capsense.c **** 
1940:Generated_Source\PSoC4/Capsense.c **** #if (Capsense_TUNING_METHOD != Capsense__TUNING_NONE)
1941:Generated_Source\PSoC4/Capsense.c ****     /*******************************************************************************
1942:Generated_Source\PSoC4/Capsense.c ****     * Function Name: Capsense_SetModulationIDAC
1943:Generated_Source\PSoC4/Capsense.c ****     ********************************************************************************
1944:Generated_Source\PSoC4/Capsense.c ****     *
1945:Generated_Source\PSoC4/Capsense.c ****     * Summary:
1946:Generated_Source\PSoC4/Capsense.c ****     *  This API sets a value of the modulation IDAC for the  sensor.
1947:Generated_Source\PSoC4/Capsense.c ****     *
1948:Generated_Source\PSoC4/Capsense.c ****     * Parameters:
1949:Generated_Source\PSoC4/Capsense.c ****     *  sensor:  Sensor index.
1950:Generated_Source\PSoC4/Capsense.c ****     *  compIdacValue: represents the modulation IDAC data register value.
1951:Generated_Source\PSoC4/Capsense.c ****     *
1952:Generated_Source\PSoC4/Capsense.c ****     * Return:
1953:Generated_Source\PSoC4/Capsense.c ****     *  None.
1954:Generated_Source\PSoC4/Capsense.c ****     *
1955:Generated_Source\PSoC4/Capsense.c ****     * Global Variables:
1956:Generated_Source\PSoC4/Capsense.c ****     *  Capsense_modulationIDAC[] - array with modulation IDAC values
1957:Generated_Source\PSoC4/Capsense.c ****     *
1958:Generated_Source\PSoC4/Capsense.c ****     * Side Effects:
1959:Generated_Source\PSoC4/Capsense.c ****     *  None
1960:Generated_Source\PSoC4/Capsense.c ****     *
1961:Generated_Source\PSoC4/Capsense.c ****     *******************************************************************************/
1962:Generated_Source\PSoC4/Capsense.c ****     void Capsense_SetModulationIDAC(uint32 sensor, uint32 modIdacValue)
1963:Generated_Source\PSoC4/Capsense.c ****     {
 2501              		.loc 1 1963 0
 2502              		.cfi_startproc
 2503              		@ args = 0, pretend = 0, frame = 8
 2504              		@ frame_needed = 1, uses_anonymous_args = 0
 2505 0000 80B5     		push	{r7, lr}
 2506              		.cfi_def_cfa_offset 8
 2507              		.cfi_offset 7, -8
 2508              		.cfi_offset 14, -4
 2509 0002 82B0     		sub	sp, sp, #8
 2510              		.cfi_def_cfa_offset 16
 2511 0004 00AF     		add	r7, sp, #0
 2512              		.cfi_def_cfa_register 7
 2513 0006 7860     		str	r0, [r7, #4]
 2514 0008 3960     		str	r1, [r7]
1964:Generated_Source\PSoC4/Capsense.c ****         Capsense_modulationIDAC[sensor] = (uint8)modIdacValue;
 2515              		.loc 1 1964 0
 2516 000a 3B68     		ldr	r3, [r7]
 2517 000c D9B2     		uxtb	r1, r3
 2518 000e 044A     		ldr	r2, .L133
 2519 0010 7B68     		ldr	r3, [r7, #4]
 2520 0012 D318     		adds	r3, r2, r3
 2521 0014 0A1C     		adds	r2, r1, #0
 2522 0016 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 80


1965:Generated_Source\PSoC4/Capsense.c ****     }
 2523              		.loc 1 1965 0
 2524 0018 C046     		nop
 2525 001a BD46     		mov	sp, r7
 2526 001c 02B0     		add	sp, sp, #8
 2527              		@ sp needed
 2528 001e 80BD     		pop	{r7, pc}
 2529              	.L134:
 2530              		.align	2
 2531              	.L133:
 2532 0020 00000000 		.word	Capsense_modulationIDAC
 2533              		.cfi_endproc
 2534              	.LFE68:
 2535              		.size	Capsense_SetModulationIDAC, .-Capsense_SetModulationIDAC
 2536              		.section	.text.Capsense_GetCompensationIDAC,"ax",%progbits
 2537              		.align	2
 2538              		.global	Capsense_GetCompensationIDAC
 2539              		.code	16
 2540              		.thumb_func
 2541              		.type	Capsense_GetCompensationIDAC, %function
 2542              	Capsense_GetCompensationIDAC:
 2543              	.LFB69:
1966:Generated_Source\PSoC4/Capsense.c **** #endif /* (Capsense_TUNING_METHOD != Capsense__TUNING_NONE) */
1967:Generated_Source\PSoC4/Capsense.c **** 
1968:Generated_Source\PSoC4/Capsense.c **** 
1969:Generated_Source\PSoC4/Capsense.c **** #if(Capsense_IDAC_CNT > 1u)
1970:Generated_Source\PSoC4/Capsense.c ****     /*******************************************************************************
1971:Generated_Source\PSoC4/Capsense.c ****     * Function Name: Capsense_GetCompensationIDAC
1972:Generated_Source\PSoC4/Capsense.c ****     ********************************************************************************
1973:Generated_Source\PSoC4/Capsense.c ****     *
1974:Generated_Source\PSoC4/Capsense.c ****     * Summary:
1975:Generated_Source\PSoC4/Capsense.c ****     *  This API returns a value of the compensation IDAC for the  sensor.
1976:Generated_Source\PSoC4/Capsense.c ****     *
1977:Generated_Source\PSoC4/Capsense.c ****     * Parameters:
1978:Generated_Source\PSoC4/Capsense.c ****     *  sensor: sensor index. The index value can be
1979:Generated_Source\PSoC4/Capsense.c ****     *  from 0 to (Capsense_TOTAL_SENSOR_COUNT-1).
1980:Generated_Source\PSoC4/Capsense.c ****     *
1981:Generated_Source\PSoC4/Capsense.c ****     * Return:
1982:Generated_Source\PSoC4/Capsense.c ****     *  This API returns the compensation IDAC of the sensor.
1983:Generated_Source\PSoC4/Capsense.c ****     *
1984:Generated_Source\PSoC4/Capsense.c ****     * Global Variables:
1985:Generated_Source\PSoC4/Capsense.c ****     *  Capsense_compensationIDAC[] - stores the compensation IDAC values.
1986:Generated_Source\PSoC4/Capsense.c ****     *
1987:Generated_Source\PSoC4/Capsense.c ****     * Side Effects:
1988:Generated_Source\PSoC4/Capsense.c ****     *  None
1989:Generated_Source\PSoC4/Capsense.c ****     *
1990:Generated_Source\PSoC4/Capsense.c ****     *******************************************************************************/
1991:Generated_Source\PSoC4/Capsense.c ****     uint32 Capsense_GetCompensationIDAC(uint32 sensor)
1992:Generated_Source\PSoC4/Capsense.c ****     {
 2544              		.loc 1 1992 0
 2545              		.cfi_startproc
 2546              		@ args = 0, pretend = 0, frame = 8
 2547              		@ frame_needed = 1, uses_anonymous_args = 0
 2548 0000 80B5     		push	{r7, lr}
 2549              		.cfi_def_cfa_offset 8
 2550              		.cfi_offset 7, -8
 2551              		.cfi_offset 14, -4
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 81


 2552 0002 82B0     		sub	sp, sp, #8
 2553              		.cfi_def_cfa_offset 16
 2554 0004 00AF     		add	r7, sp, #0
 2555              		.cfi_def_cfa_register 7
 2556 0006 7860     		str	r0, [r7, #4]
1993:Generated_Source\PSoC4/Capsense.c ****         return((uint32)Capsense_compensationIDAC[sensor]);
 2557              		.loc 1 1993 0
 2558 0008 034A     		ldr	r2, .L137
 2559 000a 7B68     		ldr	r3, [r7, #4]
 2560 000c D318     		adds	r3, r2, r3
 2561 000e 1B78     		ldrb	r3, [r3]
1994:Generated_Source\PSoC4/Capsense.c ****     }
 2562              		.loc 1 1994 0
 2563 0010 1800     		movs	r0, r3
 2564 0012 BD46     		mov	sp, r7
 2565 0014 02B0     		add	sp, sp, #8
 2566              		@ sp needed
 2567 0016 80BD     		pop	{r7, pc}
 2568              	.L138:
 2569              		.align	2
 2570              	.L137:
 2571 0018 00000000 		.word	Capsense_compensationIDAC
 2572              		.cfi_endproc
 2573              	.LFE69:
 2574              		.size	Capsense_GetCompensationIDAC, .-Capsense_GetCompensationIDAC
 2575              		.section	.text.Capsense_SetCompensationIDAC,"ax",%progbits
 2576              		.align	2
 2577              		.global	Capsense_SetCompensationIDAC
 2578              		.code	16
 2579              		.thumb_func
 2580              		.type	Capsense_SetCompensationIDAC, %function
 2581              	Capsense_SetCompensationIDAC:
 2582              	.LFB70:
1995:Generated_Source\PSoC4/Capsense.c **** #endif /* (Capsense_IDAC_CNT > 1u) */
1996:Generated_Source\PSoC4/Capsense.c **** 
1997:Generated_Source\PSoC4/Capsense.c **** 
1998:Generated_Source\PSoC4/Capsense.c **** #if((Capsense_TUNING_METHOD != Capsense__TUNING_NONE) && (Capsense_IDAC_CNT > 1u))
1999:Generated_Source\PSoC4/Capsense.c ****     /*******************************************************************************
2000:Generated_Source\PSoC4/Capsense.c ****     * Function Name: Capsense_SetCompensationIDAC
2001:Generated_Source\PSoC4/Capsense.c ****     ********************************************************************************
2002:Generated_Source\PSoC4/Capsense.c ****     *
2003:Generated_Source\PSoC4/Capsense.c ****     * Summary:
2004:Generated_Source\PSoC4/Capsense.c ****     *  This API sets a value of compensation IDAC for the  sensor.
2005:Generated_Source\PSoC4/Capsense.c ****     *
2006:Generated_Source\PSoC4/Capsense.c ****     * Parameters:
2007:Generated_Source\PSoC4/Capsense.c ****     *  sensor:  Sensor index.
2008:Generated_Source\PSoC4/Capsense.c ****     *  compIdacValue: represents the compensation IDAC data register value.
2009:Generated_Source\PSoC4/Capsense.c ****     *
2010:Generated_Source\PSoC4/Capsense.c ****     * Return:
2011:Generated_Source\PSoC4/Capsense.c ****     *  None.
2012:Generated_Source\PSoC4/Capsense.c ****     *
2013:Generated_Source\PSoC4/Capsense.c ****     * Global Variables:
2014:Generated_Source\PSoC4/Capsense.c ****     *  Capsense_compensationIDAC[] - an array with compensation IDAC values
2015:Generated_Source\PSoC4/Capsense.c ****     *
2016:Generated_Source\PSoC4/Capsense.c ****     * Side Effects:
2017:Generated_Source\PSoC4/Capsense.c ****     *  None
2018:Generated_Source\PSoC4/Capsense.c ****     *
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 82


2019:Generated_Source\PSoC4/Capsense.c ****     *******************************************************************************/
2020:Generated_Source\PSoC4/Capsense.c ****     void Capsense_SetCompensationIDAC(uint32 sensor, uint32 compIdacValue)
2021:Generated_Source\PSoC4/Capsense.c ****     {
 2583              		.loc 1 2021 0
 2584              		.cfi_startproc
 2585              		@ args = 0, pretend = 0, frame = 8
 2586              		@ frame_needed = 1, uses_anonymous_args = 0
 2587 0000 80B5     		push	{r7, lr}
 2588              		.cfi_def_cfa_offset 8
 2589              		.cfi_offset 7, -8
 2590              		.cfi_offset 14, -4
 2591 0002 82B0     		sub	sp, sp, #8
 2592              		.cfi_def_cfa_offset 16
 2593 0004 00AF     		add	r7, sp, #0
 2594              		.cfi_def_cfa_register 7
 2595 0006 7860     		str	r0, [r7, #4]
 2596 0008 3960     		str	r1, [r7]
2022:Generated_Source\PSoC4/Capsense.c ****         Capsense_compensationIDAC[sensor] = (uint8)compIdacValue;
 2597              		.loc 1 2022 0
 2598 000a 3B68     		ldr	r3, [r7]
 2599 000c D9B2     		uxtb	r1, r3
 2600 000e 044A     		ldr	r2, .L140
 2601 0010 7B68     		ldr	r3, [r7, #4]
 2602 0012 D318     		adds	r3, r2, r3
 2603 0014 0A1C     		adds	r2, r1, #0
 2604 0016 1A70     		strb	r2, [r3]
2023:Generated_Source\PSoC4/Capsense.c ****     }
 2605              		.loc 1 2023 0
 2606 0018 C046     		nop
 2607 001a BD46     		mov	sp, r7
 2608 001c 02B0     		add	sp, sp, #8
 2609              		@ sp needed
 2610 001e 80BD     		pop	{r7, pc}
 2611              	.L141:
 2612              		.align	2
 2613              	.L140:
 2614 0020 00000000 		.word	Capsense_compensationIDAC
 2615              		.cfi_endproc
 2616              	.LFE70:
 2617              		.size	Capsense_SetCompensationIDAC, .-Capsense_SetCompensationIDAC
 2618              		.section	.text.Capsense_GetIDACRange,"ax",%progbits
 2619              		.align	2
 2620              		.global	Capsense_GetIDACRange
 2621              		.code	16
 2622              		.thumb_func
 2623              		.type	Capsense_GetIDACRange, %function
 2624              	Capsense_GetIDACRange:
 2625              	.LFB71:
2024:Generated_Source\PSoC4/Capsense.c **** #endif /* ((Capsense_TUNING_METHOD != Capsense__TUNING_NONE) && (Capsense_IDAC_CNT > 1u)) */
2025:Generated_Source\PSoC4/Capsense.c **** 
2026:Generated_Source\PSoC4/Capsense.c **** /*******************************************************************************
2027:Generated_Source\PSoC4/Capsense.c **** * Function Name: Capsense_GetIDACRange
2028:Generated_Source\PSoC4/Capsense.c **** ********************************************************************************
2029:Generated_Source\PSoC4/Capsense.c **** *
2030:Generated_Source\PSoC4/Capsense.c **** * Summary:
2031:Generated_Source\PSoC4/Capsense.c **** *  This API returns a value that indicates the IDAC range used by the
2032:Generated_Source\PSoC4/Capsense.c **** *  component to scan sensors. The IDAC range is common for all the sensors.
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 83


2033:Generated_Source\PSoC4/Capsense.c **** *
2034:Generated_Source\PSoC4/Capsense.c **** * Parameters:
2035:Generated_Source\PSoC4/Capsense.c **** *  None
2036:Generated_Source\PSoC4/Capsense.c **** *
2037:Generated_Source\PSoC4/Capsense.c **** * Return:
2038:Generated_Source\PSoC4/Capsense.c **** *  This API Returns a value that indicates the IDAC range:
2039:Generated_Source\PSoC4/Capsense.c **** *      0 - IDAC range set to 4x
2040:Generated_Source\PSoC4/Capsense.c **** *      1 - IDAC range set to 8x
2041:Generated_Source\PSoC4/Capsense.c **** *
2042:Generated_Source\PSoC4/Capsense.c **** * Global Variables:
2043:Generated_Source\PSoC4/Capsense.c **** *  None
2044:Generated_Source\PSoC4/Capsense.c **** *
2045:Generated_Source\PSoC4/Capsense.c **** * Side Effects:
2046:Generated_Source\PSoC4/Capsense.c **** *  None
2047:Generated_Source\PSoC4/Capsense.c **** *
2048:Generated_Source\PSoC4/Capsense.c **** *******************************************************************************/
2049:Generated_Source\PSoC4/Capsense.c **** uint32 Capsense_GetIDACRange(void)
2050:Generated_Source\PSoC4/Capsense.c **** {
 2626              		.loc 1 2050 0
 2627              		.cfi_startproc
 2628              		@ args = 0, pretend = 0, frame = 0
 2629              		@ frame_needed = 1, uses_anonymous_args = 0
 2630 0000 80B5     		push	{r7, lr}
 2631              		.cfi_def_cfa_offset 8
 2632              		.cfi_offset 7, -8
 2633              		.cfi_offset 14, -4
 2634 0002 00AF     		add	r7, sp, #0
 2635              		.cfi_def_cfa_register 7
2051:Generated_Source\PSoC4/Capsense.c ****     return((0u != (Capsense_CSD_IDAC_REG & Capsense_CSD_IDAC1_RANGE_8X)) ? 1uL : 0uL);
 2636              		.loc 1 2051 0
 2637 0004 054B     		ldr	r3, .L146
 2638 0006 1A68     		ldr	r2, [r3]
 2639 0008 8023     		movs	r3, #128
 2640 000a DB00     		lsls	r3, r3, #3
 2641 000c 1340     		ands	r3, r2
 2642 000e 01D0     		beq	.L143
 2643              		.loc 1 2051 0 is_stmt 0 discriminator 1
 2644 0010 0123     		movs	r3, #1
 2645 0012 00E0     		b	.L145
 2646              	.L143:
 2647              		.loc 1 2051 0 discriminator 2
 2648 0014 0023     		movs	r3, #0
 2649              	.L145:
2052:Generated_Source\PSoC4/Capsense.c **** }
 2650              		.loc 1 2052 0 is_stmt 1 discriminator 5
 2651 0016 1800     		movs	r0, r3
 2652 0018 BD46     		mov	sp, r7
 2653              		@ sp needed
 2654 001a 80BD     		pop	{r7, pc}
 2655              	.L147:
 2656              		.align	2
 2657              	.L146:
 2658 001c 08002840 		.word	1076363272
 2659              		.cfi_endproc
 2660              	.LFE71:
 2661              		.size	Capsense_GetIDACRange, .-Capsense_GetIDACRange
 2662              		.section	.text.Capsense_SetIDACRange,"ax",%progbits
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 84


 2663              		.align	2
 2664              		.global	Capsense_SetIDACRange
 2665              		.code	16
 2666              		.thumb_func
 2667              		.type	Capsense_SetIDACRange, %function
 2668              	Capsense_SetIDACRange:
 2669              	.LFB72:
2053:Generated_Source\PSoC4/Capsense.c **** 
2054:Generated_Source\PSoC4/Capsense.c **** #if (Capsense_TUNING_METHOD != Capsense__TUNING_NONE)
2055:Generated_Source\PSoC4/Capsense.c ****     /*******************************************************************************
2056:Generated_Source\PSoC4/Capsense.c ****     * Function Name: Capsense_SetIDACRange
2057:Generated_Source\PSoC4/Capsense.c ****     ********************************************************************************
2058:Generated_Source\PSoC4/Capsense.c ****     *
2059:Generated_Source\PSoC4/Capsense.c ****     * Summary:
2060:Generated_Source\PSoC4/Capsense.c ****     *  This API sets the IDAC range to the 4x (1.2uA/bit) or 8x (2.4uA/bit) mode.
2061:Generated_Source\PSoC4/Capsense.c ****     *  The IDAC range is common for all the sensors and common for the modulation and
2062:Generated_Source\PSoC4/Capsense.c ****     *  compensation IDACs.
2063:Generated_Source\PSoC4/Capsense.c ****     *
2064:Generated_Source\PSoC4/Capsense.c ****     * Parameters:
2065:Generated_Source\PSoC4/Capsense.c ****     *  iDacRange:  represents value for IDAC range
2066:Generated_Source\PSoC4/Capsense.c ****     *  0 -  IDAC range set to 4x (1.2uA/bit)
2067:Generated_Source\PSoC4/Capsense.c ****     *  1 or >1 - IDAC range set to 8x (2.4uA/bit)
2068:Generated_Source\PSoC4/Capsense.c ****     *
2069:Generated_Source\PSoC4/Capsense.c ****     * Return:
2070:Generated_Source\PSoC4/Capsense.c ****     *  None.
2071:Generated_Source\PSoC4/Capsense.c ****     *
2072:Generated_Source\PSoC4/Capsense.c ****     * Global Variables:
2073:Generated_Source\PSoC4/Capsense.c ****     *  None
2074:Generated_Source\PSoC4/Capsense.c ****     *
2075:Generated_Source\PSoC4/Capsense.c ****     * Side Effects:
2076:Generated_Source\PSoC4/Capsense.c ****     *  None
2077:Generated_Source\PSoC4/Capsense.c ****     *
2078:Generated_Source\PSoC4/Capsense.c ****     *******************************************************************************/
2079:Generated_Source\PSoC4/Capsense.c ****     void Capsense_SetIDACRange(uint32 iDacRange)
2080:Generated_Source\PSoC4/Capsense.c ****     {
 2670              		.loc 1 2080 0
 2671              		.cfi_startproc
 2672              		@ args = 0, pretend = 0, frame = 8
 2673              		@ frame_needed = 1, uses_anonymous_args = 0
 2674 0000 80B5     		push	{r7, lr}
 2675              		.cfi_def_cfa_offset 8
 2676              		.cfi_offset 7, -8
 2677              		.cfi_offset 14, -4
 2678 0002 82B0     		sub	sp, sp, #8
 2679              		.cfi_def_cfa_offset 16
 2680 0004 00AF     		add	r7, sp, #0
 2681              		.cfi_def_cfa_register 7
 2682 0006 7860     		str	r0, [r7, #4]
2081:Generated_Source\PSoC4/Capsense.c ****         if(iDacRange != 0u)
 2683              		.loc 1 2081 0
 2684 0008 7B68     		ldr	r3, [r7, #4]
 2685 000a 002B     		cmp	r3, #0
 2686 000c 06D0     		beq	.L149
2082:Generated_Source\PSoC4/Capsense.c ****         {
2083:Generated_Source\PSoC4/Capsense.c ****             /*  IDAC range = 8x (2.4uA/bit) */
2084:Generated_Source\PSoC4/Capsense.c ****             Capsense_CSD_IDAC_REG |= (Capsense_CSD_IDAC1_RANGE_8X |\
 2687              		.loc 1 2084 0
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 85


 2688 000e 084B     		ldr	r3, .L152
 2689 0010 074A     		ldr	r2, .L152
 2690 0012 1268     		ldr	r2, [r2]
 2691 0014 0749     		ldr	r1, .L152+4
 2692 0016 0A43     		orrs	r2, r1
 2693 0018 1A60     		str	r2, [r3]
2085:Generated_Source\PSoC4/Capsense.c ****                                               Capsense_CSD_IDAC2_RANGE_8X);
2086:Generated_Source\PSoC4/Capsense.c ****         }
2087:Generated_Source\PSoC4/Capsense.c ****         else
2088:Generated_Source\PSoC4/Capsense.c ****         {
2089:Generated_Source\PSoC4/Capsense.c ****             /*  IDAC range = 4x (1.2uA/bit) */
2090:Generated_Source\PSoC4/Capsense.c ****             /*  IDAC range = 8x (2.4uA/bit) */
2091:Generated_Source\PSoC4/Capsense.c ****             Capsense_CSD_IDAC_REG &= ~(Capsense_CSD_IDAC1_RANGE_8X |\
2092:Generated_Source\PSoC4/Capsense.c ****                                                Capsense_CSD_IDAC2_RANGE_8X);
2093:Generated_Source\PSoC4/Capsense.c ****         }
2094:Generated_Source\PSoC4/Capsense.c ****     }
 2694              		.loc 1 2094 0
 2695 001a 05E0     		b	.L151
 2696              	.L149:
2091:Generated_Source\PSoC4/Capsense.c ****                                                Capsense_CSD_IDAC2_RANGE_8X);
 2697              		.loc 1 2091 0
 2698 001c 044B     		ldr	r3, .L152
 2699 001e 044A     		ldr	r2, .L152
 2700 0020 1268     		ldr	r2, [r2]
 2701 0022 0549     		ldr	r1, .L152+8
 2702 0024 0A40     		ands	r2, r1
 2703 0026 1A60     		str	r2, [r3]
 2704              	.L151:
 2705              		.loc 1 2094 0
 2706 0028 C046     		nop
 2707 002a BD46     		mov	sp, r7
 2708 002c 02B0     		add	sp, sp, #8
 2709              		@ sp needed
 2710 002e 80BD     		pop	{r7, pc}
 2711              	.L153:
 2712              		.align	2
 2713              	.L152:
 2714 0030 08002840 		.word	1076363272
 2715 0034 00040004 		.word	67109888
 2716 0038 FFFBFFFB 		.word	-67109889
 2717              		.cfi_endproc
 2718              	.LFE72:
 2719              		.size	Capsense_SetIDACRange, .-Capsense_SetIDACRange
 2720              		.section	.text.Capsense_GetSensorRaw,"ax",%progbits
 2721              		.align	2
 2722              		.global	Capsense_GetSensorRaw
 2723              		.code	16
 2724              		.thumb_func
 2725              		.type	Capsense_GetSensorRaw, %function
 2726              	Capsense_GetSensorRaw:
 2727              	.LFB73:
2095:Generated_Source\PSoC4/Capsense.c **** #endif /* (Capsense_TUNING_METHOD != Capsense__TUNING_NONE) */
2096:Generated_Source\PSoC4/Capsense.c **** 
2097:Generated_Source\PSoC4/Capsense.c **** 
2098:Generated_Source\PSoC4/Capsense.c **** #if((0u != Capsense_AUTOCALIBRATION_ENABLE) || (Capsense_TUNING_METHOD == Capsense__TUNING_AUTO))
2099:Generated_Source\PSoC4/Capsense.c ****     /*******************************************************************************
2100:Generated_Source\PSoC4/Capsense.c ****     * Function Name: Capsense_GetSensorRaw
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 86


2101:Generated_Source\PSoC4/Capsense.c ****     ********************************************************************************
2102:Generated_Source\PSoC4/Capsense.c ****     *
2103:Generated_Source\PSoC4/Capsense.c ****     * Summary:
2104:Generated_Source\PSoC4/Capsense.c ****     *  The API updates and gets uprated raw data from the sensor.
2105:Generated_Source\PSoC4/Capsense.c ****     *
2106:Generated_Source\PSoC4/Capsense.c ****     * Parameters:
2107:Generated_Source\PSoC4/Capsense.c ****     *  sensor - Sensor number.
2108:Generated_Source\PSoC4/Capsense.c ****     *
2109:Generated_Source\PSoC4/Capsense.c ****     * Return:
2110:Generated_Source\PSoC4/Capsense.c ****     *  Returns the current raw data value for a defined sensor number.
2111:Generated_Source\PSoC4/Capsense.c ****     *
2112:Generated_Source\PSoC4/Capsense.c ****     * Global Variables:
2113:Generated_Source\PSoC4/Capsense.c ****     *  None
2114:Generated_Source\PSoC4/Capsense.c ****     *
2115:Generated_Source\PSoC4/Capsense.c ****     * Side Effects:
2116:Generated_Source\PSoC4/Capsense.c ****     *  None
2117:Generated_Source\PSoC4/Capsense.c ****     *
2118:Generated_Source\PSoC4/Capsense.c ****     *******************************************************************************/
2119:Generated_Source\PSoC4/Capsense.c ****     uint16  Capsense_GetSensorRaw(uint32 sensor)
2120:Generated_Source\PSoC4/Capsense.c ****     {
 2728              		.loc 1 2120 0
 2729              		.cfi_startproc
 2730              		@ args = 0, pretend = 0, frame = 16
 2731              		@ frame_needed = 1, uses_anonymous_args = 0
 2732 0000 80B5     		push	{r7, lr}
 2733              		.cfi_def_cfa_offset 8
 2734              		.cfi_offset 7, -8
 2735              		.cfi_offset 14, -4
 2736 0002 84B0     		sub	sp, sp, #16
 2737              		.cfi_def_cfa_offset 24
 2738 0004 00AF     		add	r7, sp, #0
 2739              		.cfi_def_cfa_register 7
 2740 0006 7860     		str	r0, [r7, #4]
2121:Generated_Source\PSoC4/Capsense.c ****         uint32 curSample;
2122:Generated_Source\PSoC4/Capsense.c ****         uint32 avgVal = 0u;
 2741              		.loc 1 2122 0
 2742 0008 0023     		movs	r3, #0
 2743 000a BB60     		str	r3, [r7, #8]
2123:Generated_Source\PSoC4/Capsense.c **** 
2124:Generated_Source\PSoC4/Capsense.c ****         for(curSample = 0u; curSample < Capsense_AVG_SAMPLES_NUM; curSample++)
 2744              		.loc 1 2124 0
 2745 000c 0023     		movs	r3, #0
 2746 000e FB60     		str	r3, [r7, #12]
 2747 0010 15E0     		b	.L155
 2748              	.L157:
2125:Generated_Source\PSoC4/Capsense.c ****         {
2126:Generated_Source\PSoC4/Capsense.c **** 
2127:Generated_Source\PSoC4/Capsense.c ****             Capsense_ScanSensor((uint32)sensor);
 2749              		.loc 1 2127 0
 2750 0012 7B68     		ldr	r3, [r7, #4]
 2751 0014 1800     		movs	r0, r3
 2752 0016 FFF7FEFF 		bl	Capsense_ScanSensor
2128:Generated_Source\PSoC4/Capsense.c ****             while(Capsense_IsBusy() == 1u)
 2753              		.loc 1 2128 0
 2754 001a C046     		nop
 2755              	.L156:
 2756              		.loc 1 2128 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 87


 2757 001c FFF7FEFF 		bl	Capsense_IsBusy
 2758 0020 0300     		movs	r3, r0
 2759 0022 012B     		cmp	r3, #1
 2760 0024 FAD0     		beq	.L156
2129:Generated_Source\PSoC4/Capsense.c ****             {
2130:Generated_Source\PSoC4/Capsense.c ****                 /* Wait while sensor is busy */
2131:Generated_Source\PSoC4/Capsense.c ****             }
2132:Generated_Source\PSoC4/Capsense.c ****             avgVal += Capsense_ReadSensorRaw((uint32)sensor);
 2761              		.loc 1 2132 0 is_stmt 1 discriminator 2
 2762 0026 7B68     		ldr	r3, [r7, #4]
 2763 0028 1800     		movs	r0, r3
 2764 002a FFF7FEFF 		bl	Capsense_ReadSensorRaw
 2765 002e 0300     		movs	r3, r0
 2766 0030 1A00     		movs	r2, r3
 2767 0032 BB68     		ldr	r3, [r7, #8]
 2768 0034 9B18     		adds	r3, r3, r2
 2769 0036 BB60     		str	r3, [r7, #8]
2124:Generated_Source\PSoC4/Capsense.c ****         {
 2770              		.loc 1 2124 0 discriminator 2
 2771 0038 FB68     		ldr	r3, [r7, #12]
 2772 003a 0133     		adds	r3, r3, #1
 2773 003c FB60     		str	r3, [r7, #12]
 2774              	.L155:
2124:Generated_Source\PSoC4/Capsense.c ****         {
 2775              		.loc 1 2124 0 is_stmt 0 discriminator 1
 2776 003e FB68     		ldr	r3, [r7, #12]
 2777 0040 002B     		cmp	r3, #0
 2778 0042 E6D0     		beq	.L157
2133:Generated_Source\PSoC4/Capsense.c ****         }
2134:Generated_Source\PSoC4/Capsense.c **** 
2135:Generated_Source\PSoC4/Capsense.c ****         return((uint16)(avgVal / Capsense_AVG_SAMPLES_NUM));
 2779              		.loc 1 2135 0 is_stmt 1
 2780 0044 BB68     		ldr	r3, [r7, #8]
 2781 0046 9BB2     		uxth	r3, r3
2136:Generated_Source\PSoC4/Capsense.c ****     }
 2782              		.loc 1 2136 0
 2783 0048 1800     		movs	r0, r3
 2784 004a BD46     		mov	sp, r7
 2785 004c 04B0     		add	sp, sp, #16
 2786              		@ sp needed
 2787 004e 80BD     		pop	{r7, pc}
 2788              		.cfi_endproc
 2789              	.LFE73:
 2790              		.size	Capsense_GetSensorRaw, .-Capsense_GetSensorRaw
 2791              		.section	.text.Capsense_CalibrateSensor,"ax",%progbits
 2792              		.align	2
 2793              		.global	Capsense_CalibrateSensor
 2794              		.code	16
 2795              		.thumb_func
 2796              		.type	Capsense_CalibrateSensor, %function
 2797              	Capsense_CalibrateSensor:
 2798              	.LFB74:
2137:Generated_Source\PSoC4/Capsense.c **** #endif /* ((0u != Capsense_AUTOCALIBRATION_ENABLE) && (Capsense_TUNING_METHOD == Capsense__TUNING_A
2138:Generated_Source\PSoC4/Capsense.c **** 
2139:Generated_Source\PSoC4/Capsense.c **** 
2140:Generated_Source\PSoC4/Capsense.c **** #if((0u != Capsense_AUTOCALIBRATION_ENABLE) && (Capsense_TUNING_METHOD != Capsense__TUNING_AUTO))
2141:Generated_Source\PSoC4/Capsense.c ****     /*******************************************************************************
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 88


2142:Generated_Source\PSoC4/Capsense.c ****     * Function Name: Capsense_CalibrateSensor
2143:Generated_Source\PSoC4/Capsense.c ****     ********************************************************************************
2144:Generated_Source\PSoC4/Capsense.c ****     *
2145:Generated_Source\PSoC4/Capsense.c ****     * Summary:
2146:Generated_Source\PSoC4/Capsense.c ****     *  Computes the one sensor IDAC value, which provides the raw signal on
2147:Generated_Source\PSoC4/Capsense.c ****     *  a specified level, with a specified prescaler, speed, and resolution.
2148:Generated_Source\PSoC4/Capsense.c ****     *
2149:Generated_Source\PSoC4/Capsense.c ****     * Parameters:
2150:Generated_Source\PSoC4/Capsense.c ****     *  sensor - Sensor Number.
2151:Generated_Source\PSoC4/Capsense.c ****     *
2152:Generated_Source\PSoC4/Capsense.c ****     *  rawLevel -  Raw data level which should be reached during the calibration
2153:Generated_Source\PSoC4/Capsense.c ****     *              procedure.
2154:Generated_Source\PSoC4/Capsense.c ****     *
2155:Generated_Source\PSoC4/Capsense.c ****     *  idacLevelsTbl - Pointer to the modulatorIdac data register configuration table.
2156:Generated_Source\PSoC4/Capsense.c ****     *
2157:Generated_Source\PSoC4/Capsense.c ****     * Return:
2158:Generated_Source\PSoC4/Capsense.c ****     *  None
2159:Generated_Source\PSoC4/Capsense.c ****     *
2160:Generated_Source\PSoC4/Capsense.c ****     *******************************************************************************/
2161:Generated_Source\PSoC4/Capsense.c ****     void Capsense_CalibrateSensor(uint32 sensor, uint32 rawLevel, uint8 idacLevelsTbl[])
2162:Generated_Source\PSoC4/Capsense.c ****     {
 2799              		.loc 1 2162 0
 2800              		.cfi_startproc
 2801              		@ args = 0, pretend = 0, frame = 24
 2802              		@ frame_needed = 1, uses_anonymous_args = 0
 2803 0000 90B5     		push	{r4, r7, lr}
 2804              		.cfi_def_cfa_offset 12
 2805              		.cfi_offset 4, -12
 2806              		.cfi_offset 7, -8
 2807              		.cfi_offset 14, -4
 2808 0002 87B0     		sub	sp, sp, #28
 2809              		.cfi_def_cfa_offset 40
 2810 0004 00AF     		add	r7, sp, #0
 2811              		.cfi_def_cfa_register 7
 2812 0006 F860     		str	r0, [r7, #12]
 2813 0008 B960     		str	r1, [r7, #8]
 2814 000a 7A60     		str	r2, [r7, #4]
2163:Generated_Source\PSoC4/Capsense.c ****         uint8 mask;
2164:Generated_Source\PSoC4/Capsense.c ****         uint16 rawData;
2165:Generated_Source\PSoC4/Capsense.c **** 
2166:Generated_Source\PSoC4/Capsense.c ****         rawData = 0u;
 2815              		.loc 1 2166 0
 2816 000c 1423     		movs	r3, #20
 2817 000e FB18     		adds	r3, r7, r3
 2818 0010 0022     		movs	r2, #0
 2819 0012 1A80     		strh	r2, [r3]
2167:Generated_Source\PSoC4/Capsense.c **** 
2168:Generated_Source\PSoC4/Capsense.c ****         mask = 0x80u;
 2820              		.loc 1 2168 0
 2821 0014 1723     		movs	r3, #23
 2822 0016 FB18     		adds	r3, r7, r3
 2823 0018 8022     		movs	r2, #128
 2824 001a 1A70     		strb	r2, [r3]
2169:Generated_Source\PSoC4/Capsense.c ****         /* Init IDAC for null Channel */
2170:Generated_Source\PSoC4/Capsense.c ****         idacLevelsTbl[sensor] = 0x00u;
 2825              		.loc 1 2170 0
 2826 001c 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 89


 2827 001e FB68     		ldr	r3, [r7, #12]
 2828 0020 D318     		adds	r3, r2, r3
 2829 0022 0022     		movs	r2, #0
 2830 0024 1A70     		strb	r2, [r3]
 2831              	.L161:
2171:Generated_Source\PSoC4/Capsense.c **** 
2172:Generated_Source\PSoC4/Capsense.c ****         do
2173:Generated_Source\PSoC4/Capsense.c ****         {
2174:Generated_Source\PSoC4/Capsense.c ****             /* Set bit for null Channel */
2175:Generated_Source\PSoC4/Capsense.c ****             idacLevelsTbl[sensor] |= mask;
 2832              		.loc 1 2175 0
 2833 0026 7A68     		ldr	r2, [r7, #4]
 2834 0028 FB68     		ldr	r3, [r7, #12]
 2835 002a D318     		adds	r3, r2, r3
 2836 002c 7968     		ldr	r1, [r7, #4]
 2837 002e FA68     		ldr	r2, [r7, #12]
 2838 0030 8A18     		adds	r2, r1, r2
 2839 0032 1178     		ldrb	r1, [r2]
 2840 0034 1722     		movs	r2, #23
 2841 0036 BA18     		adds	r2, r7, r2
 2842 0038 1278     		ldrb	r2, [r2]
 2843 003a 0A43     		orrs	r2, r1
 2844 003c D2B2     		uxtb	r2, r2
 2845 003e 1A70     		strb	r2, [r3]
2176:Generated_Source\PSoC4/Capsense.c **** 
2177:Generated_Source\PSoC4/Capsense.c ****             /* Scan null Channel and get Rawdata */
2178:Generated_Source\PSoC4/Capsense.c ****             rawData = Capsense_GetSensorRaw(sensor);
 2846              		.loc 1 2178 0
 2847 0040 1423     		movs	r3, #20
 2848 0042 FC18     		adds	r4, r7, r3
 2849 0044 FB68     		ldr	r3, [r7, #12]
 2850 0046 1800     		movs	r0, r3
 2851 0048 FFF7FEFF 		bl	Capsense_GetSensorRaw
 2852 004c 0300     		movs	r3, r0
 2853 004e 2380     		strh	r3, [r4]
2179:Generated_Source\PSoC4/Capsense.c **** 
2180:Generated_Source\PSoC4/Capsense.c ****             /* Decrease IDAC until Rawdata reaches rawLevel */
2181:Generated_Source\PSoC4/Capsense.c ****             if(rawData < rawLevel)
 2854              		.loc 1 2181 0
 2855 0050 1423     		movs	r3, #20
 2856 0052 FB18     		adds	r3, r7, r3
 2857 0054 1A88     		ldrh	r2, [r3]
 2858 0056 BB68     		ldr	r3, [r7, #8]
 2859 0058 9A42     		cmp	r2, r3
 2860 005a 0ED2     		bcs	.L160
2182:Generated_Source\PSoC4/Capsense.c ****             {
2183:Generated_Source\PSoC4/Capsense.c ****                 /* Reset bit for null Channel  */
2184:Generated_Source\PSoC4/Capsense.c ****                 idacLevelsTbl[sensor] &= (uint8)~mask;
 2861              		.loc 1 2184 0
 2862 005c 7A68     		ldr	r2, [r7, #4]
 2863 005e FB68     		ldr	r3, [r7, #12]
 2864 0060 D318     		adds	r3, r2, r3
 2865 0062 7968     		ldr	r1, [r7, #4]
 2866 0064 FA68     		ldr	r2, [r7, #12]
 2867 0066 8A18     		adds	r2, r1, r2
 2868 0068 1278     		ldrb	r2, [r2]
 2869 006a 1721     		movs	r1, #23
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 90


 2870 006c 7918     		adds	r1, r7, r1
 2871 006e 0978     		ldrb	r1, [r1]
 2872 0070 C943     		mvns	r1, r1
 2873 0072 C9B2     		uxtb	r1, r1
 2874 0074 0A40     		ands	r2, r1
 2875 0076 D2B2     		uxtb	r2, r2
 2876 0078 1A70     		strb	r2, [r3]
 2877              	.L160:
2185:Generated_Source\PSoC4/Capsense.c ****             }
2186:Generated_Source\PSoC4/Capsense.c **** 
2187:Generated_Source\PSoC4/Capsense.c ****             mask >>= 1u;
 2878              		.loc 1 2187 0
 2879 007a 1723     		movs	r3, #23
 2880 007c FB18     		adds	r3, r7, r3
 2881 007e 1722     		movs	r2, #23
 2882 0080 BA18     		adds	r2, r7, r2
 2883 0082 1278     		ldrb	r2, [r2]
 2884 0084 5208     		lsrs	r2, r2, #1
 2885 0086 1A70     		strb	r2, [r3]
2188:Generated_Source\PSoC4/Capsense.c ****         }
2189:Generated_Source\PSoC4/Capsense.c ****         while(mask > 0u);
 2886              		.loc 1 2189 0
 2887 0088 1723     		movs	r3, #23
 2888 008a FB18     		adds	r3, r7, r3
 2889 008c 1B78     		ldrb	r3, [r3]
 2890 008e 002B     		cmp	r3, #0
 2891 0090 C9D1     		bne	.L161
2190:Generated_Source\PSoC4/Capsense.c **** 
2191:Generated_Source\PSoC4/Capsense.c ****     }
 2892              		.loc 1 2191 0
 2893 0092 C046     		nop
 2894 0094 BD46     		mov	sp, r7
 2895 0096 07B0     		add	sp, sp, #28
 2896              		@ sp needed
 2897 0098 90BD     		pop	{r4, r7, pc}
 2898              		.cfi_endproc
 2899              	.LFE74:
 2900              		.size	Capsense_CalibrateSensor, .-Capsense_CalibrateSensor
 2901 009a C046     		.section	.text.Capsense_SetUnscannedSensorState,"ax",%progbits
 2902              		.align	2
 2903              		.global	Capsense_SetUnscannedSensorState
 2904              		.code	16
 2905              		.thumb_func
 2906              		.type	Capsense_SetUnscannedSensorState, %function
 2907              	Capsense_SetUnscannedSensorState:
 2908              	.LFB75:
2192:Generated_Source\PSoC4/Capsense.c **** #endif /* ((0u != Capsense_AUTOCALIBRATION_ENABLE) && (Capsense_TUNING_METHOD != Capsense__TUNING_A
2193:Generated_Source\PSoC4/Capsense.c **** 
2194:Generated_Source\PSoC4/Capsense.c **** 
2195:Generated_Source\PSoC4/Capsense.c **** /*******************************************************************************
2196:Generated_Source\PSoC4/Capsense.c **** * Function Name: Capsense_SetUnscannedSensorState
2197:Generated_Source\PSoC4/Capsense.c **** ********************************************************************************
2198:Generated_Source\PSoC4/Capsense.c **** *
2199:Generated_Source\PSoC4/Capsense.c **** * Summary:
2200:Generated_Source\PSoC4/Capsense.c **** *  This API sets a state for un-scanned sensors.
2201:Generated_Source\PSoC4/Capsense.c **** *  It is possible to set the state to Ground, High-Z, or the shield electrode.
2202:Generated_Source\PSoC4/Capsense.c **** *  The un-scanned sensor can be connected to a shield electrode only if the shield is
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 91


2203:Generated_Source\PSoC4/Capsense.c **** *  enabled. If the shield is disabled and this API is called with the parameter which
2204:Generated_Source\PSoC4/Capsense.c **** *  indicates the shield state, the un-scanned sensor will be connected to Ground.
2205:Generated_Source\PSoC4/Capsense.c **** *
2206:Generated_Source\PSoC4/Capsense.c **** * Parameters:
2207:Generated_Source\PSoC4/Capsense.c **** *  sensor - Sensor Number.
2208:Generated_Source\PSoC4/Capsense.c **** *  sensorState: This parameter indicates un-scanned sensor state:
2209:Generated_Source\PSoC4/Capsense.c **** *
2210:Generated_Source\PSoC4/Capsense.c **** *     Capsense__GROUND 0
2211:Generated_Source\PSoC4/Capsense.c **** *     Capsense__HIZ_ANALOG 1
2212:Generated_Source\PSoC4/Capsense.c **** *     Capsense__SHIELD 2
2213:Generated_Source\PSoC4/Capsense.c **** *
2214:Generated_Source\PSoC4/Capsense.c **** * Return:
2215:Generated_Source\PSoC4/Capsense.c **** *  None.
2216:Generated_Source\PSoC4/Capsense.c **** *
2217:Generated_Source\PSoC4/Capsense.c **** * Global Variables:
2218:Generated_Source\PSoC4/Capsense.c **** *  Capsense_unscannedSnsDriveMode[] - used to store the state for
2219:Generated_Source\PSoC4/Capsense.c **** *  un-scanned sensors.
2220:Generated_Source\PSoC4/Capsense.c **** *
2221:Generated_Source\PSoC4/Capsense.c **** * Side Effects:
2222:Generated_Source\PSoC4/Capsense.c **** *  None
2223:Generated_Source\PSoC4/Capsense.c **** *
2224:Generated_Source\PSoC4/Capsense.c **** *******************************************************************************/
2225:Generated_Source\PSoC4/Capsense.c **** void Capsense_SetUnscannedSensorState(uint32 sensor, uint32 sensorState)
2226:Generated_Source\PSoC4/Capsense.c **** {
 2909              		.loc 1 2226 0
 2910              		.cfi_startproc
 2911              		@ args = 0, pretend = 0, frame = 8
 2912              		@ frame_needed = 1, uses_anonymous_args = 0
 2913 0000 80B5     		push	{r7, lr}
 2914              		.cfi_def_cfa_offset 8
 2915              		.cfi_offset 7, -8
 2916              		.cfi_offset 14, -4
 2917 0002 82B0     		sub	sp, sp, #8
 2918              		.cfi_def_cfa_offset 16
 2919 0004 00AF     		add	r7, sp, #0
 2920              		.cfi_def_cfa_register 7
 2921 0006 7860     		str	r0, [r7, #4]
 2922 0008 3960     		str	r1, [r7]
2227:Generated_Source\PSoC4/Capsense.c ****     #if(Capsense_IS_COMPLEX_SCANSLOTS)
2228:Generated_Source\PSoC4/Capsense.c ****         uint8 snsType;
2229:Generated_Source\PSoC4/Capsense.c ****         uint8 curSensor;
2230:Generated_Source\PSoC4/Capsense.c ****         uint16 snsNumber;
2231:Generated_Source\PSoC4/Capsense.c **** 
2232:Generated_Source\PSoC4/Capsense.c ****         /* Read sensor type: single or complex */
2233:Generated_Source\PSoC4/Capsense.c ****         snsType = Capsense_portTable[sensor];
2234:Generated_Source\PSoC4/Capsense.c **** 
2235:Generated_Source\PSoC4/Capsense.c ****         /* Check if sensor is complex */
2236:Generated_Source\PSoC4/Capsense.c ****         if(0u != (snsType & Capsense_COMPLEX_SS_FLAG))
2237:Generated_Source\PSoC4/Capsense.c ****         {
2238:Generated_Source\PSoC4/Capsense.c ****             snsType &= (uint8)~Capsense_COMPLEX_SS_FLAG;
2239:Generated_Source\PSoC4/Capsense.c ****             snsNumber = (uint16)Capsense_maskTable[sensor];
2240:Generated_Source\PSoC4/Capsense.c **** 
2241:Generated_Source\PSoC4/Capsense.c ****             for (curSensor=0u; curSensor < snsNumber; curSensor++)
2242:Generated_Source\PSoC4/Capsense.c ****             {
2243:Generated_Source\PSoC4/Capsense.c ****                 sensor = Capsense_indexTable[snsType + curSensor];
2244:Generated_Source\PSoC4/Capsense.c ****                 Capsense_unscannedSnsDriveMode[sensor] = (uint8)sensorState;
2245:Generated_Source\PSoC4/Capsense.c ****             }
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 92


2246:Generated_Source\PSoC4/Capsense.c ****         }
2247:Generated_Source\PSoC4/Capsense.c ****         else
2248:Generated_Source\PSoC4/Capsense.c ****         {
2249:Generated_Source\PSoC4/Capsense.c ****             Capsense_unscannedSnsDriveMode[sensor] = (uint8)sensorState;
2250:Generated_Source\PSoC4/Capsense.c ****         }
2251:Generated_Source\PSoC4/Capsense.c ****     #else
2252:Generated_Source\PSoC4/Capsense.c ****         Capsense_unscannedSnsDriveMode[sensor] = (uint8)sensorState;
 2923              		.loc 1 2252 0
 2924 000a 3B68     		ldr	r3, [r7]
 2925 000c D9B2     		uxtb	r1, r3
 2926 000e 044A     		ldr	r2, .L163
 2927 0010 7B68     		ldr	r3, [r7, #4]
 2928 0012 D318     		adds	r3, r2, r3
 2929 0014 0A1C     		adds	r2, r1, #0
 2930 0016 1A70     		strb	r2, [r3]
2253:Generated_Source\PSoC4/Capsense.c ****     #endif /* (Capsense_IS_COMPLEX_SCANSLOTS) */
2254:Generated_Source\PSoC4/Capsense.c **** }
 2931              		.loc 1 2254 0
 2932 0018 C046     		nop
 2933 001a BD46     		mov	sp, r7
 2934 001c 02B0     		add	sp, sp, #8
 2935              		@ sp needed
 2936 001e 80BD     		pop	{r7, pc}
 2937              	.L164:
 2938              		.align	2
 2939              	.L163:
 2940 0020 00000000 		.word	Capsense_unscannedSnsDriveMode
 2941              		.cfi_endproc
 2942              	.LFE75:
 2943              		.size	Capsense_SetUnscannedSensorState, .-Capsense_SetUnscannedSensorState
 2944              		.bss
 2945              	Capsense_initVar.5424:
 2946 0006 00       		.space	1
 2947              		.text
 2948              	.Letext0:
 2949              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2950              		.file 3 "Generated_Source\\PSoC4\\Capsense_CSHL.h"
 2951              		.section	.debug_info,"",%progbits
 2952              	.Ldebug_info0:
 2953 0000 E00B0000 		.4byte	0xbe0
 2954 0004 0400     		.2byte	0x4
 2955 0006 00000000 		.4byte	.Ldebug_abbrev0
 2956 000a 04       		.byte	0x4
 2957 000b 01       		.uleb128 0x1
 2958 000c 63030000 		.4byte	.LASF121
 2959 0010 0C       		.byte	0xc
 2960 0011 F9040000 		.4byte	.LASF122
 2961 0015 97060000 		.4byte	.LASF123
 2962 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2963 001d 00000000 		.4byte	0
 2964 0021 00000000 		.4byte	.Ldebug_line0
 2965 0025 02       		.uleb128 0x2
 2966 0026 01       		.byte	0x1
 2967 0027 06       		.byte	0x6
 2968 0028 96040000 		.4byte	.LASF0
 2969 002c 02       		.uleb128 0x2
 2970 002d 01       		.byte	0x1
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 93


 2971 002e 08       		.byte	0x8
 2972 002f F1030000 		.4byte	.LASF1
 2973 0033 02       		.uleb128 0x2
 2974 0034 02       		.byte	0x2
 2975 0035 05       		.byte	0x5
 2976 0036 92000000 		.4byte	.LASF2
 2977 003a 02       		.uleb128 0x2
 2978 003b 02       		.byte	0x2
 2979 003c 07       		.byte	0x7
 2980 003d 95050000 		.4byte	.LASF3
 2981 0041 02       		.uleb128 0x2
 2982 0042 04       		.byte	0x4
 2983 0043 05       		.byte	0x5
 2984 0044 DC020000 		.4byte	.LASF4
 2985 0048 02       		.uleb128 0x2
 2986 0049 04       		.byte	0x4
 2987 004a 07       		.byte	0x7
 2988 004b 3D050000 		.4byte	.LASF5
 2989 004f 02       		.uleb128 0x2
 2990 0050 08       		.byte	0x8
 2991 0051 05       		.byte	0x5
 2992 0052 7B020000 		.4byte	.LASF6
 2993 0056 02       		.uleb128 0x2
 2994 0057 08       		.byte	0x8
 2995 0058 07       		.byte	0x7
 2996 0059 C3040000 		.4byte	.LASF7
 2997 005d 03       		.uleb128 0x3
 2998 005e 04       		.byte	0x4
 2999 005f 05       		.byte	0x5
 3000 0060 696E7400 		.ascii	"int\000"
 3001 0064 02       		.uleb128 0x2
 3002 0065 04       		.byte	0x4
 3003 0066 07       		.byte	0x7
 3004 0067 1B050000 		.4byte	.LASF8
 3005 006b 04       		.uleb128 0x4
 3006 006c 97010000 		.4byte	.LASF9
 3007 0070 02       		.byte	0x2
 3008 0071 B901     		.2byte	0x1b9
 3009 0073 2C000000 		.4byte	0x2c
 3010 0077 04       		.uleb128 0x4
 3011 0078 55010000 		.4byte	.LASF10
 3012 007c 02       		.byte	0x2
 3013 007d BA01     		.2byte	0x1ba
 3014 007f 3A000000 		.4byte	0x3a
 3015 0083 04       		.uleb128 0x4
 3016 0084 4E070000 		.4byte	.LASF11
 3017 0088 02       		.byte	0x2
 3018 0089 BB01     		.2byte	0x1bb
 3019 008b 48000000 		.4byte	0x48
 3020 008f 02       		.uleb128 0x2
 3021 0090 04       		.byte	0x4
 3022 0091 04       		.byte	0x4
 3023 0092 22020000 		.4byte	.LASF12
 3024 0096 02       		.uleb128 0x2
 3025 0097 08       		.byte	0x8
 3026 0098 04       		.byte	0x4
 3027 0099 55000000 		.4byte	.LASF13
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 94


 3028 009d 02       		.uleb128 0x2
 3029 009e 01       		.byte	0x1
 3030 009f 08       		.byte	0x8
 3031 00a0 E7050000 		.4byte	.LASF14
 3032 00a4 04       		.uleb128 0x4
 3033 00a5 40070000 		.4byte	.LASF15
 3034 00a9 02       		.byte	0x2
 3035 00aa 6302     		.2byte	0x263
 3036 00ac B0000000 		.4byte	0xb0
 3037 00b0 05       		.uleb128 0x5
 3038 00b1 6B000000 		.4byte	0x6b
 3039 00b5 04       		.uleb128 0x4
 3040 00b6 1F090000 		.4byte	.LASF16
 3041 00ba 02       		.byte	0x2
 3042 00bb 6502     		.2byte	0x265
 3043 00bd C1000000 		.4byte	0xc1
 3044 00c1 05       		.uleb128 0x5
 3045 00c2 83000000 		.4byte	0x83
 3046 00c6 02       		.uleb128 0x2
 3047 00c7 04       		.byte	0x4
 3048 00c8 07       		.byte	0x7
 3049 00c9 24080000 		.4byte	.LASF17
 3050 00cd 02       		.uleb128 0x2
 3051 00ce 08       		.byte	0x8
 3052 00cf 04       		.byte	0x4
 3053 00d0 26040000 		.4byte	.LASF18
 3054 00d4 06       		.uleb128 0x6
 3055 00d5 04       		.byte	0x4
 3056 00d6 6B000000 		.4byte	0x6b
 3057 00da 06       		.uleb128 0x6
 3058 00db 04       		.byte	0x4
 3059 00dc E0000000 		.4byte	0xe0
 3060 00e0 07       		.uleb128 0x7
 3061 00e1 6B000000 		.4byte	0x6b
 3062 00e5 08       		.uleb128 0x8
 3063 00e6 B1020000 		.4byte	.LASF19
 3064 00ea 01       		.byte	0x1
 3065 00eb A0       		.byte	0xa0
 3066 00ec 00000000 		.4byte	.LFB36
 3067 00f0 38000000 		.4byte	.LFE36-.LFB36
 3068 00f4 01       		.uleb128 0x1
 3069 00f5 9C       		.byte	0x9c
 3070 00f6 09010000 		.4byte	0x109
 3071 00fa 09       		.uleb128 0x9
 3072 00fb CA070000 		.4byte	.LASF21
 3073 00ff 01       		.byte	0x1
 3074 0100 A2       		.byte	0xa2
 3075 0101 83000000 		.4byte	0x83
 3076 0105 02       		.uleb128 0x2
 3077 0106 91       		.byte	0x91
 3078 0107 74       		.sleb128 -12
 3079 0108 00       		.byte	0
 3080 0109 08       		.uleb128 0x8
 3081 010a 00000000 		.4byte	.LASF20
 3082 010e 01       		.byte	0x1
 3083 010f E1       		.byte	0xe1
 3084 0110 00000000 		.4byte	.LFB37
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 95


 3085 0114 BC000000 		.4byte	.LFE37-.LFB37
 3086 0118 01       		.uleb128 0x1
 3087 0119 9C       		.byte	0x9c
 3088 011a 2D010000 		.4byte	0x12d
 3089 011e 09       		.uleb128 0x9
 3090 011f 28050000 		.4byte	.LASF22
 3091 0123 01       		.byte	0x1
 3092 0124 E3       		.byte	0xe3
 3093 0125 83000000 		.4byte	0x83
 3094 0129 02       		.uleb128 0x2
 3095 012a 91       		.byte	0x91
 3096 012b 74       		.sleb128 -12
 3097 012c 00       		.byte	0
 3098 012d 0A       		.uleb128 0xa
 3099 012e 48040000 		.4byte	.LASF23
 3100 0132 01       		.byte	0x1
 3101 0133 3601     		.2byte	0x136
 3102 0135 00000000 		.4byte	.LFB38
 3103 0139 54000000 		.4byte	.LFE38-.LFB38
 3104 013d 01       		.uleb128 0x1
 3105 013e 9C       		.byte	0x9c
 3106 013f 53010000 		.4byte	0x153
 3107 0143 0B       		.uleb128 0xb
 3108 0144 28050000 		.4byte	.LASF22
 3109 0148 01       		.byte	0x1
 3110 0149 3801     		.2byte	0x138
 3111 014b 83000000 		.4byte	0x83
 3112 014f 02       		.uleb128 0x2
 3113 0150 91       		.byte	0x91
 3114 0151 74       		.sleb128 -12
 3115 0152 00       		.byte	0
 3116 0153 0A       		.uleb128 0xa
 3117 0154 58040000 		.4byte	.LASF24
 3118 0158 01       		.byte	0x1
 3119 0159 7101     		.2byte	0x171
 3120 015b 00000000 		.4byte	.LFB39
 3121 015f F0000000 		.4byte	.LFE39-.LFB39
 3122 0163 01       		.uleb128 0x1
 3123 0164 9C       		.byte	0x9c
 3124 0165 A9010000 		.4byte	0x1a9
 3125 0169 0B       		.uleb128 0xb
 3126 016a 23000000 		.4byte	.LASF25
 3127 016e 01       		.byte	0x1
 3128 016f 7401     		.2byte	0x174
 3129 0171 6B000000 		.4byte	0x6b
 3130 0175 05       		.uleb128 0x5
 3131 0176 03       		.byte	0x3
 3132 0177 06000000 		.4byte	Capsense_initVar.5424
 3133 017b 0B       		.uleb128 0xb
 3134 017c CA070000 		.4byte	.LASF21
 3135 0180 01       		.byte	0x1
 3136 0181 7701     		.2byte	0x177
 3137 0183 83000000 		.4byte	0x83
 3138 0187 02       		.uleb128 0x2
 3139 0188 91       		.byte	0x91
 3140 0189 74       		.sleb128 -12
 3141 018a 0B       		.uleb128 0xb
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 96


 3142 018b 0B070000 		.4byte	.LASF26
 3143 018f 01       		.byte	0x1
 3144 0190 7801     		.2byte	0x178
 3145 0192 83000000 		.4byte	0x83
 3146 0196 02       		.uleb128 0x2
 3147 0197 91       		.byte	0x91
 3148 0198 6C       		.sleb128 -20
 3149 0199 0B       		.uleb128 0xb
 3150 019a 90010000 		.4byte	.LASF27
 3151 019e 01       		.byte	0x1
 3152 019f 7901     		.2byte	0x179
 3153 01a1 83000000 		.4byte	0x83
 3154 01a5 02       		.uleb128 0x2
 3155 01a6 91       		.byte	0x91
 3156 01a7 70       		.sleb128 -16
 3157 01a8 00       		.byte	0
 3158 01a9 0C       		.uleb128 0xc
 3159 01aa F5070000 		.4byte	.LASF35
 3160 01ae 01       		.byte	0x1
 3161 01af CD01     		.2byte	0x1cd
 3162 01b1 00000000 		.4byte	.LFB40
 3163 01b5 38000000 		.4byte	.LFE40-.LFB40
 3164 01b9 01       		.uleb128 0x1
 3165 01ba 9C       		.byte	0x9c
 3166 01bb 0D       		.uleb128 0xd
 3167 01bc E0010000 		.4byte	.LASF37
 3168 01c0 01       		.byte	0x1
 3169 01c1 F301     		.2byte	0x1f3
 3170 01c3 6B000000 		.4byte	0x6b
 3171 01c7 00000000 		.4byte	.LFB41
 3172 01cb 4C000000 		.4byte	.LFE41-.LFB41
 3173 01cf 01       		.uleb128 0x1
 3174 01d0 9C       		.byte	0x9c
 3175 01d1 F4010000 		.4byte	0x1f4
 3176 01d5 0E       		.uleb128 0xe
 3177 01d6 34050000 		.4byte	.LASF30
 3178 01da 01       		.byte	0x1
 3179 01db F301     		.2byte	0x1f3
 3180 01dd 6B000000 		.4byte	0x6b
 3181 01e1 02       		.uleb128 0x2
 3182 01e2 91       		.byte	0x91
 3183 01e3 6F       		.sleb128 -17
 3184 01e4 0B       		.uleb128 0xb
 3185 01e5 41080000 		.4byte	.LASF28
 3186 01e9 01       		.byte	0x1
 3187 01ea F501     		.2byte	0x1f5
 3188 01ec 83000000 		.4byte	0x83
 3189 01f0 02       		.uleb128 0x2
 3190 01f1 91       		.byte	0x91
 3191 01f2 74       		.sleb128 -12
 3192 01f3 00       		.byte	0
 3193 01f4 0A       		.uleb128 0xa
 3194 01f5 10080000 		.4byte	.LASF29
 3195 01f9 01       		.byte	0x1
 3196 01fa 2302     		.2byte	0x223
 3197 01fc 00000000 		.4byte	.LFB42
 3198 0200 34000000 		.4byte	.LFE42-.LFB42
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 97


 3199 0204 01       		.uleb128 0x1
 3200 0205 9C       		.byte	0x9c
 3201 0206 1A020000 		.4byte	0x21a
 3202 020a 0E       		.uleb128 0xe
 3203 020b 9C000000 		.4byte	.LASF31
 3204 020f 01       		.byte	0x1
 3205 0210 2302     		.2byte	0x223
 3206 0212 83000000 		.4byte	0x83
 3207 0216 02       		.uleb128 0x2
 3208 0217 91       		.byte	0x91
 3209 0218 74       		.sleb128 -12
 3210 0219 00       		.byte	0
 3211 021a 0A       		.uleb128 0xa
 3212 021b 2D080000 		.4byte	.LASF32
 3213 021f 01       		.byte	0x1
 3214 0220 4A02     		.2byte	0x24a
 3215 0222 00000000 		.4byte	.LFB43
 3216 0226 DC000000 		.4byte	.LFE43-.LFB43
 3217 022a 01       		.uleb128 0x1
 3218 022b 9C       		.byte	0x9c
 3219 022c 6D020000 		.4byte	0x26d
 3220 0230 0E       		.uleb128 0xe
 3221 0231 90010000 		.4byte	.LASF27
 3222 0235 01       		.byte	0x1
 3223 0236 4A02     		.2byte	0x24a
 3224 0238 83000000 		.4byte	0x83
 3225 023c 02       		.uleb128 0x2
 3226 023d 91       		.byte	0x91
 3227 023e 64       		.sleb128 -28
 3228 023f 0B       		.uleb128 0xb
 3229 0240 87080000 		.4byte	.LASF33
 3230 0244 01       		.byte	0x1
 3231 0245 4C02     		.2byte	0x24c
 3232 0247 83000000 		.4byte	0x83
 3233 024b 02       		.uleb128 0x2
 3234 024c 91       		.byte	0x91
 3235 024d 74       		.sleb128 -12
 3236 024e 0B       		.uleb128 0xb
 3237 024f 43060000 		.4byte	.LASF34
 3238 0253 01       		.byte	0x1
 3239 0254 4D02     		.2byte	0x24d
 3240 0256 83000000 		.4byte	0x83
 3241 025a 02       		.uleb128 0x2
 3242 025b 91       		.byte	0x91
 3243 025c 6C       		.sleb128 -20
 3244 025d 0B       		.uleb128 0xb
 3245 025e 34050000 		.4byte	.LASF30
 3246 0262 01       		.byte	0x1
 3247 0263 4E02     		.2byte	0x24e
 3248 0265 83000000 		.4byte	0x83
 3249 0269 02       		.uleb128 0x2
 3250 026a 91       		.byte	0x91
 3251 026b 70       		.sleb128 -16
 3252 026c 00       		.byte	0
 3253 026d 0C       		.uleb128 0xc
 3254 026e 06020000 		.4byte	.LASF36
 3255 0272 01       		.byte	0x1
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 98


 3256 0273 9F02     		.2byte	0x29f
 3257 0275 00000000 		.4byte	.LFB44
 3258 0279 58000000 		.4byte	.LFE44-.LFB44
 3259 027d 01       		.uleb128 0x1
 3260 027e 9C       		.byte	0x9c
 3261 027f 0F       		.uleb128 0xf
 3262 0280 AB080000 		.4byte	.LASF68
 3263 0284 01       		.byte	0x1
 3264 0285 C802     		.2byte	0x2c8
 3265 0287 83000000 		.4byte	0x83
 3266 028b 00000000 		.4byte	.LFB45
 3267 028f 1C000000 		.4byte	.LFE45-.LFB45
 3268 0293 01       		.uleb128 0x1
 3269 0294 9C       		.byte	0x9c
 3270 0295 10       		.uleb128 0x10
 3271 0296 34000000 		.4byte	.LASF38
 3272 029a 01       		.byte	0x1
 3273 029b E602     		.2byte	0x2e6
 3274 029d 77000000 		.4byte	0x77
 3275 02a1 00000000 		.4byte	.LFB46
 3276 02a5 1C000000 		.4byte	.LFE46-.LFB46
 3277 02a9 01       		.uleb128 0x1
 3278 02aa 9C       		.byte	0x9c
 3279 02ab BF020000 		.4byte	0x2bf
 3280 02af 0E       		.uleb128 0xe
 3281 02b0 9C000000 		.4byte	.LASF31
 3282 02b4 01       		.byte	0x1
 3283 02b5 E602     		.2byte	0x2e6
 3284 02b7 83000000 		.4byte	0x83
 3285 02bb 02       		.uleb128 0x2
 3286 02bc 91       		.byte	0x91
 3287 02bd 74       		.sleb128 -12
 3288 02be 00       		.byte	0
 3289 02bf 11       		.uleb128 0x11
 3290 02c0 57020000 		.4byte	.LASF39
 3291 02c4 01       		.byte	0x1
 3292 02c5 0103     		.2byte	0x301
 3293 02c7 00000000 		.4byte	.LFB47
 3294 02cb 28000000 		.4byte	.LFE47-.LFB47
 3295 02cf 01       		.uleb128 0x1
 3296 02d0 9C       		.byte	0x9c
 3297 02d1 F4020000 		.4byte	0x2f4
 3298 02d5 0E       		.uleb128 0xe
 3299 02d6 9C000000 		.4byte	.LASF31
 3300 02da 01       		.byte	0x1
 3301 02db 0103     		.2byte	0x301
 3302 02dd 83000000 		.4byte	0x83
 3303 02e1 02       		.uleb128 0x2
 3304 02e2 91       		.byte	0x91
 3305 02e3 74       		.sleb128 -12
 3306 02e4 0E       		.uleb128 0xe
 3307 02e5 4F010000 		.4byte	.LASF40
 3308 02e9 01       		.byte	0x1
 3309 02ea 0103     		.2byte	0x301
 3310 02ec 77000000 		.4byte	0x77
 3311 02f0 02       		.uleb128 0x2
 3312 02f1 91       		.byte	0x91
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 99


 3313 02f2 72       		.sleb128 -14
 3314 02f3 00       		.byte	0
 3315 02f4 11       		.uleb128 0x11
 3316 02f5 25070000 		.4byte	.LASF41
 3317 02f9 01       		.byte	0x1
 3318 02fa 2B03     		.2byte	0x32b
 3319 02fc 00000000 		.4byte	.LFB48
 3320 0300 20000000 		.4byte	.LFE48-.LFB48
 3321 0304 01       		.uleb128 0x1
 3322 0305 9C       		.byte	0x9c
 3323 0306 29030000 		.4byte	0x329
 3324 030a 0E       		.uleb128 0xe
 3325 030b 90010000 		.4byte	.LASF27
 3326 030f 01       		.byte	0x1
 3327 0310 2B03     		.2byte	0x32b
 3328 0312 83000000 		.4byte	0x83
 3329 0316 02       		.uleb128 0x2
 3330 0317 91       		.byte	0x91
 3331 0318 74       		.sleb128 -12
 3332 0319 0E       		.uleb128 0xe
 3333 031a 1B060000 		.4byte	.LASF42
 3334 031e 01       		.byte	0x1
 3335 031f 2B03     		.2byte	0x32b
 3336 0321 83000000 		.4byte	0x83
 3337 0325 02       		.uleb128 0x2
 3338 0326 91       		.byte	0x91
 3339 0327 70       		.sleb128 -16
 3340 0328 00       		.byte	0
 3341 0329 10       		.uleb128 0x10
 3342 032a E1060000 		.4byte	.LASF43
 3343 032e 01       		.byte	0x1
 3344 032f 5403     		.2byte	0x354
 3345 0331 83000000 		.4byte	0x83
 3346 0335 00000000 		.4byte	.LFB49
 3347 0339 1C000000 		.4byte	.LFE49-.LFB49
 3348 033d 01       		.uleb128 0x1
 3349 033e 9C       		.byte	0x9c
 3350 033f 53030000 		.4byte	0x353
 3351 0343 0E       		.uleb128 0xe
 3352 0344 90010000 		.4byte	.LASF27
 3353 0348 01       		.byte	0x1
 3354 0349 5403     		.2byte	0x354
 3355 034b 83000000 		.4byte	0x83
 3356 034f 02       		.uleb128 0x2
 3357 0350 91       		.byte	0x91
 3358 0351 74       		.sleb128 -12
 3359 0352 00       		.byte	0
 3360 0353 0A       		.uleb128 0xa
 3361 0354 99070000 		.4byte	.LASF44
 3362 0358 01       		.byte	0x1
 3363 0359 6F03     		.2byte	0x36f
 3364 035b 00000000 		.4byte	.LFB50
 3365 035f 28000000 		.4byte	.LFE50-.LFB50
 3366 0363 01       		.uleb128 0x1
 3367 0364 9C       		.byte	0x9c
 3368 0365 79030000 		.4byte	0x379
 3369 0369 0B       		.uleb128 0xb
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 100


 3370 036a 34050000 		.4byte	.LASF30
 3371 036e 01       		.byte	0x1
 3372 036f 7103     		.2byte	0x371
 3373 0371 83000000 		.4byte	0x83
 3374 0375 02       		.uleb128 0x2
 3375 0376 91       		.byte	0x91
 3376 0377 74       		.sleb128 -12
 3377 0378 00       		.byte	0
 3378 0379 0A       		.uleb128 0xa
 3379 037a 65060000 		.4byte	.LASF45
 3380 037e 01       		.byte	0x1
 3381 037f 0D04     		.2byte	0x40d
 3382 0381 00000000 		.4byte	.LFB51
 3383 0385 B0000000 		.4byte	.LFE51-.LFB51
 3384 0389 01       		.uleb128 0x1
 3385 038a 9C       		.byte	0x9c
 3386 038b EA030000 		.4byte	0x3ea
 3387 038f 0E       		.uleb128 0xe
 3388 0390 9C000000 		.4byte	.LASF31
 3389 0394 01       		.byte	0x1
 3390 0395 0D04     		.2byte	0x40d
 3391 0397 83000000 		.4byte	0x83
 3392 039b 02       		.uleb128 0x2
 3393 039c 91       		.byte	0x91
 3394 039d 5C       		.sleb128 -36
 3395 039e 0B       		.uleb128 0xb
 3396 039f 6E010000 		.4byte	.LASF46
 3397 03a3 01       		.byte	0x1
 3398 03a4 0F04     		.2byte	0x40f
 3399 03a6 6B000000 		.4byte	0x6b
 3400 03aa 02       		.uleb128 0x2
 3401 03ab 91       		.byte	0x91
 3402 03ac 6B       		.sleb128 -21
 3403 03ad 0B       		.uleb128 0xb
 3404 03ae 6C080000 		.4byte	.LASF47
 3405 03b2 01       		.byte	0x1
 3406 03b3 1004     		.2byte	0x410
 3407 03b5 6B000000 		.4byte	0x6b
 3408 03b9 02       		.uleb128 0x2
 3409 03ba 91       		.byte	0x91
 3410 03bb 6A       		.sleb128 -22
 3411 03bc 0B       		.uleb128 0xb
 3412 03bd FC060000 		.4byte	.LASF48
 3413 03c1 01       		.byte	0x1
 3414 03c2 1104     		.2byte	0x411
 3415 03c4 6B000000 		.4byte	0x6b
 3416 03c8 02       		.uleb128 0x2
 3417 03c9 91       		.byte	0x91
 3418 03ca 69       		.sleb128 -23
 3419 03cb 0B       		.uleb128 0xb
 3420 03cc DB080000 		.4byte	.LASF49
 3421 03d0 01       		.byte	0x1
 3422 03d1 1204     		.2byte	0x412
 3423 03d3 83000000 		.4byte	0x83
 3424 03d7 02       		.uleb128 0x2
 3425 03d8 91       		.byte	0x91
 3426 03d9 64       		.sleb128 -28
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 101


 3427 03da 0B       		.uleb128 0xb
 3428 03db 60060000 		.4byte	.LASF50
 3429 03df 01       		.byte	0x1
 3430 03e0 1304     		.2byte	0x413
 3431 03e2 83000000 		.4byte	0x83
 3432 03e6 02       		.uleb128 0x2
 3433 03e7 91       		.byte	0x91
 3434 03e8 6C       		.sleb128 -20
 3435 03e9 00       		.byte	0
 3436 03ea 0A       		.uleb128 0xa
 3437 03eb CC000000 		.4byte	.LASF51
 3438 03ef 01       		.byte	0x1
 3439 03f0 4204     		.2byte	0x442
 3440 03f2 00000000 		.4byte	.LFB52
 3441 03f6 FC000000 		.4byte	.LFE52-.LFB52
 3442 03fa 01       		.uleb128 0x1
 3443 03fb 9C       		.byte	0x9c
 3444 03fc 79040000 		.4byte	0x479
 3445 0400 0E       		.uleb128 0xe
 3446 0401 9C000000 		.4byte	.LASF31
 3447 0405 01       		.byte	0x1
 3448 0406 4204     		.2byte	0x442
 3449 0408 83000000 		.4byte	0x83
 3450 040c 02       		.uleb128 0x2
 3451 040d 91       		.byte	0x91
 3452 040e 54       		.sleb128 -44
 3453 040f 0B       		.uleb128 0xb
 3454 0410 FC060000 		.4byte	.LASF48
 3455 0414 01       		.byte	0x1
 3456 0415 4404     		.2byte	0x444
 3457 0417 6B000000 		.4byte	0x6b
 3458 041b 02       		.uleb128 0x2
 3459 041c 91       		.byte	0x91
 3460 041d 61       		.sleb128 -31
 3461 041e 0B       		.uleb128 0xb
 3462 041f DB080000 		.4byte	.LASF49
 3463 0423 01       		.byte	0x1
 3464 0424 4504     		.2byte	0x445
 3465 0426 83000000 		.4byte	0x83
 3466 042a 02       		.uleb128 0x2
 3467 042b 91       		.byte	0x91
 3468 042c 5C       		.sleb128 -36
 3469 042d 0B       		.uleb128 0xb
 3470 042e 60060000 		.4byte	.LASF50
 3471 0432 01       		.byte	0x1
 3472 0433 4704     		.2byte	0x447
 3473 0435 83000000 		.4byte	0x83
 3474 0439 02       		.uleb128 0x2
 3475 043a 91       		.byte	0x91
 3476 043b 64       		.sleb128 -28
 3477 043c 0B       		.uleb128 0xb
 3478 043d 6C080000 		.4byte	.LASF47
 3479 0441 01       		.byte	0x1
 3480 0442 4804     		.2byte	0x448
 3481 0444 6B000000 		.4byte	0x6b
 3482 0448 02       		.uleb128 0x2
 3483 0449 91       		.byte	0x91
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 102


 3484 044a 63       		.sleb128 -29
 3485 044b 0B       		.uleb128 0xb
 3486 044c 6E010000 		.4byte	.LASF46
 3487 0450 01       		.byte	0x1
 3488 0451 4904     		.2byte	0x449
 3489 0453 6B000000 		.4byte	0x6b
 3490 0457 02       		.uleb128 0x2
 3491 0458 91       		.byte	0x91
 3492 0459 62       		.sleb128 -30
 3493 045a 0B       		.uleb128 0xb
 3494 045b 6C050000 		.4byte	.LASF52
 3495 045f 01       		.byte	0x1
 3496 0460 4B04     		.2byte	0x44b
 3497 0462 83000000 		.4byte	0x83
 3498 0466 02       		.uleb128 0x2
 3499 0467 91       		.byte	0x91
 3500 0468 6C       		.sleb128 -20
 3501 0469 0B       		.uleb128 0xb
 3502 046a 6F020000 		.4byte	.LASF53
 3503 046e 01       		.byte	0x1
 3504 046f 4C04     		.2byte	0x44c
 3505 0471 83000000 		.4byte	0x83
 3506 0475 02       		.uleb128 0x2
 3507 0476 91       		.byte	0x91
 3508 0477 68       		.sleb128 -24
 3509 0478 00       		.byte	0
 3510 0479 0A       		.uleb128 0xa
 3511 047a BF020000 		.4byte	.LASF54
 3512 047e 01       		.byte	0x1
 3513 047f 8F04     		.2byte	0x48f
 3514 0481 00000000 		.4byte	.LFB53
 3515 0485 52000000 		.4byte	.LFE53-.LFB53
 3516 0489 01       		.uleb128 0x1
 3517 048a 9C       		.byte	0x9c
 3518 048b CC040000 		.4byte	0x4cc
 3519 048f 0E       		.uleb128 0xe
 3520 0490 39060000 		.4byte	.LASF55
 3521 0494 01       		.byte	0x1
 3522 0495 8F04     		.2byte	0x48f
 3523 0497 83000000 		.4byte	0x83
 3524 049b 02       		.uleb128 0x2
 3525 049c 91       		.byte	0x91
 3526 049d 64       		.sleb128 -28
 3527 049e 0B       		.uleb128 0xb
 3528 049f CA070000 		.4byte	.LASF21
 3529 04a3 01       		.byte	0x1
 3530 04a4 9104     		.2byte	0x491
 3531 04a6 6B000000 		.4byte	0x6b
 3532 04aa 02       		.uleb128 0x2
 3533 04ab 91       		.byte	0x91
 3534 04ac 77       		.sleb128 -9
 3535 04ad 0B       		.uleb128 0xb
 3536 04ae FF030000 		.4byte	.LASF56
 3537 04b2 01       		.byte	0x1
 3538 04b3 9604     		.2byte	0x496
 3539 04b5 83000000 		.4byte	0x83
 3540 04b9 02       		.uleb128 0x2
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 103


 3541 04ba 91       		.byte	0x91
 3542 04bb 70       		.sleb128 -16
 3543 04bc 0B       		.uleb128 0xb
 3544 04bd 7A080000 		.4byte	.LASF57
 3545 04c1 01       		.byte	0x1
 3546 04c2 9704     		.2byte	0x497
 3547 04c4 83000000 		.4byte	0x83
 3548 04c8 02       		.uleb128 0x2
 3549 04c9 91       		.byte	0x91
 3550 04ca 6C       		.sleb128 -20
 3551 04cb 00       		.byte	0
 3552 04cc 0A       		.uleb128 0xa
 3553 04cd A2040000 		.4byte	.LASF58
 3554 04d1 01       		.byte	0x1
 3555 04d2 D804     		.2byte	0x4d8
 3556 04d4 00000000 		.4byte	.LFB54
 3557 04d8 34000000 		.4byte	.LFE54-.LFB54
 3558 04dc 01       		.uleb128 0x1
 3559 04dd 9C       		.byte	0x9c
 3560 04de F2040000 		.4byte	0x4f2
 3561 04e2 0B       		.uleb128 0xb
 3562 04e3 DB080000 		.4byte	.LASF49
 3563 04e7 01       		.byte	0x1
 3564 04e8 DA04     		.2byte	0x4da
 3565 04ea 83000000 		.4byte	0x83
 3566 04ee 02       		.uleb128 0x2
 3567 04ef 91       		.byte	0x91
 3568 04f0 74       		.sleb128 -12
 3569 04f1 00       		.byte	0
 3570 04f2 11       		.uleb128 0x11
 3571 04f3 7C050000 		.4byte	.LASF59
 3572 04f7 01       		.byte	0x1
 3573 04f8 0C05     		.2byte	0x50c
 3574 04fa 00000000 		.4byte	.LFB55
 3575 04fe 58000000 		.4byte	.LFE55-.LFB55
 3576 0502 01       		.uleb128 0x1
 3577 0503 9C       		.byte	0x9c
 3578 0504 54050000 		.4byte	0x554
 3579 0508 0E       		.uleb128 0xe
 3580 0509 39060000 		.4byte	.LASF55
 3581 050d 01       		.byte	0x1
 3582 050e 0C05     		.2byte	0x50c
 3583 0510 83000000 		.4byte	0x83
 3584 0514 02       		.uleb128 0x2
 3585 0515 91       		.byte	0x91
 3586 0516 6C       		.sleb128 -20
 3587 0517 0E       		.uleb128 0xe
 3588 0518 D7060000 		.4byte	.LASF60
 3589 051c 01       		.byte	0x1
 3590 051d 0C05     		.2byte	0x50c
 3591 051f 83000000 		.4byte	0x83
 3592 0523 02       		.uleb128 0x2
 3593 0524 91       		.byte	0x91
 3594 0525 68       		.sleb128 -24
 3595 0526 0E       		.uleb128 0xe
 3596 0527 18000000 		.4byte	.LASF61
 3597 052b 01       		.byte	0x1
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 104


 3598 052c 0C05     		.2byte	0x50c
 3599 052e 83000000 		.4byte	0x83
 3600 0532 02       		.uleb128 0x2
 3601 0533 91       		.byte	0x91
 3602 0534 64       		.sleb128 -28
 3603 0535 0B       		.uleb128 0xb
 3604 0536 6E010000 		.4byte	.LASF46
 3605 053a 01       		.byte	0x1
 3606 053b 0E05     		.2byte	0x50e
 3607 053d 83000000 		.4byte	0x83
 3608 0541 02       		.uleb128 0x2
 3609 0542 91       		.byte	0x91
 3610 0543 74       		.sleb128 -12
 3611 0544 0B       		.uleb128 0xb
 3612 0545 DB080000 		.4byte	.LASF49
 3613 0549 01       		.byte	0x1
 3614 054a 0F05     		.2byte	0x50f
 3615 054c 83000000 		.4byte	0x83
 3616 0550 02       		.uleb128 0x2
 3617 0551 91       		.byte	0x91
 3618 0552 70       		.sleb128 -16
 3619 0553 00       		.byte	0
 3620 0554 0A       		.uleb128 0xa
 3621 0555 0C040000 		.4byte	.LASF62
 3622 0559 01       		.byte	0x1
 3623 055a 3005     		.2byte	0x530
 3624 055c 00000000 		.4byte	.LFB56
 3625 0560 48010000 		.4byte	.LFE56-.LFB56
 3626 0564 01       		.uleb128 0x1
 3627 0565 9C       		.byte	0x9c
 3628 0566 B6050000 		.4byte	0x5b6
 3629 056a 0E       		.uleb128 0xe
 3630 056b 9C000000 		.4byte	.LASF31
 3631 056f 01       		.byte	0x1
 3632 0570 3005     		.2byte	0x530
 3633 0572 83000000 		.4byte	0x83
 3634 0576 02       		.uleb128 0x2
 3635 0577 91       		.byte	0x91
 3636 0578 5C       		.sleb128 -36
 3637 0579 0B       		.uleb128 0xb
 3638 057a 90010000 		.4byte	.LASF27
 3639 057e 01       		.byte	0x1
 3640 057f 3205     		.2byte	0x532
 3641 0581 6B000000 		.4byte	0x6b
 3642 0585 02       		.uleb128 0x2
 3643 0586 91       		.byte	0x91
 3644 0587 6F       		.sleb128 -17
 3645 0588 0B       		.uleb128 0xb
 3646 0589 FC060000 		.4byte	.LASF48
 3647 058d 01       		.byte	0x1
 3648 058e 3305     		.2byte	0x533
 3649 0590 6B000000 		.4byte	0x6b
 3650 0594 02       		.uleb128 0x2
 3651 0595 91       		.byte	0x91
 3652 0596 63       		.sleb128 -29
 3653 0597 0B       		.uleb128 0xb
 3654 0598 28050000 		.4byte	.LASF22
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 105


 3655 059c 01       		.byte	0x1
 3656 059d 3405     		.2byte	0x534
 3657 059f 83000000 		.4byte	0x83
 3658 05a3 02       		.uleb128 0x2
 3659 05a4 91       		.byte	0x91
 3660 05a5 64       		.sleb128 -28
 3661 05a6 0B       		.uleb128 0xb
 3662 05a7 B8010000 		.4byte	.LASF63
 3663 05ab 01       		.byte	0x1
 3664 05ac 3505     		.2byte	0x535
 3665 05ae 83000000 		.4byte	0x83
 3666 05b2 02       		.uleb128 0x2
 3667 05b3 91       		.byte	0x91
 3668 05b4 68       		.sleb128 -24
 3669 05b5 00       		.byte	0
 3670 05b6 0A       		.uleb128 0xa
 3671 05b7 4E060000 		.4byte	.LASF64
 3672 05bb 01       		.byte	0x1
 3673 05bc F505     		.2byte	0x5f5
 3674 05be 00000000 		.4byte	.LFB57
 3675 05c2 74000000 		.4byte	.LFE57-.LFB57
 3676 05c6 01       		.uleb128 0x1
 3677 05c7 9C       		.byte	0x9c
 3678 05c8 EB050000 		.4byte	0x5eb
 3679 05cc 0E       		.uleb128 0xe
 3680 05cd 9C000000 		.4byte	.LASF31
 3681 05d1 01       		.byte	0x1
 3682 05d2 F505     		.2byte	0x5f5
 3683 05d4 83000000 		.4byte	0x83
 3684 05d8 02       		.uleb128 0x2
 3685 05d9 91       		.byte	0x91
 3686 05da 6C       		.sleb128 -20
 3687 05db 0B       		.uleb128 0xb
 3688 05dc 28050000 		.4byte	.LASF22
 3689 05e0 01       		.byte	0x1
 3690 05e1 F705     		.2byte	0x5f7
 3691 05e3 83000000 		.4byte	0x83
 3692 05e7 02       		.uleb128 0x2
 3693 05e8 91       		.byte	0x91
 3694 05e9 74       		.sleb128 -12
 3695 05ea 00       		.byte	0
 3696 05eb 11       		.uleb128 0x11
 3697 05ec 12030000 		.4byte	.LASF65
 3698 05f0 01       		.byte	0x1
 3699 05f1 5206     		.2byte	0x652
 3700 05f3 00000000 		.4byte	.LFB58
 3701 05f7 7C000000 		.4byte	.LFE58-.LFB58
 3702 05fb 01       		.uleb128 0x1
 3703 05fc 9C       		.byte	0x9c
 3704 05fd 2F060000 		.4byte	0x62f
 3705 0601 0E       		.uleb128 0xe
 3706 0602 D7060000 		.4byte	.LASF60
 3707 0606 01       		.byte	0x1
 3708 0607 5206     		.2byte	0x652
 3709 0609 83000000 		.4byte	0x83
 3710 060d 02       		.uleb128 0x2
 3711 060e 91       		.byte	0x91
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 106


 3712 060f 6C       		.sleb128 -20
 3713 0610 0E       		.uleb128 0xe
 3714 0611 18000000 		.4byte	.LASF61
 3715 0615 01       		.byte	0x1
 3716 0616 5206     		.2byte	0x652
 3717 0618 83000000 		.4byte	0x83
 3718 061c 02       		.uleb128 0x2
 3719 061d 91       		.byte	0x91
 3720 061e 68       		.sleb128 -24
 3721 061f 0B       		.uleb128 0xb
 3722 0620 28050000 		.4byte	.LASF22
 3723 0624 01       		.byte	0x1
 3724 0625 5406     		.2byte	0x654
 3725 0627 83000000 		.4byte	0x83
 3726 062b 02       		.uleb128 0x2
 3727 062c 91       		.byte	0x91
 3728 062d 74       		.sleb128 -12
 3729 062e 00       		.byte	0
 3730 062f 11       		.uleb128 0x11
 3731 0630 31030000 		.4byte	.LASF66
 3732 0634 01       		.byte	0x1
 3733 0635 7506     		.2byte	0x675
 3734 0637 00000000 		.4byte	.LFB59
 3735 063b 34000000 		.4byte	.LFE59-.LFB59
 3736 063f 01       		.uleb128 0x1
 3737 0640 9C       		.byte	0x9c
 3738 0641 64060000 		.4byte	0x664
 3739 0645 0E       		.uleb128 0xe
 3740 0646 FD000000 		.4byte	.LASF67
 3741 064a 01       		.byte	0x1
 3742 064b 7506     		.2byte	0x675
 3743 064d 83000000 		.4byte	0x83
 3744 0651 02       		.uleb128 0x2
 3745 0652 91       		.byte	0x91
 3746 0653 6C       		.sleb128 -20
 3747 0654 0B       		.uleb128 0xb
 3748 0655 28050000 		.4byte	.LASF22
 3749 0659 01       		.byte	0x1
 3750 065a 7706     		.2byte	0x677
 3751 065c 83000000 		.4byte	0x83
 3752 0660 02       		.uleb128 0x2
 3753 0661 91       		.byte	0x91
 3754 0662 74       		.sleb128 -12
 3755 0663 00       		.byte	0
 3756 0664 0F       		.uleb128 0xf
 3757 0665 C4050000 		.4byte	.LASF69
 3758 0669 01       		.byte	0x1
 3759 066a 9906     		.2byte	0x699
 3760 066c 83000000 		.4byte	0x83
 3761 0670 00000000 		.4byte	.LFB60
 3762 0674 2C000000 		.4byte	.LFE60-.LFB60
 3763 0678 01       		.uleb128 0x1
 3764 0679 9C       		.byte	0x9c
 3765 067a 10       		.uleb128 0x10
 3766 067b AF050000 		.4byte	.LASF70
 3767 067f 01       		.byte	0x1
 3768 0680 B506     		.2byte	0x6b5
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 107


 3769 0682 83000000 		.4byte	0x83
 3770 0686 00000000 		.4byte	.LFB61
 3771 068a 44000000 		.4byte	.LFE61-.LFB61
 3772 068e 01       		.uleb128 0x1
 3773 068f 9C       		.byte	0x9c
 3774 0690 D1060000 		.4byte	0x6d1
 3775 0694 0E       		.uleb128 0xe
 3776 0695 B2010000 		.4byte	.LASF71
 3777 0699 01       		.byte	0x1
 3778 069a B506     		.2byte	0x6b5
 3779 069c DA000000 		.4byte	0xda
 3780 06a0 02       		.uleb128 0x2
 3781 06a1 91       		.byte	0x91
 3782 06a2 6C       		.sleb128 -20
 3783 06a3 0E       		.uleb128 0xe
 3784 06a4 1D040000 		.4byte	.LASF72
 3785 06a8 01       		.byte	0x1
 3786 06a9 B506     		.2byte	0x6b5
 3787 06ab 83000000 		.4byte	0x83
 3788 06af 02       		.uleb128 0x2
 3789 06b0 91       		.byte	0x91
 3790 06b1 68       		.sleb128 -24
 3791 06b2 0B       		.uleb128 0xb
 3792 06b3 A8050000 		.4byte	.LASF73
 3793 06b7 01       		.byte	0x1
 3794 06b8 B706     		.2byte	0x6b7
 3795 06ba 83000000 		.4byte	0x83
 3796 06be 02       		.uleb128 0x2
 3797 06bf 91       		.byte	0x91
 3798 06c0 74       		.sleb128 -12
 3799 06c1 0B       		.uleb128 0xb
 3800 06c2 84000000 		.4byte	.LASF74
 3801 06c6 01       		.byte	0x1
 3802 06c7 B806     		.2byte	0x6b8
 3803 06c9 6B000000 		.4byte	0x6b
 3804 06cd 02       		.uleb128 0x2
 3805 06ce 91       		.byte	0x91
 3806 06cf 73       		.sleb128 -13
 3807 06d0 00       		.byte	0
 3808 06d1 11       		.uleb128 0x11
 3809 06d2 7B010000 		.4byte	.LASF75
 3810 06d6 01       		.byte	0x1
 3811 06d7 E006     		.2byte	0x6e0
 3812 06d9 00000000 		.4byte	.LFB62
 3813 06dd 6A000000 		.4byte	.LFE62-.LFB62
 3814 06e1 01       		.uleb128 0x1
 3815 06e2 9C       		.byte	0x9c
 3816 06e3 33070000 		.4byte	0x733
 3817 06e7 0E       		.uleb128 0xe
 3818 06e8 B2010000 		.4byte	.LASF71
 3819 06ec 01       		.byte	0x1
 3820 06ed E006     		.2byte	0x6e0
 3821 06ef D4000000 		.4byte	0xd4
 3822 06f3 02       		.uleb128 0x2
 3823 06f4 91       		.byte	0x91
 3824 06f5 6C       		.sleb128 -20
 3825 06f6 0E       		.uleb128 0xe
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 108


 3826 06f7 1D040000 		.4byte	.LASF72
 3827 06fb 01       		.byte	0x1
 3828 06fc E006     		.2byte	0x6e0
 3829 06fe 83000000 		.4byte	0x83
 3830 0702 02       		.uleb128 0x2
 3831 0703 91       		.byte	0x91
 3832 0704 68       		.sleb128 -24
 3833 0705 0E       		.uleb128 0xe
 3834 0706 4F010000 		.4byte	.LASF40
 3835 070a 01       		.byte	0x1
 3836 070b E006     		.2byte	0x6e0
 3837 070d 83000000 		.4byte	0x83
 3838 0711 02       		.uleb128 0x2
 3839 0712 91       		.byte	0x91
 3840 0713 64       		.sleb128 -28
 3841 0714 0B       		.uleb128 0xb
 3842 0715 A8050000 		.4byte	.LASF73
 3843 0719 01       		.byte	0x1
 3844 071a E206     		.2byte	0x6e2
 3845 071c 83000000 		.4byte	0x83
 3846 0720 02       		.uleb128 0x2
 3847 0721 91       		.byte	0x91
 3848 0722 74       		.sleb128 -12
 3849 0723 0B       		.uleb128 0xb
 3850 0724 84000000 		.4byte	.LASF74
 3851 0728 01       		.byte	0x1
 3852 0729 E306     		.2byte	0x6e3
 3853 072b 6B000000 		.4byte	0x6b
 3854 072f 02       		.uleb128 0x2
 3855 0730 91       		.byte	0x91
 3856 0731 73       		.sleb128 -13
 3857 0732 00       		.byte	0
 3858 0733 10       		.uleb128 0x10
 3859 0734 3B020000 		.4byte	.LASF76
 3860 0738 01       		.byte	0x1
 3861 0739 1207     		.2byte	0x712
 3862 073b 83000000 		.4byte	0x83
 3863 073f 00000000 		.4byte	.LFB63
 3864 0743 1C000000 		.4byte	.LFE63-.LFB63
 3865 0747 01       		.uleb128 0x1
 3866 0748 9C       		.byte	0x9c
 3867 0749 5D070000 		.4byte	0x75d
 3868 074d 0E       		.uleb128 0xe
 3869 074e 9C000000 		.4byte	.LASF31
 3870 0752 01       		.byte	0x1
 3871 0753 1207     		.2byte	0x712
 3872 0755 83000000 		.4byte	0x83
 3873 0759 02       		.uleb128 0x2
 3874 075a 91       		.byte	0x91
 3875 075b 74       		.sleb128 -12
 3876 075c 00       		.byte	0
 3877 075d 11       		.uleb128 0x11
 3878 075e 7B060000 		.4byte	.LASF77
 3879 0762 01       		.byte	0x1
 3880 0763 3107     		.2byte	0x731
 3881 0765 00000000 		.4byte	.LFB64
 3882 0769 24000000 		.4byte	.LFE64-.LFB64
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 109


 3883 076d 01       		.uleb128 0x1
 3884 076e 9C       		.byte	0x9c
 3885 076f 92070000 		.4byte	0x792
 3886 0773 0E       		.uleb128 0xe
 3887 0774 9C000000 		.4byte	.LASF31
 3888 0778 01       		.byte	0x1
 3889 0779 3107     		.2byte	0x731
 3890 077b 83000000 		.4byte	0x83
 3891 077f 02       		.uleb128 0x2
 3892 0780 91       		.byte	0x91
 3893 0781 74       		.sleb128 -12
 3894 0782 0E       		.uleb128 0xe
 3895 0783 45070000 		.4byte	.LASF78
 3896 0787 01       		.byte	0x1
 3897 0788 3107     		.2byte	0x731
 3898 078a 83000000 		.4byte	0x83
 3899 078e 02       		.uleb128 0x2
 3900 078f 91       		.byte	0x91
 3901 0790 70       		.sleb128 -16
 3902 0791 00       		.byte	0
 3903 0792 10       		.uleb128 0x10
 3904 0793 2F010000 		.4byte	.LASF79
 3905 0797 01       		.byte	0x1
 3906 0798 5107     		.2byte	0x751
 3907 079a 83000000 		.4byte	0x83
 3908 079e 00000000 		.4byte	.LFB65
 3909 07a2 1C000000 		.4byte	.LFE65-.LFB65
 3910 07a6 01       		.uleb128 0x1
 3911 07a7 9C       		.byte	0x9c
 3912 07a8 BC070000 		.4byte	0x7bc
 3913 07ac 0E       		.uleb128 0xe
 3914 07ad 9C000000 		.4byte	.LASF31
 3915 07b1 01       		.byte	0x1
 3916 07b2 5107     		.2byte	0x751
 3917 07b4 83000000 		.4byte	0x83
 3918 07b8 02       		.uleb128 0x2
 3919 07b9 91       		.byte	0x91
 3920 07ba 74       		.sleb128 -12
 3921 07bb 00       		.byte	0
 3922 07bc 11       		.uleb128 0x11
 3923 07bd 4C080000 		.4byte	.LASF80
 3924 07c1 01       		.byte	0x1
 3925 07c2 7007     		.2byte	0x770
 3926 07c4 00000000 		.4byte	.LFB66
 3927 07c8 24000000 		.4byte	.LFE66-.LFB66
 3928 07cc 01       		.uleb128 0x1
 3929 07cd 9C       		.byte	0x9c
 3930 07ce F1070000 		.4byte	0x7f1
 3931 07d2 0E       		.uleb128 0xe
 3932 07d3 9C000000 		.4byte	.LASF31
 3933 07d7 01       		.byte	0x1
 3934 07d8 7007     		.2byte	0x770
 3935 07da 83000000 		.4byte	0x83
 3936 07de 02       		.uleb128 0x2
 3937 07df 91       		.byte	0x91
 3938 07e0 74       		.sleb128 -12
 3939 07e1 0E       		.uleb128 0xe
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 110


 3940 07e2 03080000 		.4byte	.LASF81
 3941 07e6 01       		.byte	0x1
 3942 07e7 7007     		.2byte	0x770
 3943 07e9 83000000 		.4byte	0x83
 3944 07ed 02       		.uleb128 0x2
 3945 07ee 91       		.byte	0x91
 3946 07ef 70       		.sleb128 -16
 3947 07f0 00       		.byte	0
 3948 07f1 10       		.uleb128 0x10
 3949 07f2 AF070000 		.4byte	.LASF82
 3950 07f6 01       		.byte	0x1
 3951 07f7 8F07     		.2byte	0x78f
 3952 07f9 83000000 		.4byte	0x83
 3953 07fd 00000000 		.4byte	.LFB67
 3954 0801 1C000000 		.4byte	.LFE67-.LFB67
 3955 0805 01       		.uleb128 0x1
 3956 0806 9C       		.byte	0x9c
 3957 0807 1B080000 		.4byte	0x81b
 3958 080b 0E       		.uleb128 0xe
 3959 080c 9C000000 		.4byte	.LASF31
 3960 0810 01       		.byte	0x1
 3961 0811 8F07     		.2byte	0x78f
 3962 0813 83000000 		.4byte	0x83
 3963 0817 02       		.uleb128 0x2
 3964 0818 91       		.byte	0x91
 3965 0819 74       		.sleb128 -12
 3966 081a 00       		.byte	0
 3967 081b 11       		.uleb128 0x11
 3968 081c 96020000 		.4byte	.LASF83
 3969 0820 01       		.byte	0x1
 3970 0821 AA07     		.2byte	0x7aa
 3971 0823 00000000 		.4byte	.LFB68
 3972 0827 24000000 		.4byte	.LFE68-.LFB68
 3973 082b 01       		.uleb128 0x1
 3974 082c 9C       		.byte	0x9c
 3975 082d 50080000 		.4byte	0x850
 3976 0831 0E       		.uleb128 0xe
 3977 0832 9C000000 		.4byte	.LASF31
 3978 0836 01       		.byte	0x1
 3979 0837 AA07     		.2byte	0x7aa
 3980 0839 83000000 		.4byte	0x83
 3981 083d 02       		.uleb128 0x2
 3982 083e 91       		.byte	0x91
 3983 083f 74       		.sleb128 -12
 3984 0840 0E       		.uleb128 0xe
 3985 0841 89020000 		.4byte	.LASF84
 3986 0845 01       		.byte	0x1
 3987 0846 AA07     		.2byte	0x7aa
 3988 0848 83000000 		.4byte	0x83
 3989 084c 02       		.uleb128 0x2
 3990 084d 91       		.byte	0x91
 3991 084e 70       		.sleb128 -16
 3992 084f 00       		.byte	0
 3993 0850 10       		.uleb128 0x10
 3994 0851 55070000 		.4byte	.LASF85
 3995 0855 01       		.byte	0x1
 3996 0856 C707     		.2byte	0x7c7
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 111


 3997 0858 83000000 		.4byte	0x83
 3998 085c 00000000 		.4byte	.LFB69
 3999 0860 1C000000 		.4byte	.LFE69-.LFB69
 4000 0864 01       		.uleb128 0x1
 4001 0865 9C       		.byte	0x9c
 4002 0866 7A080000 		.4byte	0x87a
 4003 086a 0E       		.uleb128 0xe
 4004 086b 9C000000 		.4byte	.LASF31
 4005 086f 01       		.byte	0x1
 4006 0870 C707     		.2byte	0x7c7
 4007 0872 83000000 		.4byte	0x83
 4008 0876 02       		.uleb128 0x2
 4009 0877 91       		.byte	0x91
 4010 0878 74       		.sleb128 -12
 4011 0879 00       		.byte	0
 4012 087a 11       		.uleb128 0x11
 4013 087b 4F050000 		.4byte	.LASF86
 4014 087f 01       		.byte	0x1
 4015 0880 E407     		.2byte	0x7e4
 4016 0882 00000000 		.4byte	.LFB70
 4017 0886 24000000 		.4byte	.LFE70-.LFB70
 4018 088a 01       		.uleb128 0x1
 4019 088b 9C       		.byte	0x9c
 4020 088c AF080000 		.4byte	0x8af
 4021 0890 0E       		.uleb128 0xe
 4022 0891 9C000000 		.4byte	.LASF31
 4023 0895 01       		.byte	0x1
 4024 0896 E407     		.2byte	0x7e4
 4025 0898 83000000 		.4byte	0x83
 4026 089c 02       		.uleb128 0x2
 4027 089d 91       		.byte	0x91
 4028 089e 74       		.sleb128 -12
 4029 089f 0E       		.uleb128 0xe
 4030 08a0 19010000 		.4byte	.LASF87
 4031 08a4 01       		.byte	0x1
 4032 08a5 E407     		.2byte	0x7e4
 4033 08a7 83000000 		.4byte	0x83
 4034 08ab 02       		.uleb128 0x2
 4035 08ac 91       		.byte	0x91
 4036 08ad 70       		.sleb128 -16
 4037 08ae 00       		.byte	0
 4038 08af 0F       		.uleb128 0xf
 4039 08b0 5C000000 		.4byte	.LASF88
 4040 08b4 01       		.byte	0x1
 4041 08b5 0108     		.2byte	0x801
 4042 08b7 83000000 		.4byte	0x83
 4043 08bb 00000000 		.4byte	.LFB71
 4044 08bf 20000000 		.4byte	.LFE71-.LFB71
 4045 08c3 01       		.uleb128 0x1
 4046 08c4 9C       		.byte	0x9c
 4047 08c5 11       		.uleb128 0x11
 4048 08c6 32040000 		.4byte	.LASF89
 4049 08ca 01       		.byte	0x1
 4050 08cb 1F08     		.2byte	0x81f
 4051 08cd 00000000 		.4byte	.LFB72
 4052 08d1 3C000000 		.4byte	.LFE72-.LFB72
 4053 08d5 01       		.uleb128 0x1
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 112


 4054 08d6 9C       		.byte	0x9c
 4055 08d7 EB080000 		.4byte	0x8eb
 4056 08db 0E       		.uleb128 0xe
 4057 08dc 72070000 		.4byte	.LASF90
 4058 08e0 01       		.byte	0x1
 4059 08e1 1F08     		.2byte	0x81f
 4060 08e3 83000000 		.4byte	0x83
 4061 08e7 02       		.uleb128 0x2
 4062 08e8 91       		.byte	0x91
 4063 08e9 74       		.sleb128 -12
 4064 08ea 00       		.byte	0
 4065 08eb 0D       		.uleb128 0xd
 4066 08ec B6000000 		.4byte	.LASF91
 4067 08f0 01       		.byte	0x1
 4068 08f1 4708     		.2byte	0x847
 4069 08f3 77000000 		.4byte	0x77
 4070 08f7 00000000 		.4byte	.LFB73
 4071 08fb 50000000 		.4byte	.LFE73-.LFB73
 4072 08ff 01       		.uleb128 0x1
 4073 0900 9C       		.byte	0x9c
 4074 0901 33090000 		.4byte	0x933
 4075 0905 0E       		.uleb128 0xe
 4076 0906 9C000000 		.4byte	.LASF31
 4077 090a 01       		.byte	0x1
 4078 090b 4708     		.2byte	0x847
 4079 090d 83000000 		.4byte	0x83
 4080 0911 02       		.uleb128 0x2
 4081 0912 91       		.byte	0x91
 4082 0913 6C       		.sleb128 -20
 4083 0914 0B       		.uleb128 0xb
 4084 0915 4B000000 		.4byte	.LASF92
 4085 0919 01       		.byte	0x1
 4086 091a 4908     		.2byte	0x849
 4087 091c 83000000 		.4byte	0x83
 4088 0920 02       		.uleb128 0x2
 4089 0921 91       		.byte	0x91
 4090 0922 74       		.sleb128 -12
 4091 0923 0B       		.uleb128 0xb
 4092 0924 8B000000 		.4byte	.LASF93
 4093 0928 01       		.byte	0x1
 4094 0929 4A08     		.2byte	0x84a
 4095 092b 83000000 		.4byte	0x83
 4096 092f 02       		.uleb128 0x2
 4097 0930 91       		.byte	0x91
 4098 0931 70       		.sleb128 -16
 4099 0932 00       		.byte	0
 4100 0933 0A       		.uleb128 0xa
 4101 0934 06090000 		.4byte	.LASF94
 4102 0938 01       		.byte	0x1
 4103 0939 7108     		.2byte	0x871
 4104 093b 00000000 		.4byte	.LFB74
 4105 093f 9A000000 		.4byte	.LFE74-.LFB74
 4106 0943 01       		.uleb128 0x1
 4107 0944 9C       		.byte	0x9c
 4108 0945 95090000 		.4byte	0x995
 4109 0949 0E       		.uleb128 0xe
 4110 094a 9C000000 		.4byte	.LASF31
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 113


 4111 094e 01       		.byte	0x1
 4112 094f 7108     		.2byte	0x871
 4113 0951 83000000 		.4byte	0x83
 4114 0955 02       		.uleb128 0x2
 4115 0956 91       		.byte	0x91
 4116 0957 64       		.sleb128 -28
 4117 0958 0E       		.uleb128 0xe
 4118 0959 0B070000 		.4byte	.LASF26
 4119 095d 01       		.byte	0x1
 4120 095e 7108     		.2byte	0x871
 4121 0960 83000000 		.4byte	0x83
 4122 0964 02       		.uleb128 0x2
 4123 0965 91       		.byte	0x91
 4124 0966 60       		.sleb128 -32
 4125 0967 0E       		.uleb128 0xe
 4126 0968 F8010000 		.4byte	.LASF95
 4127 096c 01       		.byte	0x1
 4128 096d 7108     		.2byte	0x871
 4129 096f D4000000 		.4byte	0xd4
 4130 0973 02       		.uleb128 0x2
 4131 0974 91       		.byte	0x91
 4132 0975 5C       		.sleb128 -36
 4133 0976 0B       		.uleb128 0xb
 4134 0977 25090000 		.4byte	.LASF96
 4135 097b 01       		.byte	0x1
 4136 097c 7308     		.2byte	0x873
 4137 097e 6B000000 		.4byte	0x6b
 4138 0982 02       		.uleb128 0x2
 4139 0983 91       		.byte	0x91
 4140 0984 6F       		.sleb128 -17
 4141 0985 0B       		.uleb128 0xb
 4142 0986 27010000 		.4byte	.LASF97
 4143 098a 01       		.byte	0x1
 4144 098b 7408     		.2byte	0x874
 4145 098d 77000000 		.4byte	0x77
 4146 0991 02       		.uleb128 0x2
 4147 0992 91       		.byte	0x91
 4148 0993 6C       		.sleb128 -20
 4149 0994 00       		.byte	0
 4150 0995 11       		.uleb128 0x11
 4151 0996 D4070000 		.4byte	.LASF98
 4152 099a 01       		.byte	0x1
 4153 099b B108     		.2byte	0x8b1
 4154 099d 00000000 		.4byte	.LFB75
 4155 09a1 24000000 		.4byte	.LFE75-.LFB75
 4156 09a5 01       		.uleb128 0x1
 4157 09a6 9C       		.byte	0x9c
 4158 09a7 CA090000 		.4byte	0x9ca
 4159 09ab 0E       		.uleb128 0xe
 4160 09ac 9C000000 		.4byte	.LASF31
 4161 09b0 01       		.byte	0x1
 4162 09b1 B108     		.2byte	0x8b1
 4163 09b3 83000000 		.4byte	0x83
 4164 09b7 02       		.uleb128 0x2
 4165 09b8 91       		.byte	0x91
 4166 09b9 74       		.sleb128 -12
 4167 09ba 0E       		.uleb128 0xe
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 114


 4168 09bb 6F020000 		.4byte	.LASF53
 4169 09bf 01       		.byte	0x1
 4170 09c0 B108     		.2byte	0x8b1
 4171 09c2 83000000 		.4byte	0x83
 4172 09c6 02       		.uleb128 0x2
 4173 09c7 91       		.byte	0x91
 4174 09c8 70       		.sleb128 -16
 4175 09c9 00       		.byte	0
 4176 09ca 12       		.uleb128 0x12
 4177 09cb 05060000 		.4byte	.LASF99
 4178 09cf 01       		.byte	0x1
 4179 09d0 2D       		.byte	0x2d
 4180 09d1 B0000000 		.4byte	0xb0
 4181 09d5 05       		.uleb128 0x5
 4182 09d6 03       		.byte	0x3
 4183 09d7 00000000 		.4byte	Capsense_csdStatusVar
 4184 09db 12       		.uleb128 0x12
 4185 09dc FD020000 		.4byte	.LASF100
 4186 09e0 01       		.byte	0x1
 4187 09e1 2E       		.byte	0x2e
 4188 09e2 B0000000 		.4byte	0xb0
 4189 09e6 05       		.uleb128 0x5
 4190 09e7 03       		.byte	0x3
 4191 09e8 00000000 		.4byte	Capsense_sensorIndex
 4192 09ec 13       		.uleb128 0x13
 4193 09ed 77000000 		.4byte	0x77
 4194 09f1 FC090000 		.4byte	0x9fc
 4195 09f5 14       		.uleb128 0x14
 4196 09f6 C6000000 		.4byte	0xc6
 4197 09fa 00       		.byte	0
 4198 09fb 00       		.byte	0
 4199 09fc 12       		.uleb128 0x12
 4200 09fd 26060000 		.4byte	.LASF101
 4201 0a01 01       		.byte	0x1
 4202 0a02 31       		.byte	0x31
 4203 0a03 EC090000 		.4byte	0x9ec
 4204 0a07 05       		.uleb128 0x5
 4205 0a08 03       		.byte	0x3
 4206 0a09 00000000 		.4byte	Capsense_sensorRaw
 4207 0a0d 13       		.uleb128 0x13
 4208 0a0e 6B000000 		.4byte	0x6b
 4209 0a12 1D0A0000 		.4byte	0xa1d
 4210 0a16 14       		.uleb128 0x14
 4211 0a17 C6000000 		.4byte	0xc6
 4212 0a1b 00       		.byte	0
 4213 0a1c 00       		.byte	0
 4214 0a1d 12       		.uleb128 0x12
 4215 0a1e DA040000 		.4byte	.LASF102
 4216 0a22 01       		.byte	0x1
 4217 0a23 3B       		.byte	0x3b
 4218 0a24 0D0A0000 		.4byte	0xa0d
 4219 0a28 05       		.uleb128 0x5
 4220 0a29 03       		.byte	0x3
 4221 0a2a 00000000 		.4byte	Capsense_unscannedSnsDriveMode
 4222 0a2e 12       		.uleb128 0x12
 4223 0a2f BB080000 		.4byte	.LASF103
 4224 0a33 01       		.byte	0x1
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 115


 4225 0a34 3E       		.byte	0x3e
 4226 0a35 0D0A0000 		.4byte	0xa0d
 4227 0a39 05       		.uleb128 0x5
 4228 0a3a 03       		.byte	0x3
 4229 0a3b 00000000 		.4byte	Capsense_sensorEnableMaskBackup
 4230 0a3f 12       		.uleb128 0x12
 4231 0a40 49030000 		.4byte	.LASF104
 4232 0a44 01       		.byte	0x1
 4233 0a45 41       		.byte	0x41
 4234 0a46 0D0A0000 		.4byte	0xa0d
 4235 0a4a 05       		.uleb128 0x5
 4236 0a4b 03       		.byte	0x3
 4237 0a4c 00000000 		.4byte	Capsense_sensorEnableMask
 4238 0a50 12       		.uleb128 0x12
 4239 0a51 E5020000 		.4byte	.LASF105
 4240 0a55 01       		.byte	0x1
 4241 0a56 54       		.byte	0x54
 4242 0a57 0D0A0000 		.4byte	0xa0d
 4243 0a5b 05       		.uleb128 0x5
 4244 0a5c 03       		.byte	0x3
 4245 0a5d 00000000 		.4byte	Capsense_modulationIDAC
 4246 0a61 12       		.uleb128 0x12
 4247 0a62 EC080000 		.4byte	.LASF106
 4248 0a66 01       		.byte	0x1
 4249 0a67 57       		.byte	0x57
 4250 0a68 0D0A0000 		.4byte	0xa0d
 4251 0a6c 05       		.uleb128 0x5
 4252 0a6d 03       		.byte	0x3
 4253 0a6e 00000000 		.4byte	Capsense_compensationIDAC
 4254 0a72 13       		.uleb128 0x13
 4255 0a73 83000000 		.4byte	0x83
 4256 0a77 820A0000 		.4byte	0xa82
 4257 0a7b 14       		.uleb128 0x14
 4258 0a7c C6000000 		.4byte	0xc6
 4259 0a80 00       		.byte	0
 4260 0a81 00       		.byte	0
 4261 0a82 12       		.uleb128 0x12
 4262 0a83 E3000000 		.4byte	.LASF107
 4263 0a87 01       		.byte	0x1
 4264 0a88 5B       		.byte	0x5b
 4265 0a89 720A0000 		.4byte	0xa72
 4266 0a8d 05       		.uleb128 0x5
 4267 0a8e 03       		.byte	0x3
 4268 0a8f 00000000 		.4byte	Capsense_widgetResolution
 4269 0a93 12       		.uleb128 0x12
 4270 0a94 7A040000 		.4byte	.LASF108
 4271 0a98 01       		.byte	0x1
 4272 0a99 5F       		.byte	0x5f
 4273 0a9a 0D0A0000 		.4byte	0xa0d
 4274 0a9e 05       		.uleb128 0x5
 4275 0a9f 03       		.byte	0x3
 4276 0aa0 00000000 		.4byte	Capsense_senseClkDividerVal
 4277 0aa4 12       		.uleb128 0x12
 4278 0aa5 7C070000 		.4byte	.LASF109
 4279 0aa9 01       		.byte	0x1
 4280 0aaa 62       		.byte	0x62
 4281 0aab 0D0A0000 		.4byte	0xa0d
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 116


 4282 0aaf 05       		.uleb128 0x5
 4283 0ab0 03       		.byte	0x3
 4284 0ab1 00000000 		.4byte	Capsense_sampleClkDividerVal
 4285 0ab5 13       		.uleb128 0x13
 4286 0ab6 E0000000 		.4byte	0xe0
 4287 0aba C50A0000 		.4byte	0xac5
 4288 0abe 14       		.uleb128 0x14
 4289 0abf C6000000 		.4byte	0xc6
 4290 0ac3 00       		.byte	0
 4291 0ac4 00       		.byte	0
 4292 0ac5 12       		.uleb128 0x12
 4293 0ac6 03010000 		.4byte	.LASF110
 4294 0aca 01       		.byte	0x1
 4295 0acb 67       		.byte	0x67
 4296 0acc D60A0000 		.4byte	0xad6
 4297 0ad0 05       		.uleb128 0x5
 4298 0ad1 03       		.byte	0x3
 4299 0ad2 00000000 		.4byte	Capsense_widgetNumber
 4300 0ad6 07       		.uleb128 0x7
 4301 0ad7 B50A0000 		.4byte	0xab5
 4302 0adb 13       		.uleb128 0x13
 4303 0adc F10A0000 		.4byte	0xaf1
 4304 0ae0 EB0A0000 		.4byte	0xaeb
 4305 0ae4 14       		.uleb128 0x14
 4306 0ae5 C6000000 		.4byte	0xc6
 4307 0ae9 06       		.byte	0x6
 4308 0aea 00       		.byte	0
 4309 0aeb 06       		.uleb128 0x6
 4310 0aec 04       		.byte	0x4
 4311 0aed B5000000 		.4byte	0xb5
 4312 0af1 07       		.uleb128 0x7
 4313 0af2 EB0A0000 		.4byte	0xaeb
 4314 0af6 12       		.uleb128 0x12
 4315 0af7 98080000 		.4byte	.LASF111
 4316 0afb 01       		.byte	0x1
 4317 0afc 6B       		.byte	0x6b
 4318 0afd 070B0000 		.4byte	0xb07
 4319 0b01 05       		.uleb128 0x5
 4320 0b02 03       		.byte	0x3
 4321 0b03 00000000 		.4byte	Capsense_prtSelTbl
 4322 0b07 07       		.uleb128 0x7
 4323 0b08 DB0A0000 		.4byte	0xadb
 4324 0b0c 12       		.uleb128 0x12
 4325 0b0d A3000000 		.4byte	.LASF112
 4326 0b11 01       		.byte	0x1
 4327 0b12 75       		.byte	0x75
 4328 0b13 1D0B0000 		.4byte	0xb1d
 4329 0b17 05       		.uleb128 0x5
 4330 0b18 03       		.byte	0x3
 4331 0b19 00000000 		.4byte	Capsense_prtCfgTbl
 4332 0b1d 07       		.uleb128 0x7
 4333 0b1e DB0A0000 		.4byte	0xadb
 4334 0b22 12       		.uleb128 0x12
 4335 0b23 5C010000 		.4byte	.LASF113
 4336 0b27 01       		.byte	0x1
 4337 0b28 7F       		.byte	0x7f
 4338 0b29 330B0000 		.4byte	0xb33
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 117


 4339 0b2d 05       		.uleb128 0x5
 4340 0b2e 03       		.byte	0x3
 4341 0b2f 00000000 		.4byte	Capsense_prtDRTbl
 4342 0b33 07       		.uleb128 0x7
 4343 0b34 DB0A0000 		.4byte	0xadb
 4344 0b38 13       		.uleb128 0x13
 4345 0b39 EB0A0000 		.4byte	0xaeb
 4346 0b3d 480B0000 		.4byte	0xb48
 4347 0b41 14       		.uleb128 0x14
 4348 0b42 C6000000 		.4byte	0xc6
 4349 0b46 00       		.byte	0
 4350 0b47 00       		.byte	0
 4351 0b48 12       		.uleb128 0x12
 4352 0b49 14070000 		.4byte	.LASF114
 4353 0b4d 01       		.byte	0x1
 4354 0b4e 44       		.byte	0x44
 4355 0b4f 380B0000 		.4byte	0xb38
 4356 0b53 05       		.uleb128 0x5
 4357 0b54 03       		.byte	0x3
 4358 0b55 00000000 		.4byte	Capsense_pcTable
 4359 0b59 12       		.uleb128 0x12
 4360 0b5a 28020000 		.4byte	.LASF115
 4361 0b5e 01       		.byte	0x1
 4362 0b5f 48       		.byte	0x48
 4363 0b60 6A0B0000 		.4byte	0xb6a
 4364 0b64 05       		.uleb128 0x5
 4365 0b65 03       		.byte	0x3
 4366 0b66 00000000 		.4byte	Capsense_portTable
 4367 0b6a 07       		.uleb128 0x7
 4368 0b6b B50A0000 		.4byte	0xab5
 4369 0b6f 13       		.uleb128 0x13
 4370 0b70 7F0B0000 		.4byte	0xb7f
 4371 0b74 7F0B0000 		.4byte	0xb7f
 4372 0b78 14       		.uleb128 0x14
 4373 0b79 C6000000 		.4byte	0xc6
 4374 0b7d 00       		.byte	0
 4375 0b7e 00       		.byte	0
 4376 0b7f 07       		.uleb128 0x7
 4377 0b80 83000000 		.4byte	0x83
 4378 0b84 12       		.uleb128 0x12
 4379 0b85 67040000 		.4byte	.LASF116
 4380 0b89 01       		.byte	0x1
 4381 0b8a 4C       		.byte	0x4c
 4382 0b8b 950B0000 		.4byte	0xb95
 4383 0b8f 05       		.uleb128 0x5
 4384 0b90 03       		.byte	0x3
 4385 0b91 00000000 		.4byte	Capsense_maskTable
 4386 0b95 07       		.uleb128 0x7
 4387 0b96 6F0B0000 		.4byte	0xb6f
 4388 0b9a 12       		.uleb128 0x12
 4389 0b9b 9D010000 		.4byte	.LASF117
 4390 0b9f 01       		.byte	0x1
 4391 0ba0 50       		.byte	0x50
 4392 0ba1 AB0B0000 		.4byte	0xbab
 4393 0ba5 05       		.uleb128 0x5
 4394 0ba6 03       		.byte	0x3
 4395 0ba7 00000000 		.4byte	Capsense_pinShiftTbl
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 118


 4396 0bab 07       		.uleb128 0x7
 4397 0bac B50A0000 		.4byte	0xab5
 4398 0bb0 15       		.uleb128 0x15
 4399 0bb1 CA010000 		.4byte	.LASF118
 4400 0bb5 03       		.byte	0x3
 4401 0bb6 3A01     		.2byte	0x13a
 4402 0bb8 BC0B0000 		.4byte	0xbbc
 4403 0bbc 07       		.uleb128 0x7
 4404 0bbd B50A0000 		.4byte	0xab5
 4405 0bc1 15       		.uleb128 0x15
 4406 0bc2 EC050000 		.4byte	.LASF119
 4407 0bc6 03       		.byte	0x3
 4408 0bc7 3B01     		.2byte	0x13b
 4409 0bc9 CD0B0000 		.4byte	0xbcd
 4410 0bcd 07       		.uleb128 0x7
 4411 0bce B50A0000 		.4byte	0xab5
 4412 0bd2 12       		.uleb128 0x12
 4413 0bd3 72000000 		.4byte	.LASF120
 4414 0bd7 01       		.byte	0x1
 4415 0bd8 37       		.byte	0x37
 4416 0bd9 6B000000 		.4byte	0x6b
 4417 0bdd 05       		.uleb128 0x5
 4418 0bde 03       		.byte	0x3
 4419 0bdf 00000000 		.4byte	Capsense_csdTrim1
 4420 0be3 00       		.byte	0
 4421              		.section	.debug_abbrev,"",%progbits
 4422              	.Ldebug_abbrev0:
 4423 0000 01       		.uleb128 0x1
 4424 0001 11       		.uleb128 0x11
 4425 0002 01       		.byte	0x1
 4426 0003 25       		.uleb128 0x25
 4427 0004 0E       		.uleb128 0xe
 4428 0005 13       		.uleb128 0x13
 4429 0006 0B       		.uleb128 0xb
 4430 0007 03       		.uleb128 0x3
 4431 0008 0E       		.uleb128 0xe
 4432 0009 1B       		.uleb128 0x1b
 4433 000a 0E       		.uleb128 0xe
 4434 000b 55       		.uleb128 0x55
 4435 000c 17       		.uleb128 0x17
 4436 000d 11       		.uleb128 0x11
 4437 000e 01       		.uleb128 0x1
 4438 000f 10       		.uleb128 0x10
 4439 0010 17       		.uleb128 0x17
 4440 0011 00       		.byte	0
 4441 0012 00       		.byte	0
 4442 0013 02       		.uleb128 0x2
 4443 0014 24       		.uleb128 0x24
 4444 0015 00       		.byte	0
 4445 0016 0B       		.uleb128 0xb
 4446 0017 0B       		.uleb128 0xb
 4447 0018 3E       		.uleb128 0x3e
 4448 0019 0B       		.uleb128 0xb
 4449 001a 03       		.uleb128 0x3
 4450 001b 0E       		.uleb128 0xe
 4451 001c 00       		.byte	0
 4452 001d 00       		.byte	0
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 119


 4453 001e 03       		.uleb128 0x3
 4454 001f 24       		.uleb128 0x24
 4455 0020 00       		.byte	0
 4456 0021 0B       		.uleb128 0xb
 4457 0022 0B       		.uleb128 0xb
 4458 0023 3E       		.uleb128 0x3e
 4459 0024 0B       		.uleb128 0xb
 4460 0025 03       		.uleb128 0x3
 4461 0026 08       		.uleb128 0x8
 4462 0027 00       		.byte	0
 4463 0028 00       		.byte	0
 4464 0029 04       		.uleb128 0x4
 4465 002a 16       		.uleb128 0x16
 4466 002b 00       		.byte	0
 4467 002c 03       		.uleb128 0x3
 4468 002d 0E       		.uleb128 0xe
 4469 002e 3A       		.uleb128 0x3a
 4470 002f 0B       		.uleb128 0xb
 4471 0030 3B       		.uleb128 0x3b
 4472 0031 05       		.uleb128 0x5
 4473 0032 49       		.uleb128 0x49
 4474 0033 13       		.uleb128 0x13
 4475 0034 00       		.byte	0
 4476 0035 00       		.byte	0
 4477 0036 05       		.uleb128 0x5
 4478 0037 35       		.uleb128 0x35
 4479 0038 00       		.byte	0
 4480 0039 49       		.uleb128 0x49
 4481 003a 13       		.uleb128 0x13
 4482 003b 00       		.byte	0
 4483 003c 00       		.byte	0
 4484 003d 06       		.uleb128 0x6
 4485 003e 0F       		.uleb128 0xf
 4486 003f 00       		.byte	0
 4487 0040 0B       		.uleb128 0xb
 4488 0041 0B       		.uleb128 0xb
 4489 0042 49       		.uleb128 0x49
 4490 0043 13       		.uleb128 0x13
 4491 0044 00       		.byte	0
 4492 0045 00       		.byte	0
 4493 0046 07       		.uleb128 0x7
 4494 0047 26       		.uleb128 0x26
 4495 0048 00       		.byte	0
 4496 0049 49       		.uleb128 0x49
 4497 004a 13       		.uleb128 0x13
 4498 004b 00       		.byte	0
 4499 004c 00       		.byte	0
 4500 004d 08       		.uleb128 0x8
 4501 004e 2E       		.uleb128 0x2e
 4502 004f 01       		.byte	0x1
 4503 0050 3F       		.uleb128 0x3f
 4504 0051 19       		.uleb128 0x19
 4505 0052 03       		.uleb128 0x3
 4506 0053 0E       		.uleb128 0xe
 4507 0054 3A       		.uleb128 0x3a
 4508 0055 0B       		.uleb128 0xb
 4509 0056 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 120


 4510 0057 0B       		.uleb128 0xb
 4511 0058 27       		.uleb128 0x27
 4512 0059 19       		.uleb128 0x19
 4513 005a 11       		.uleb128 0x11
 4514 005b 01       		.uleb128 0x1
 4515 005c 12       		.uleb128 0x12
 4516 005d 06       		.uleb128 0x6
 4517 005e 40       		.uleb128 0x40
 4518 005f 18       		.uleb128 0x18
 4519 0060 9642     		.uleb128 0x2116
 4520 0062 19       		.uleb128 0x19
 4521 0063 01       		.uleb128 0x1
 4522 0064 13       		.uleb128 0x13
 4523 0065 00       		.byte	0
 4524 0066 00       		.byte	0
 4525 0067 09       		.uleb128 0x9
 4526 0068 34       		.uleb128 0x34
 4527 0069 00       		.byte	0
 4528 006a 03       		.uleb128 0x3
 4529 006b 0E       		.uleb128 0xe
 4530 006c 3A       		.uleb128 0x3a
 4531 006d 0B       		.uleb128 0xb
 4532 006e 3B       		.uleb128 0x3b
 4533 006f 0B       		.uleb128 0xb
 4534 0070 49       		.uleb128 0x49
 4535 0071 13       		.uleb128 0x13
 4536 0072 02       		.uleb128 0x2
 4537 0073 18       		.uleb128 0x18
 4538 0074 00       		.byte	0
 4539 0075 00       		.byte	0
 4540 0076 0A       		.uleb128 0xa
 4541 0077 2E       		.uleb128 0x2e
 4542 0078 01       		.byte	0x1
 4543 0079 3F       		.uleb128 0x3f
 4544 007a 19       		.uleb128 0x19
 4545 007b 03       		.uleb128 0x3
 4546 007c 0E       		.uleb128 0xe
 4547 007d 3A       		.uleb128 0x3a
 4548 007e 0B       		.uleb128 0xb
 4549 007f 3B       		.uleb128 0x3b
 4550 0080 05       		.uleb128 0x5
 4551 0081 27       		.uleb128 0x27
 4552 0082 19       		.uleb128 0x19
 4553 0083 11       		.uleb128 0x11
 4554 0084 01       		.uleb128 0x1
 4555 0085 12       		.uleb128 0x12
 4556 0086 06       		.uleb128 0x6
 4557 0087 40       		.uleb128 0x40
 4558 0088 18       		.uleb128 0x18
 4559 0089 9642     		.uleb128 0x2116
 4560 008b 19       		.uleb128 0x19
 4561 008c 01       		.uleb128 0x1
 4562 008d 13       		.uleb128 0x13
 4563 008e 00       		.byte	0
 4564 008f 00       		.byte	0
 4565 0090 0B       		.uleb128 0xb
 4566 0091 34       		.uleb128 0x34
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 121


 4567 0092 00       		.byte	0
 4568 0093 03       		.uleb128 0x3
 4569 0094 0E       		.uleb128 0xe
 4570 0095 3A       		.uleb128 0x3a
 4571 0096 0B       		.uleb128 0xb
 4572 0097 3B       		.uleb128 0x3b
 4573 0098 05       		.uleb128 0x5
 4574 0099 49       		.uleb128 0x49
 4575 009a 13       		.uleb128 0x13
 4576 009b 02       		.uleb128 0x2
 4577 009c 18       		.uleb128 0x18
 4578 009d 00       		.byte	0
 4579 009e 00       		.byte	0
 4580 009f 0C       		.uleb128 0xc
 4581 00a0 2E       		.uleb128 0x2e
 4582 00a1 00       		.byte	0
 4583 00a2 3F       		.uleb128 0x3f
 4584 00a3 19       		.uleb128 0x19
 4585 00a4 03       		.uleb128 0x3
 4586 00a5 0E       		.uleb128 0xe
 4587 00a6 3A       		.uleb128 0x3a
 4588 00a7 0B       		.uleb128 0xb
 4589 00a8 3B       		.uleb128 0x3b
 4590 00a9 05       		.uleb128 0x5
 4591 00aa 27       		.uleb128 0x27
 4592 00ab 19       		.uleb128 0x19
 4593 00ac 11       		.uleb128 0x11
 4594 00ad 01       		.uleb128 0x1
 4595 00ae 12       		.uleb128 0x12
 4596 00af 06       		.uleb128 0x6
 4597 00b0 40       		.uleb128 0x40
 4598 00b1 18       		.uleb128 0x18
 4599 00b2 9642     		.uleb128 0x2116
 4600 00b4 19       		.uleb128 0x19
 4601 00b5 00       		.byte	0
 4602 00b6 00       		.byte	0
 4603 00b7 0D       		.uleb128 0xd
 4604 00b8 2E       		.uleb128 0x2e
 4605 00b9 01       		.byte	0x1
 4606 00ba 3F       		.uleb128 0x3f
 4607 00bb 19       		.uleb128 0x19
 4608 00bc 03       		.uleb128 0x3
 4609 00bd 0E       		.uleb128 0xe
 4610 00be 3A       		.uleb128 0x3a
 4611 00bf 0B       		.uleb128 0xb
 4612 00c0 3B       		.uleb128 0x3b
 4613 00c1 05       		.uleb128 0x5
 4614 00c2 27       		.uleb128 0x27
 4615 00c3 19       		.uleb128 0x19
 4616 00c4 49       		.uleb128 0x49
 4617 00c5 13       		.uleb128 0x13
 4618 00c6 11       		.uleb128 0x11
 4619 00c7 01       		.uleb128 0x1
 4620 00c8 12       		.uleb128 0x12
 4621 00c9 06       		.uleb128 0x6
 4622 00ca 40       		.uleb128 0x40
 4623 00cb 18       		.uleb128 0x18
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 122


 4624 00cc 9642     		.uleb128 0x2116
 4625 00ce 19       		.uleb128 0x19
 4626 00cf 01       		.uleb128 0x1
 4627 00d0 13       		.uleb128 0x13
 4628 00d1 00       		.byte	0
 4629 00d2 00       		.byte	0
 4630 00d3 0E       		.uleb128 0xe
 4631 00d4 05       		.uleb128 0x5
 4632 00d5 00       		.byte	0
 4633 00d6 03       		.uleb128 0x3
 4634 00d7 0E       		.uleb128 0xe
 4635 00d8 3A       		.uleb128 0x3a
 4636 00d9 0B       		.uleb128 0xb
 4637 00da 3B       		.uleb128 0x3b
 4638 00db 05       		.uleb128 0x5
 4639 00dc 49       		.uleb128 0x49
 4640 00dd 13       		.uleb128 0x13
 4641 00de 02       		.uleb128 0x2
 4642 00df 18       		.uleb128 0x18
 4643 00e0 00       		.byte	0
 4644 00e1 00       		.byte	0
 4645 00e2 0F       		.uleb128 0xf
 4646 00e3 2E       		.uleb128 0x2e
 4647 00e4 00       		.byte	0
 4648 00e5 3F       		.uleb128 0x3f
 4649 00e6 19       		.uleb128 0x19
 4650 00e7 03       		.uleb128 0x3
 4651 00e8 0E       		.uleb128 0xe
 4652 00e9 3A       		.uleb128 0x3a
 4653 00ea 0B       		.uleb128 0xb
 4654 00eb 3B       		.uleb128 0x3b
 4655 00ec 05       		.uleb128 0x5
 4656 00ed 27       		.uleb128 0x27
 4657 00ee 19       		.uleb128 0x19
 4658 00ef 49       		.uleb128 0x49
 4659 00f0 13       		.uleb128 0x13
 4660 00f1 11       		.uleb128 0x11
 4661 00f2 01       		.uleb128 0x1
 4662 00f3 12       		.uleb128 0x12
 4663 00f4 06       		.uleb128 0x6
 4664 00f5 40       		.uleb128 0x40
 4665 00f6 18       		.uleb128 0x18
 4666 00f7 9742     		.uleb128 0x2117
 4667 00f9 19       		.uleb128 0x19
 4668 00fa 00       		.byte	0
 4669 00fb 00       		.byte	0
 4670 00fc 10       		.uleb128 0x10
 4671 00fd 2E       		.uleb128 0x2e
 4672 00fe 01       		.byte	0x1
 4673 00ff 3F       		.uleb128 0x3f
 4674 0100 19       		.uleb128 0x19
 4675 0101 03       		.uleb128 0x3
 4676 0102 0E       		.uleb128 0xe
 4677 0103 3A       		.uleb128 0x3a
 4678 0104 0B       		.uleb128 0xb
 4679 0105 3B       		.uleb128 0x3b
 4680 0106 05       		.uleb128 0x5
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 123


 4681 0107 27       		.uleb128 0x27
 4682 0108 19       		.uleb128 0x19
 4683 0109 49       		.uleb128 0x49
 4684 010a 13       		.uleb128 0x13
 4685 010b 11       		.uleb128 0x11
 4686 010c 01       		.uleb128 0x1
 4687 010d 12       		.uleb128 0x12
 4688 010e 06       		.uleb128 0x6
 4689 010f 40       		.uleb128 0x40
 4690 0110 18       		.uleb128 0x18
 4691 0111 9742     		.uleb128 0x2117
 4692 0113 19       		.uleb128 0x19
 4693 0114 01       		.uleb128 0x1
 4694 0115 13       		.uleb128 0x13
 4695 0116 00       		.byte	0
 4696 0117 00       		.byte	0
 4697 0118 11       		.uleb128 0x11
 4698 0119 2E       		.uleb128 0x2e
 4699 011a 01       		.byte	0x1
 4700 011b 3F       		.uleb128 0x3f
 4701 011c 19       		.uleb128 0x19
 4702 011d 03       		.uleb128 0x3
 4703 011e 0E       		.uleb128 0xe
 4704 011f 3A       		.uleb128 0x3a
 4705 0120 0B       		.uleb128 0xb
 4706 0121 3B       		.uleb128 0x3b
 4707 0122 05       		.uleb128 0x5
 4708 0123 27       		.uleb128 0x27
 4709 0124 19       		.uleb128 0x19
 4710 0125 11       		.uleb128 0x11
 4711 0126 01       		.uleb128 0x1
 4712 0127 12       		.uleb128 0x12
 4713 0128 06       		.uleb128 0x6
 4714 0129 40       		.uleb128 0x40
 4715 012a 18       		.uleb128 0x18
 4716 012b 9742     		.uleb128 0x2117
 4717 012d 19       		.uleb128 0x19
 4718 012e 01       		.uleb128 0x1
 4719 012f 13       		.uleb128 0x13
 4720 0130 00       		.byte	0
 4721 0131 00       		.byte	0
 4722 0132 12       		.uleb128 0x12
 4723 0133 34       		.uleb128 0x34
 4724 0134 00       		.byte	0
 4725 0135 03       		.uleb128 0x3
 4726 0136 0E       		.uleb128 0xe
 4727 0137 3A       		.uleb128 0x3a
 4728 0138 0B       		.uleb128 0xb
 4729 0139 3B       		.uleb128 0x3b
 4730 013a 0B       		.uleb128 0xb
 4731 013b 49       		.uleb128 0x49
 4732 013c 13       		.uleb128 0x13
 4733 013d 3F       		.uleb128 0x3f
 4734 013e 19       		.uleb128 0x19
 4735 013f 02       		.uleb128 0x2
 4736 0140 18       		.uleb128 0x18
 4737 0141 00       		.byte	0
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 124


 4738 0142 00       		.byte	0
 4739 0143 13       		.uleb128 0x13
 4740 0144 01       		.uleb128 0x1
 4741 0145 01       		.byte	0x1
 4742 0146 49       		.uleb128 0x49
 4743 0147 13       		.uleb128 0x13
 4744 0148 01       		.uleb128 0x1
 4745 0149 13       		.uleb128 0x13
 4746 014a 00       		.byte	0
 4747 014b 00       		.byte	0
 4748 014c 14       		.uleb128 0x14
 4749 014d 21       		.uleb128 0x21
 4750 014e 00       		.byte	0
 4751 014f 49       		.uleb128 0x49
 4752 0150 13       		.uleb128 0x13
 4753 0151 2F       		.uleb128 0x2f
 4754 0152 0B       		.uleb128 0xb
 4755 0153 00       		.byte	0
 4756 0154 00       		.byte	0
 4757 0155 15       		.uleb128 0x15
 4758 0156 34       		.uleb128 0x34
 4759 0157 00       		.byte	0
 4760 0158 03       		.uleb128 0x3
 4761 0159 0E       		.uleb128 0xe
 4762 015a 3A       		.uleb128 0x3a
 4763 015b 0B       		.uleb128 0xb
 4764 015c 3B       		.uleb128 0x3b
 4765 015d 05       		.uleb128 0x5
 4766 015e 49       		.uleb128 0x49
 4767 015f 13       		.uleb128 0x13
 4768 0160 3F       		.uleb128 0x3f
 4769 0161 19       		.uleb128 0x19
 4770 0162 3C       		.uleb128 0x3c
 4771 0163 19       		.uleb128 0x19
 4772 0164 00       		.byte	0
 4773 0165 00       		.byte	0
 4774 0166 00       		.byte	0
 4775              		.section	.debug_aranges,"",%progbits
 4776 0000 54010000 		.4byte	0x154
 4777 0004 0200     		.2byte	0x2
 4778 0006 00000000 		.4byte	.Ldebug_info0
 4779 000a 04       		.byte	0x4
 4780 000b 00       		.byte	0
 4781 000c 0000     		.2byte	0
 4782 000e 0000     		.2byte	0
 4783 0010 00000000 		.4byte	.LFB36
 4784 0014 38000000 		.4byte	.LFE36-.LFB36
 4785 0018 00000000 		.4byte	.LFB37
 4786 001c BC000000 		.4byte	.LFE37-.LFB37
 4787 0020 00000000 		.4byte	.LFB38
 4788 0024 54000000 		.4byte	.LFE38-.LFB38
 4789 0028 00000000 		.4byte	.LFB39
 4790 002c F0000000 		.4byte	.LFE39-.LFB39
 4791 0030 00000000 		.4byte	.LFB40
 4792 0034 38000000 		.4byte	.LFE40-.LFB40
 4793 0038 00000000 		.4byte	.LFB41
 4794 003c 4C000000 		.4byte	.LFE41-.LFB41
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 125


 4795 0040 00000000 		.4byte	.LFB42
 4796 0044 34000000 		.4byte	.LFE42-.LFB42
 4797 0048 00000000 		.4byte	.LFB43
 4798 004c DC000000 		.4byte	.LFE43-.LFB43
 4799 0050 00000000 		.4byte	.LFB44
 4800 0054 58000000 		.4byte	.LFE44-.LFB44
 4801 0058 00000000 		.4byte	.LFB45
 4802 005c 1C000000 		.4byte	.LFE45-.LFB45
 4803 0060 00000000 		.4byte	.LFB46
 4804 0064 1C000000 		.4byte	.LFE46-.LFB46
 4805 0068 00000000 		.4byte	.LFB47
 4806 006c 28000000 		.4byte	.LFE47-.LFB47
 4807 0070 00000000 		.4byte	.LFB48
 4808 0074 20000000 		.4byte	.LFE48-.LFB48
 4809 0078 00000000 		.4byte	.LFB49
 4810 007c 1C000000 		.4byte	.LFE49-.LFB49
 4811 0080 00000000 		.4byte	.LFB50
 4812 0084 28000000 		.4byte	.LFE50-.LFB50
 4813 0088 00000000 		.4byte	.LFB51
 4814 008c B0000000 		.4byte	.LFE51-.LFB51
 4815 0090 00000000 		.4byte	.LFB52
 4816 0094 FC000000 		.4byte	.LFE52-.LFB52
 4817 0098 00000000 		.4byte	.LFB53
 4818 009c 52000000 		.4byte	.LFE53-.LFB53
 4819 00a0 00000000 		.4byte	.LFB54
 4820 00a4 34000000 		.4byte	.LFE54-.LFB54
 4821 00a8 00000000 		.4byte	.LFB55
 4822 00ac 58000000 		.4byte	.LFE55-.LFB55
 4823 00b0 00000000 		.4byte	.LFB56
 4824 00b4 48010000 		.4byte	.LFE56-.LFB56
 4825 00b8 00000000 		.4byte	.LFB57
 4826 00bc 74000000 		.4byte	.LFE57-.LFB57
 4827 00c0 00000000 		.4byte	.LFB58
 4828 00c4 7C000000 		.4byte	.LFE58-.LFB58
 4829 00c8 00000000 		.4byte	.LFB59
 4830 00cc 34000000 		.4byte	.LFE59-.LFB59
 4831 00d0 00000000 		.4byte	.LFB60
 4832 00d4 2C000000 		.4byte	.LFE60-.LFB60
 4833 00d8 00000000 		.4byte	.LFB61
 4834 00dc 44000000 		.4byte	.LFE61-.LFB61
 4835 00e0 00000000 		.4byte	.LFB62
 4836 00e4 6A000000 		.4byte	.LFE62-.LFB62
 4837 00e8 00000000 		.4byte	.LFB63
 4838 00ec 1C000000 		.4byte	.LFE63-.LFB63
 4839 00f0 00000000 		.4byte	.LFB64
 4840 00f4 24000000 		.4byte	.LFE64-.LFB64
 4841 00f8 00000000 		.4byte	.LFB65
 4842 00fc 1C000000 		.4byte	.LFE65-.LFB65
 4843 0100 00000000 		.4byte	.LFB66
 4844 0104 24000000 		.4byte	.LFE66-.LFB66
 4845 0108 00000000 		.4byte	.LFB67
 4846 010c 1C000000 		.4byte	.LFE67-.LFB67
 4847 0110 00000000 		.4byte	.LFB68
 4848 0114 24000000 		.4byte	.LFE68-.LFB68
 4849 0118 00000000 		.4byte	.LFB69
 4850 011c 1C000000 		.4byte	.LFE69-.LFB69
 4851 0120 00000000 		.4byte	.LFB70
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 126


 4852 0124 24000000 		.4byte	.LFE70-.LFB70
 4853 0128 00000000 		.4byte	.LFB71
 4854 012c 20000000 		.4byte	.LFE71-.LFB71
 4855 0130 00000000 		.4byte	.LFB72
 4856 0134 3C000000 		.4byte	.LFE72-.LFB72
 4857 0138 00000000 		.4byte	.LFB73
 4858 013c 50000000 		.4byte	.LFE73-.LFB73
 4859 0140 00000000 		.4byte	.LFB74
 4860 0144 9A000000 		.4byte	.LFE74-.LFB74
 4861 0148 00000000 		.4byte	.LFB75
 4862 014c 24000000 		.4byte	.LFE75-.LFB75
 4863 0150 00000000 		.4byte	0
 4864 0154 00000000 		.4byte	0
 4865              		.section	.debug_ranges,"",%progbits
 4866              	.Ldebug_ranges0:
 4867 0000 00000000 		.4byte	.LFB36
 4868 0004 38000000 		.4byte	.LFE36
 4869 0008 00000000 		.4byte	.LFB37
 4870 000c BC000000 		.4byte	.LFE37
 4871 0010 00000000 		.4byte	.LFB38
 4872 0014 54000000 		.4byte	.LFE38
 4873 0018 00000000 		.4byte	.LFB39
 4874 001c F0000000 		.4byte	.LFE39
 4875 0020 00000000 		.4byte	.LFB40
 4876 0024 38000000 		.4byte	.LFE40
 4877 0028 00000000 		.4byte	.LFB41
 4878 002c 4C000000 		.4byte	.LFE41
 4879 0030 00000000 		.4byte	.LFB42
 4880 0034 34000000 		.4byte	.LFE42
 4881 0038 00000000 		.4byte	.LFB43
 4882 003c DC000000 		.4byte	.LFE43
 4883 0040 00000000 		.4byte	.LFB44
 4884 0044 58000000 		.4byte	.LFE44
 4885 0048 00000000 		.4byte	.LFB45
 4886 004c 1C000000 		.4byte	.LFE45
 4887 0050 00000000 		.4byte	.LFB46
 4888 0054 1C000000 		.4byte	.LFE46
 4889 0058 00000000 		.4byte	.LFB47
 4890 005c 28000000 		.4byte	.LFE47
 4891 0060 00000000 		.4byte	.LFB48
 4892 0064 20000000 		.4byte	.LFE48
 4893 0068 00000000 		.4byte	.LFB49
 4894 006c 1C000000 		.4byte	.LFE49
 4895 0070 00000000 		.4byte	.LFB50
 4896 0074 28000000 		.4byte	.LFE50
 4897 0078 00000000 		.4byte	.LFB51
 4898 007c B0000000 		.4byte	.LFE51
 4899 0080 00000000 		.4byte	.LFB52
 4900 0084 FC000000 		.4byte	.LFE52
 4901 0088 00000000 		.4byte	.LFB53
 4902 008c 52000000 		.4byte	.LFE53
 4903 0090 00000000 		.4byte	.LFB54
 4904 0094 34000000 		.4byte	.LFE54
 4905 0098 00000000 		.4byte	.LFB55
 4906 009c 58000000 		.4byte	.LFE55
 4907 00a0 00000000 		.4byte	.LFB56
 4908 00a4 48010000 		.4byte	.LFE56
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 127


 4909 00a8 00000000 		.4byte	.LFB57
 4910 00ac 74000000 		.4byte	.LFE57
 4911 00b0 00000000 		.4byte	.LFB58
 4912 00b4 7C000000 		.4byte	.LFE58
 4913 00b8 00000000 		.4byte	.LFB59
 4914 00bc 34000000 		.4byte	.LFE59
 4915 00c0 00000000 		.4byte	.LFB60
 4916 00c4 2C000000 		.4byte	.LFE60
 4917 00c8 00000000 		.4byte	.LFB61
 4918 00cc 44000000 		.4byte	.LFE61
 4919 00d0 00000000 		.4byte	.LFB62
 4920 00d4 6A000000 		.4byte	.LFE62
 4921 00d8 00000000 		.4byte	.LFB63
 4922 00dc 1C000000 		.4byte	.LFE63
 4923 00e0 00000000 		.4byte	.LFB64
 4924 00e4 24000000 		.4byte	.LFE64
 4925 00e8 00000000 		.4byte	.LFB65
 4926 00ec 1C000000 		.4byte	.LFE65
 4927 00f0 00000000 		.4byte	.LFB66
 4928 00f4 24000000 		.4byte	.LFE66
 4929 00f8 00000000 		.4byte	.LFB67
 4930 00fc 1C000000 		.4byte	.LFE67
 4931 0100 00000000 		.4byte	.LFB68
 4932 0104 24000000 		.4byte	.LFE68
 4933 0108 00000000 		.4byte	.LFB69
 4934 010c 1C000000 		.4byte	.LFE69
 4935 0110 00000000 		.4byte	.LFB70
 4936 0114 24000000 		.4byte	.LFE70
 4937 0118 00000000 		.4byte	.LFB71
 4938 011c 20000000 		.4byte	.LFE71
 4939 0120 00000000 		.4byte	.LFB72
 4940 0124 3C000000 		.4byte	.LFE72
 4941 0128 00000000 		.4byte	.LFB73
 4942 012c 50000000 		.4byte	.LFE73
 4943 0130 00000000 		.4byte	.LFB74
 4944 0134 9A000000 		.4byte	.LFE74
 4945 0138 00000000 		.4byte	.LFB75
 4946 013c 24000000 		.4byte	.LFE75
 4947 0140 00000000 		.4byte	0
 4948 0144 00000000 		.4byte	0
 4949              		.section	.debug_line,"",%progbits
 4950              	.Ldebug_line0:
 4951 0000 F8040000 		.section	.debug_str,"MS",%progbits,1
 4951      02005800 
 4951      00000201 
 4951      FB0E0D00 
 4951      01010101 
 4952              	.LASF20:
 4953 0000 43617073 		.ascii	"Capsense_CsdHwBlockInit\000"
 4953      656E7365 
 4953      5F437364 
 4953      4877426C 
 4953      6F636B49 
 4954              	.LASF61:
 4955 0018 706F7274 		.ascii	"portNumber\000"
 4955      4E756D62 
 4955      657200
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 128


 4956              	.LASF25:
 4957 0023 43617073 		.ascii	"Capsense_initVar\000"
 4957      656E7365 
 4957      5F696E69 
 4957      74566172 
 4957      00
 4958              	.LASF38:
 4959 0034 43617073 		.ascii	"Capsense_ReadSensorRaw\000"
 4959      656E7365 
 4959      5F526561 
 4959      6453656E 
 4959      736F7252 
 4960              	.LASF92:
 4961 004b 63757253 		.ascii	"curSample\000"
 4961      616D706C 
 4961      6500
 4962              	.LASF13:
 4963 0055 646F7562 		.ascii	"double\000"
 4963      6C6500
 4964              	.LASF88:
 4965 005c 43617073 		.ascii	"Capsense_GetIDACRange\000"
 4965      656E7365 
 4965      5F476574 
 4965      49444143 
 4965      52616E67 
 4966              	.LASF120:
 4967 0072 43617073 		.ascii	"Capsense_csdTrim1\000"
 4967      656E7365 
 4967      5F637364 
 4967      5472696D 
 4967      3100
 4968              	.LASF74:
 4969 0084 656E4D61 		.ascii	"enMask\000"
 4969      736B00
 4970              	.LASF93:
 4971 008b 61766756 		.ascii	"avgVal\000"
 4971      616C00
 4972              	.LASF2:
 4973 0092 73686F72 		.ascii	"short int\000"
 4973      7420696E 
 4973      7400
 4974              	.LASF31:
 4975 009c 73656E73 		.ascii	"sensor\000"
 4975      6F7200
 4976              	.LASF112:
 4977 00a3 43617073 		.ascii	"Capsense_prtCfgTbl\000"
 4977      656E7365 
 4977      5F707274 
 4977      43666754 
 4977      626C00
 4978              	.LASF91:
 4979 00b6 43617073 		.ascii	"Capsense_GetSensorRaw\000"
 4979      656E7365 
 4979      5F476574 
 4979      53656E73 
 4979      6F725261 
 4980              	.LASF51:
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 129


 4981 00cc 43617073 		.ascii	"Capsense_DisableSensor\000"
 4981      656E7365 
 4981      5F446973 
 4981      61626C65 
 4981      53656E73 
 4982              	.LASF107:
 4983 00e3 43617073 		.ascii	"Capsense_widgetResolution\000"
 4983      656E7365 
 4983      5F776964 
 4983      67657452 
 4983      65736F6C 
 4984              	.LASF67:
 4985 00fd 64656C61 		.ascii	"delay\000"
 4985      7900
 4986              	.LASF110:
 4987 0103 43617073 		.ascii	"Capsense_widgetNumber\000"
 4987      656E7365 
 4987      5F776964 
 4987      6765744E 
 4987      756D6265 
 4988              	.LASF87:
 4989 0119 636F6D70 		.ascii	"compIdacValue\000"
 4989      49646163 
 4989      56616C75 
 4989      6500
 4990              	.LASF97:
 4991 0127 72617744 		.ascii	"rawData\000"
 4991      61746100 
 4992              	.LASF79:
 4993 012f 43617073 		.ascii	"Capsense_GetModulatorClkDivider\000"
 4993      656E7365 
 4993      5F476574 
 4993      4D6F6475 
 4993      6C61746F 
 4994              	.LASF40:
 4995 014f 76616C75 		.ascii	"value\000"
 4995      6500
 4996              	.LASF10:
 4997 0155 75696E74 		.ascii	"uint16\000"
 4997      313600
 4998              	.LASF113:
 4999 015c 43617073 		.ascii	"Capsense_prtDRTbl\000"
 4999      656E7365 
 4999      5F707274 
 4999      44525462 
 4999      6C00
 5000              	.LASF46:
 5001 016e 70696E4D 		.ascii	"pinModeShift\000"
 5001      6F646553 
 5001      68696674 
 5001      00
 5002              	.LASF75:
 5003 017b 43617073 		.ascii	"Capsense_SetBitValue\000"
 5003      656E7365 
 5003      5F536574 
 5003      42697456 
 5003      616C7565 
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 130


 5004              	.LASF27:
 5005 0190 77696467 		.ascii	"widget\000"
 5005      657400
 5006              	.LASF9:
 5007 0197 75696E74 		.ascii	"uint8\000"
 5007      3800
 5008              	.LASF117:
 5009 019d 43617073 		.ascii	"Capsense_pinShiftTbl\000"
 5009      656E7365 
 5009      5F70696E 
 5009      53686966 
 5009      7454626C 
 5010              	.LASF71:
 5011 01b2 7461626C 		.ascii	"table\000"
 5011      6500
 5012              	.LASF63:
 5013 01b8 636F756E 		.ascii	"counterResolution\000"
 5013      74657252 
 5013      65736F6C 
 5013      7574696F 
 5013      6E00
 5014              	.LASF118:
 5015 01ca 43617073 		.ascii	"Capsense_rawDataIndex\000"
 5015      656E7365 
 5015      5F726177 
 5015      44617461 
 5015      496E6465 
 5016              	.LASF37:
 5017 01e0 43617073 		.ascii	"Capsense_FindNextSensor\000"
 5017      656E7365 
 5017      5F46696E 
 5017      644E6578 
 5017      7453656E 
 5018              	.LASF95:
 5019 01f8 69646163 		.ascii	"idacLevelsTbl\000"
 5019      4C657665 
 5019      6C735462 
 5019      6C00
 5020              	.LASF36:
 5021 0206 43617073 		.ascii	"Capsense_ScanEnabledWidgets\000"
 5021      656E7365 
 5021      5F536361 
 5021      6E456E61 
 5021      626C6564 
 5022              	.LASF12:
 5023 0222 666C6F61 		.ascii	"float\000"
 5023      7400
 5024              	.LASF115:
 5025 0228 43617073 		.ascii	"Capsense_portTable\000"
 5025      656E7365 
 5025      5F706F72 
 5025      74546162 
 5025      6C6500
 5026              	.LASF76:
 5027 023b 43617073 		.ascii	"Capsense_GetSenseClkDivider\000"
 5027      656E7365 
 5027      5F476574 
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 131


 5027      53656E73 
 5027      65436C6B 
 5028              	.LASF39:
 5029 0257 43617073 		.ascii	"Capsense_WriteSensorRaw\000"
 5029      656E7365 
 5029      5F577269 
 5029      74655365 
 5029      6E736F72 
 5030              	.LASF53:
 5031 026f 73656E73 		.ascii	"sensorState\000"
 5031      6F725374 
 5031      61746500 
 5032              	.LASF6:
 5033 027b 6C6F6E67 		.ascii	"long long int\000"
 5033      206C6F6E 
 5033      6720696E 
 5033      7400
 5034              	.LASF84:
 5035 0289 6D6F6449 		.ascii	"modIdacValue\000"
 5035      64616356 
 5035      616C7565 
 5035      00
 5036              	.LASF83:
 5037 0296 43617073 		.ascii	"Capsense_SetModulationIDAC\000"
 5037      656E7365 
 5037      5F536574 
 5037      4D6F6475 
 5037      6C617469 
 5038              	.LASF19:
 5039 02b1 43617073 		.ascii	"Capsense_Init\000"
 5039      656E7365 
 5039      5F496E69 
 5039      7400
 5040              	.LASF54:
 5041 02bf 43617073 		.ascii	"Capsense_SetDriveModeAllPins\000"
 5041      656E7365 
 5041      5F536574 
 5041      44726976 
 5041      654D6F64 
 5042              	.LASF4:
 5043 02dc 6C6F6E67 		.ascii	"long int\000"
 5043      20696E74 
 5043      00
 5044              	.LASF105:
 5045 02e5 43617073 		.ascii	"Capsense_modulationIDAC\000"
 5045      656E7365 
 5045      5F6D6F64 
 5045      756C6174 
 5045      696F6E49 
 5046              	.LASF100:
 5047 02fd 43617073 		.ascii	"Capsense_sensorIndex\000"
 5047      656E7365 
 5047      5F73656E 
 5047      736F7249 
 5047      6E646578 
 5048              	.LASF65:
 5049 0312 43617073 		.ascii	"Capsense_EnableShieldElectrode\000"
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 132


 5049      656E7365 
 5049      5F456E61 
 5049      626C6553 
 5049      6869656C 
 5050              	.LASF66:
 5051 0331 43617073 		.ascii	"Capsense_SetShieldDelay\000"
 5051      656E7365 
 5051      5F536574 
 5051      53686965 
 5051      6C644465 
 5052              	.LASF104:
 5053 0349 43617073 		.ascii	"Capsense_sensorEnableMask\000"
 5053      656E7365 
 5053      5F73656E 
 5053      736F7245 
 5053      6E61626C 
 5054              	.LASF121:
 5055 0363 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5055      43313120 
 5055      352E342E 
 5055      31203230 
 5055      31363036 
 5056 0396 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 5056      20726576 
 5056      6973696F 
 5056      6E203233 
 5056      37373135 
 5057 03c9 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 5057      66756E63 
 5057      74696F6E 
 5057      2D736563 
 5057      74696F6E 
 5058              	.LASF1:
 5059 03f1 756E7369 		.ascii	"unsigned char\000"
 5059      676E6564 
 5059      20636861 
 5059      7200
 5060              	.LASF56:
 5061 03ff 7072744E 		.ascii	"prtNumberTmp\000"
 5061      756D6265 
 5061      72546D70 
 5061      00
 5062              	.LASF62:
 5063 040c 43617073 		.ascii	"Capsense_PreScan\000"
 5063      656E7365 
 5063      5F507265 
 5063      5363616E 
 5063      00
 5064              	.LASF72:
 5065 041d 706F7369 		.ascii	"position\000"
 5065      74696F6E 
 5065      00
 5066              	.LASF18:
 5067 0426 6C6F6E67 		.ascii	"long double\000"
 5067      20646F75 
 5067      626C6500 
 5068              	.LASF89:
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 133


 5069 0432 43617073 		.ascii	"Capsense_SetIDACRange\000"
 5069      656E7365 
 5069      5F536574 
 5069      49444143 
 5069      52616E67 
 5070              	.LASF23:
 5071 0448 43617073 		.ascii	"Capsense_Enable\000"
 5071      656E7365 
 5071      5F456E61 
 5071      626C6500 
 5072              	.LASF24:
 5073 0458 43617073 		.ascii	"Capsense_Start\000"
 5073      656E7365 
 5073      5F537461 
 5073      727400
 5074              	.LASF116:
 5075 0467 43617073 		.ascii	"Capsense_maskTable\000"
 5075      656E7365 
 5075      5F6D6173 
 5075      6B546162 
 5075      6C6500
 5076              	.LASF108:
 5077 047a 43617073 		.ascii	"Capsense_senseClkDividerVal\000"
 5077      656E7365 
 5077      5F73656E 
 5077      7365436C 
 5077      6B446976 
 5078              	.LASF0:
 5079 0496 7369676E 		.ascii	"signed char\000"
 5079      65642063 
 5079      68617200 
 5080              	.LASF58:
 5081 04a2 43617073 		.ascii	"Capsense_RestoreDriveModeAllPins\000"
 5081      656E7365 
 5081      5F526573 
 5081      746F7265 
 5081      44726976 
 5082              	.LASF7:
 5083 04c3 6C6F6E67 		.ascii	"long long unsigned int\000"
 5083      206C6F6E 
 5083      6720756E 
 5083      7369676E 
 5083      65642069 
 5084              	.LASF102:
 5085 04da 43617073 		.ascii	"Capsense_unscannedSnsDriveMode\000"
 5085      656E7365 
 5085      5F756E73 
 5085      63616E6E 
 5085      6564536E 
 5086              	.LASF122:
 5087 04f9 47656E65 		.ascii	"Generated_Source\\PSoC4\\Capsense.c\000"
 5087      72617465 
 5087      645F536F 
 5087      75726365 
 5087      5C50536F 
 5088              	.LASF8:
 5089 051b 756E7369 		.ascii	"unsigned int\000"
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 134


 5089      676E6564 
 5089      20696E74 
 5089      00
 5090              	.LASF22:
 5091 0528 6E657752 		.ascii	"newRegValue\000"
 5091      65675661 
 5091      6C756500 
 5092              	.LASF30:
 5093 0534 736E7349 		.ascii	"snsIndex\000"
 5093      6E646578 
 5093      00
 5094              	.LASF5:
 5095 053d 6C6F6E67 		.ascii	"long unsigned int\000"
 5095      20756E73 
 5095      69676E65 
 5095      6420696E 
 5095      7400
 5096              	.LASF86:
 5097 054f 43617073 		.ascii	"Capsense_SetCompensationIDAC\000"
 5097      656E7365 
 5097      5F536574 
 5097      436F6D70 
 5097      656E7361 
 5098              	.LASF52:
 5099 056c 696E6163 		.ascii	"inactiveConnect\000"
 5099      74697665 
 5099      436F6E6E 
 5099      65637400 
 5100              	.LASF59:
 5101 057c 43617073 		.ascii	"Capsense_SetPinDriveMode\000"
 5101      656E7365 
 5101      5F536574 
 5101      50696E44 
 5101      72697665 
 5102              	.LASF3:
 5103 0595 73686F72 		.ascii	"short unsigned int\000"
 5103      7420756E 
 5103      7369676E 
 5103      65642069 
 5103      6E7400
 5104              	.LASF73:
 5105 05a8 6F666673 		.ascii	"offset\000"
 5105      657400
 5106              	.LASF70:
 5107 05af 43617073 		.ascii	"Capsense_GetBitValue\000"
 5107      656E7365 
 5107      5F476574 
 5107      42697456 
 5107      616C7565 
 5108              	.LASF69:
 5109 05c4 43617073 		.ascii	"Capsense_ReadCurrentScanningSensor\000"
 5109      656E7365 
 5109      5F526561 
 5109      64437572 
 5109      72656E74 
 5110              	.LASF14:
 5111 05e7 63686172 		.ascii	"char\000"
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 135


 5111      00
 5112              	.LASF119:
 5113 05ec 43617073 		.ascii	"Capsense_numberOfSensors\000"
 5113      656E7365 
 5113      5F6E756D 
 5113      6265724F 
 5113      6653656E 
 5114              	.LASF99:
 5115 0605 43617073 		.ascii	"Capsense_csdStatusVar\000"
 5115      656E7365 
 5115      5F637364 
 5115      53746174 
 5115      75735661 
 5116              	.LASF42:
 5117 061b 7265736F 		.ascii	"resolution\000"
 5117      6C757469 
 5117      6F6E00
 5118              	.LASF101:
 5119 0626 43617073 		.ascii	"Capsense_sensorRaw\000"
 5119      656E7365 
 5119      5F73656E 
 5119      736F7252 
 5119      617700
 5120              	.LASF55:
 5121 0639 64726976 		.ascii	"driveMode\000"
 5121      654D6F64 
 5121      6500
 5122              	.LASF34:
 5123 0643 6C617374 		.ascii	"lastSensor\000"
 5123      53656E73 
 5123      6F7200
 5124              	.LASF64:
 5125 064e 43617073 		.ascii	"Capsense_PostScan\000"
 5125      656E7365 
 5125      5F506F73 
 5125      74536361 
 5125      6E00
 5126              	.LASF50:
 5127 0660 706F7274 		.ascii	"port\000"
 5127      00
 5128              	.LASF45:
 5129 0665 43617073 		.ascii	"Capsense_EnableSensor\000"
 5129      656E7365 
 5129      5F456E61 
 5129      626C6553 
 5129      656E736F 
 5130              	.LASF77:
 5131 067b 43617073 		.ascii	"Capsense_SetSenseClkDivider\000"
 5131      656E7365 
 5131      5F536574 
 5131      53656E73 
 5131      65436C6B 
 5132              	.LASF123:
 5133 0697 433A5C55 		.ascii	"C:\\Users\\ROUSSMA\\Documents\\PSoC Creator\\RGB_OL"
 5133      73657273 
 5133      5C524F55 
 5133      53534D41 
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 136


 5133      5C446F63 
 5134 06c5 45445C52 		.ascii	"ED\\RGB_OLED.cydsn\000"
 5134      47425F4F 
 5134      4C45442E 
 5134      63796473 
 5134      6E00
 5135              	.LASF60:
 5136 06d7 70696E4E 		.ascii	"pinNumber\000"
 5136      756D6265 
 5136      7200
 5137              	.LASF43:
 5138 06e1 43617073 		.ascii	"Capsense_GetScanResolution\000"
 5138      656E7365 
 5138      5F476574 
 5138      5363616E 
 5138      5265736F 
 5139              	.LASF48:
 5140 06fc 696E7465 		.ascii	"interruptState\000"
 5140      72727570 
 5140      74537461 
 5140      746500
 5141              	.LASF26:
 5142 070b 7261774C 		.ascii	"rawLevel\000"
 5142      6576656C 
 5142      00
 5143              	.LASF114:
 5144 0714 43617073 		.ascii	"Capsense_pcTable\000"
 5144      656E7365 
 5144      5F706354 
 5144      61626C65 
 5144      00
 5145              	.LASF41:
 5146 0725 43617073 		.ascii	"Capsense_SetScanResolution\000"
 5146      656E7365 
 5146      5F536574 
 5146      5363616E 
 5146      5265736F 
 5147              	.LASF15:
 5148 0740 72656738 		.ascii	"reg8\000"
 5148      00
 5149              	.LASF78:
 5150 0745 73656E73 		.ascii	"senseClk\000"
 5150      65436C6B 
 5150      00
 5151              	.LASF11:
 5152 074e 75696E74 		.ascii	"uint32\000"
 5152      333200
 5153              	.LASF85:
 5154 0755 43617073 		.ascii	"Capsense_GetCompensationIDAC\000"
 5154      656E7365 
 5154      5F476574 
 5154      436F6D70 
 5154      656E7361 
 5155              	.LASF90:
 5156 0772 69446163 		.ascii	"iDacRange\000"
 5156      52616E67 
 5156      6500
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 137


 5157              	.LASF109:
 5158 077c 43617073 		.ascii	"Capsense_sampleClkDividerVal\000"
 5158      656E7365 
 5158      5F73616D 
 5158      706C6543 
 5158      6C6B4469 
 5159              	.LASF44:
 5160 0799 43617073 		.ascii	"Capsense_ClearSensors\000"
 5160      656E7365 
 5160      5F436C65 
 5160      61725365 
 5160      6E736F72 
 5161              	.LASF82:
 5162 07af 43617073 		.ascii	"Capsense_GetModulationIDAC\000"
 5162      656E7365 
 5162      5F476574 
 5162      4D6F6475 
 5162      6C617469 
 5163              	.LASF21:
 5164 07ca 63757253 		.ascii	"curSensor\000"
 5164      656E736F 
 5164      7200
 5165              	.LASF98:
 5166 07d4 43617073 		.ascii	"Capsense_SetUnscannedSensorState\000"
 5166      656E7365 
 5166      5F536574 
 5166      556E7363 
 5166      616E6E65 
 5167              	.LASF35:
 5168 07f5 43617073 		.ascii	"Capsense_Stop\000"
 5168      656E7365 
 5168      5F53746F 
 5168      7000
 5169              	.LASF81:
 5170 0803 6D6F6475 		.ascii	"modulatorClk\000"
 5170      6C61746F 
 5170      72436C6B 
 5170      00
 5171              	.LASF29:
 5172 0810 43617073 		.ascii	"Capsense_ScanSensor\000"
 5172      656E7365 
 5172      5F536361 
 5172      6E53656E 
 5172      736F7200 
 5173              	.LASF17:
 5174 0824 73697A65 		.ascii	"sizetype\000"
 5174      74797065 
 5174      00
 5175              	.LASF32:
 5176 082d 43617073 		.ascii	"Capsense_ScanWidget\000"
 5176      656E7365 
 5176      5F536361 
 5176      6E576964 
 5176      67657400 
 5177              	.LASF28:
 5178 0841 656E6162 		.ascii	"enableFlag\000"
 5178      6C65466C 
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 138


 5178      616700
 5179              	.LASF80:
 5180 084c 43617073 		.ascii	"Capsense_SetModulatorClkDivider\000"
 5180      656E7365 
 5180      5F536574 
 5180      4D6F6475 
 5180      6C61746F 
 5181              	.LASF47:
 5182 086c 70696E48 		.ascii	"pinHSIOMShift\000"
 5182      53494F4D 
 5182      53686966 
 5182      7400
 5183              	.LASF57:
 5184 087a 70696E4E 		.ascii	"pinNumberTmp\000"
 5184      756D6265 
 5184      72546D70 
 5184      00
 5185              	.LASF33:
 5186 0887 73656E73 		.ascii	"sensorsPerWidget\000"
 5186      6F727350 
 5186      65725769 
 5186      64676574 
 5186      00
 5187              	.LASF111:
 5188 0898 43617073 		.ascii	"Capsense_prtSelTbl\000"
 5188      656E7365 
 5188      5F707274 
 5188      53656C54 
 5188      626C00
 5189              	.LASF68:
 5190 08ab 43617073 		.ascii	"Capsense_IsBusy\000"
 5190      656E7365 
 5190      5F497342 
 5190      75737900 
 5191              	.LASF103:
 5192 08bb 43617073 		.ascii	"Capsense_sensorEnableMaskBackup\000"
 5192      656E7365 
 5192      5F73656E 
 5192      736F7245 
 5192      6E61626C 
 5193              	.LASF49:
 5194 08db 6E657752 		.ascii	"newRegisterValue\000"
 5194      65676973 
 5194      74657256 
 5194      616C7565 
 5194      00
 5195              	.LASF106:
 5196 08ec 43617073 		.ascii	"Capsense_compensationIDAC\000"
 5196      656E7365 
 5196      5F636F6D 
 5196      70656E73 
 5196      6174696F 
 5197              	.LASF94:
 5198 0906 43617073 		.ascii	"Capsense_CalibrateSensor\000"
 5198      656E7365 
 5198      5F43616C 
 5198      69627261 
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccTx5OE8.s 			page 139


 5198      74655365 
 5199              	.LASF16:
 5200 091f 72656733 		.ascii	"reg32\000"
 5200      3200
 5201              	.LASF96:
 5202 0925 6D61736B 		.ascii	"mask\000"
 5202      00
 5203              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
