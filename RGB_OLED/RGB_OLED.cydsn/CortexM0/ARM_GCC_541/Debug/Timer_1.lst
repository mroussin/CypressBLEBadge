ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Timer_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	Timer_1_initVar
  20              		.bss
  21              		.type	Timer_1_initVar, %object
  22              		.size	Timer_1_initVar, 1
  23              	Timer_1_initVar:
  24 0000 00       		.space	1
  25              		.section	.text.Timer_1_Init,"ax",%progbits
  26              		.align	2
  27              		.global	Timer_1_Init
  28              		.code	16
  29              		.thumb_func
  30              		.type	Timer_1_Init, %function
  31              	Timer_1_Init:
  32              	.LFB2:
  33              		.file 1 "Generated_Source\\PSoC4\\Timer_1.c"
   1:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/Timer_1.c **** * File Name: Timer_1.c
   3:Generated_Source\PSoC4/Timer_1.c **** * Version 2.10
   4:Generated_Source\PSoC4/Timer_1.c **** *
   5:Generated_Source\PSoC4/Timer_1.c **** * Description:
   6:Generated_Source\PSoC4/Timer_1.c **** *  This file provides the source code to the API for the Timer_1
   7:Generated_Source\PSoC4/Timer_1.c **** *  component
   8:Generated_Source\PSoC4/Timer_1.c **** *
   9:Generated_Source\PSoC4/Timer_1.c **** * Note:
  10:Generated_Source\PSoC4/Timer_1.c **** *  None
  11:Generated_Source\PSoC4/Timer_1.c **** *
  12:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
  13:Generated_Source\PSoC4/Timer_1.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/Timer_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/Timer_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/Timer_1.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/Timer_1.c **** 
  19:Generated_Source\PSoC4/Timer_1.c **** #include "Timer_1.h"
  20:Generated_Source\PSoC4/Timer_1.c **** 
  21:Generated_Source\PSoC4/Timer_1.c **** uint8 Timer_1_initVar = 0u;
  22:Generated_Source\PSoC4/Timer_1.c **** 
  23:Generated_Source\PSoC4/Timer_1.c **** 
  24:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 2


  25:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_Init
  26:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
  27:Generated_Source\PSoC4/Timer_1.c **** *
  28:Generated_Source\PSoC4/Timer_1.c **** * Summary:
  29:Generated_Source\PSoC4/Timer_1.c **** *  Initialize/Restore default Timer_1 configuration.
  30:Generated_Source\PSoC4/Timer_1.c **** *
  31:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
  32:Generated_Source\PSoC4/Timer_1.c **** *  None
  33:Generated_Source\PSoC4/Timer_1.c **** *
  34:Generated_Source\PSoC4/Timer_1.c **** * Return:
  35:Generated_Source\PSoC4/Timer_1.c **** *  None
  36:Generated_Source\PSoC4/Timer_1.c **** *
  37:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
  38:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_Init(void)
  39:Generated_Source\PSoC4/Timer_1.c **** {
  34              		.loc 1 39 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 00AF     		add	r7, sp, #0
  43              		.cfi_def_cfa_register 7
  40:Generated_Source\PSoC4/Timer_1.c **** 
  41:Generated_Source\PSoC4/Timer_1.c ****     /* Set values from customizer to CTRL */
  42:Generated_Source\PSoC4/Timer_1.c ****     #if (Timer_1__QUAD == Timer_1_CONFIG)
  43:Generated_Source\PSoC4/Timer_1.c ****         Timer_1_CONTROL_REG = Timer_1_CTRL_QUAD_BASE_CONFIG;
  44:Generated_Source\PSoC4/Timer_1.c ****         
  45:Generated_Source\PSoC4/Timer_1.c ****         /* Set values from customizer to CTRL1 */
  46:Generated_Source\PSoC4/Timer_1.c ****         Timer_1_TRIG_CONTROL1_REG  = Timer_1_QUAD_SIGNALS_MODES;
  47:Generated_Source\PSoC4/Timer_1.c **** 
  48:Generated_Source\PSoC4/Timer_1.c ****         /* Set values from customizer to INTR */
  49:Generated_Source\PSoC4/Timer_1.c ****         Timer_1_SetInterruptMode(Timer_1_QUAD_INTERRUPT_MASK);
  50:Generated_Source\PSoC4/Timer_1.c ****         
  51:Generated_Source\PSoC4/Timer_1.c ****          /* Set other values */
  52:Generated_Source\PSoC4/Timer_1.c ****         Timer_1_SetCounterMode(Timer_1_COUNT_DOWN);
  53:Generated_Source\PSoC4/Timer_1.c ****         Timer_1_WritePeriod(Timer_1_QUAD_PERIOD_INIT_VALUE);
  54:Generated_Source\PSoC4/Timer_1.c ****         Timer_1_WriteCounter(Timer_1_QUAD_PERIOD_INIT_VALUE);
  55:Generated_Source\PSoC4/Timer_1.c ****     #endif  /* (Timer_1__QUAD == Timer_1_CONFIG) */
  56:Generated_Source\PSoC4/Timer_1.c **** 
  57:Generated_Source\PSoC4/Timer_1.c ****     #if (Timer_1__TIMER == Timer_1_CONFIG)
  58:Generated_Source\PSoC4/Timer_1.c ****         Timer_1_CONTROL_REG = Timer_1_CTRL_TIMER_BASE_CONFIG;
  44              		.loc 1 58 0
  45 0004 0B4B     		ldr	r3, .L2
  46 0006 8022     		movs	r2, #128
  47 0008 5200     		lsls	r2, r2, #1
  48 000a 1A60     		str	r2, [r3]
  59:Generated_Source\PSoC4/Timer_1.c ****         
  60:Generated_Source\PSoC4/Timer_1.c ****         /* Set values from customizer to CTRL1 */
  61:Generated_Source\PSoC4/Timer_1.c ****         Timer_1_TRIG_CONTROL1_REG  = Timer_1_TIMER_SIGNALS_MODES;
  49              		.loc 1 61 0
  50 000c 0A4B     		ldr	r3, .L2+4
  51 000e 0C22     		movs	r2, #12
  52 0010 1A60     		str	r2, [r3]
  62:Generated_Source\PSoC4/Timer_1.c ****     
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 3


  63:Generated_Source\PSoC4/Timer_1.c ****         /* Set values from customizer to INTR */
  64:Generated_Source\PSoC4/Timer_1.c ****         Timer_1_SetInterruptMode(Timer_1_TC_INTERRUPT_MASK);
  53              		.loc 1 64 0
  54 0012 0220     		movs	r0, #2
  55 0014 FFF7FEFF 		bl	Timer_1_SetInterruptMode
  65:Generated_Source\PSoC4/Timer_1.c ****         
  66:Generated_Source\PSoC4/Timer_1.c ****         /* Set other values from customizer */
  67:Generated_Source\PSoC4/Timer_1.c ****         Timer_1_WritePeriod(Timer_1_TC_PERIOD_VALUE );
  56              		.loc 1 67 0
  57 0018 084B     		ldr	r3, .L2+8
  58 001a 1800     		movs	r0, r3
  59 001c FFF7FEFF 		bl	Timer_1_WritePeriod
  68:Generated_Source\PSoC4/Timer_1.c **** 
  69:Generated_Source\PSoC4/Timer_1.c ****         #if (Timer_1__COMPARE == Timer_1_TC_COMP_CAP_MODE)
  70:Generated_Source\PSoC4/Timer_1.c ****             Timer_1_WriteCompare(Timer_1_TC_COMPARE_VALUE);
  60              		.loc 1 70 0
  61 0020 064B     		ldr	r3, .L2+8
  62 0022 1800     		movs	r0, r3
  63 0024 FFF7FEFF 		bl	Timer_1_WriteCompare
  71:Generated_Source\PSoC4/Timer_1.c **** 
  72:Generated_Source\PSoC4/Timer_1.c ****             #if (1u == Timer_1_TC_COMPARE_SWAP)
  73:Generated_Source\PSoC4/Timer_1.c ****                 Timer_1_SetCompareSwap(1u);
  74:Generated_Source\PSoC4/Timer_1.c ****                 Timer_1_WriteCompareBuf(Timer_1_TC_COMPARE_BUF_VALUE);
  75:Generated_Source\PSoC4/Timer_1.c ****             #endif  /* (1u == Timer_1_TC_COMPARE_SWAP) */
  76:Generated_Source\PSoC4/Timer_1.c ****         #endif  /* (Timer_1__COMPARE == Timer_1_TC_COMP_CAP_MODE) */
  77:Generated_Source\PSoC4/Timer_1.c **** 
  78:Generated_Source\PSoC4/Timer_1.c ****         /* Initialize counter value */
  79:Generated_Source\PSoC4/Timer_1.c ****         #if (Timer_1_CY_TCPWM_V2 && Timer_1_TIMER_UPDOWN_CNT_USED && !Timer_1_CY_TCPWM_4000)
  80:Generated_Source\PSoC4/Timer_1.c ****             Timer_1_WriteCounter(1u);
  81:Generated_Source\PSoC4/Timer_1.c ****         #elif(Timer_1__COUNT_DOWN == Timer_1_TC_COUNTER_MODE)
  82:Generated_Source\PSoC4/Timer_1.c ****             Timer_1_WriteCounter(Timer_1_TC_PERIOD_VALUE);
  83:Generated_Source\PSoC4/Timer_1.c ****         #else
  84:Generated_Source\PSoC4/Timer_1.c ****             Timer_1_WriteCounter(0u);
  64              		.loc 1 84 0
  65 0028 0020     		movs	r0, #0
  66 002a FFF7FEFF 		bl	Timer_1_WriteCounter
  85:Generated_Source\PSoC4/Timer_1.c ****         #endif /* (Timer_1_CY_TCPWM_V2 && Timer_1_TIMER_UPDOWN_CNT_USED && !Timer_1_CY_TCPWM_4000) 
  86:Generated_Source\PSoC4/Timer_1.c ****     #endif  /* (Timer_1__TIMER == Timer_1_CONFIG) */
  87:Generated_Source\PSoC4/Timer_1.c **** 
  88:Generated_Source\PSoC4/Timer_1.c ****     #if (Timer_1__PWM_SEL == Timer_1_CONFIG)
  89:Generated_Source\PSoC4/Timer_1.c ****         Timer_1_CONTROL_REG = Timer_1_CTRL_PWM_BASE_CONFIG;
  90:Generated_Source\PSoC4/Timer_1.c **** 
  91:Generated_Source\PSoC4/Timer_1.c ****         #if (Timer_1__PWM_PR == Timer_1_PWM_MODE)
  92:Generated_Source\PSoC4/Timer_1.c ****             Timer_1_CONTROL_REG |= Timer_1_CTRL_PWM_RUN_MODE;
  93:Generated_Source\PSoC4/Timer_1.c ****             Timer_1_WriteCounter(Timer_1_PWM_PR_INIT_VALUE);
  94:Generated_Source\PSoC4/Timer_1.c ****         #else
  95:Generated_Source\PSoC4/Timer_1.c ****             Timer_1_CONTROL_REG |= Timer_1_CTRL_PWM_ALIGN | Timer_1_CTRL_PWM_KILL_EVENT;
  96:Generated_Source\PSoC4/Timer_1.c ****             
  97:Generated_Source\PSoC4/Timer_1.c ****             /* Initialize counter value */
  98:Generated_Source\PSoC4/Timer_1.c ****             #if (Timer_1_CY_TCPWM_V2 && Timer_1_PWM_UPDOWN_CNT_USED && !Timer_1_CY_TCPWM_4000)
  99:Generated_Source\PSoC4/Timer_1.c ****                 Timer_1_WriteCounter(1u);
 100:Generated_Source\PSoC4/Timer_1.c ****             #elif (Timer_1__RIGHT == Timer_1_PWM_ALIGN)
 101:Generated_Source\PSoC4/Timer_1.c ****                 Timer_1_WriteCounter(Timer_1_PWM_PERIOD_VALUE);
 102:Generated_Source\PSoC4/Timer_1.c ****             #else 
 103:Generated_Source\PSoC4/Timer_1.c ****                 Timer_1_WriteCounter(0u);
 104:Generated_Source\PSoC4/Timer_1.c ****             #endif  /* (Timer_1_CY_TCPWM_V2 && Timer_1_PWM_UPDOWN_CNT_USED && !Timer_1_CY_TCPWM_400
 105:Generated_Source\PSoC4/Timer_1.c ****         #endif  /* (Timer_1__PWM_PR == Timer_1_PWM_MODE) */
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 4


 106:Generated_Source\PSoC4/Timer_1.c **** 
 107:Generated_Source\PSoC4/Timer_1.c ****         #if (Timer_1__PWM_DT == Timer_1_PWM_MODE)
 108:Generated_Source\PSoC4/Timer_1.c ****             Timer_1_CONTROL_REG |= Timer_1_CTRL_PWM_DEAD_TIME_CYCLE;
 109:Generated_Source\PSoC4/Timer_1.c ****         #endif  /* (Timer_1__PWM_DT == Timer_1_PWM_MODE) */
 110:Generated_Source\PSoC4/Timer_1.c **** 
 111:Generated_Source\PSoC4/Timer_1.c ****         #if (Timer_1__PWM == Timer_1_PWM_MODE)
 112:Generated_Source\PSoC4/Timer_1.c ****             Timer_1_CONTROL_REG |= Timer_1_CTRL_PWM_PRESCALER;
 113:Generated_Source\PSoC4/Timer_1.c ****         #endif  /* (Timer_1__PWM == Timer_1_PWM_MODE) */
 114:Generated_Source\PSoC4/Timer_1.c **** 
 115:Generated_Source\PSoC4/Timer_1.c ****         /* Set values from customizer to CTRL1 */
 116:Generated_Source\PSoC4/Timer_1.c ****         Timer_1_TRIG_CONTROL1_REG  = Timer_1_PWM_SIGNALS_MODES;
 117:Generated_Source\PSoC4/Timer_1.c ****     
 118:Generated_Source\PSoC4/Timer_1.c ****         /* Set values from customizer to INTR */
 119:Generated_Source\PSoC4/Timer_1.c ****         Timer_1_SetInterruptMode(Timer_1_PWM_INTERRUPT_MASK);
 120:Generated_Source\PSoC4/Timer_1.c **** 
 121:Generated_Source\PSoC4/Timer_1.c ****         /* Set values from customizer to CTRL2 */
 122:Generated_Source\PSoC4/Timer_1.c ****         #if (Timer_1__PWM_PR == Timer_1_PWM_MODE)
 123:Generated_Source\PSoC4/Timer_1.c ****             Timer_1_TRIG_CONTROL2_REG =
 124:Generated_Source\PSoC4/Timer_1.c ****                     (Timer_1_CC_MATCH_NO_CHANGE    |
 125:Generated_Source\PSoC4/Timer_1.c ****                     Timer_1_OVERLOW_NO_CHANGE      |
 126:Generated_Source\PSoC4/Timer_1.c ****                     Timer_1_UNDERFLOW_NO_CHANGE);
 127:Generated_Source\PSoC4/Timer_1.c ****         #else
 128:Generated_Source\PSoC4/Timer_1.c ****             #if (Timer_1__LEFT == Timer_1_PWM_ALIGN)
 129:Generated_Source\PSoC4/Timer_1.c ****                 Timer_1_TRIG_CONTROL2_REG = Timer_1_PWM_MODE_LEFT;
 130:Generated_Source\PSoC4/Timer_1.c ****             #endif  /* ( Timer_1_PWM_LEFT == Timer_1_PWM_ALIGN) */
 131:Generated_Source\PSoC4/Timer_1.c **** 
 132:Generated_Source\PSoC4/Timer_1.c ****             #if (Timer_1__RIGHT == Timer_1_PWM_ALIGN)
 133:Generated_Source\PSoC4/Timer_1.c ****                 Timer_1_TRIG_CONTROL2_REG = Timer_1_PWM_MODE_RIGHT;
 134:Generated_Source\PSoC4/Timer_1.c ****             #endif  /* ( Timer_1_PWM_RIGHT == Timer_1_PWM_ALIGN) */
 135:Generated_Source\PSoC4/Timer_1.c **** 
 136:Generated_Source\PSoC4/Timer_1.c ****             #if (Timer_1__CENTER == Timer_1_PWM_ALIGN)
 137:Generated_Source\PSoC4/Timer_1.c ****                 Timer_1_TRIG_CONTROL2_REG = Timer_1_PWM_MODE_CENTER;
 138:Generated_Source\PSoC4/Timer_1.c ****             #endif  /* ( Timer_1_PWM_CENTER == Timer_1_PWM_ALIGN) */
 139:Generated_Source\PSoC4/Timer_1.c **** 
 140:Generated_Source\PSoC4/Timer_1.c ****             #if (Timer_1__ASYMMETRIC == Timer_1_PWM_ALIGN)
 141:Generated_Source\PSoC4/Timer_1.c ****                 Timer_1_TRIG_CONTROL2_REG = Timer_1_PWM_MODE_ASYM;
 142:Generated_Source\PSoC4/Timer_1.c ****             #endif  /* (Timer_1__ASYMMETRIC == Timer_1_PWM_ALIGN) */
 143:Generated_Source\PSoC4/Timer_1.c ****         #endif  /* (Timer_1__PWM_PR == Timer_1_PWM_MODE) */
 144:Generated_Source\PSoC4/Timer_1.c **** 
 145:Generated_Source\PSoC4/Timer_1.c ****         /* Set other values from customizer */
 146:Generated_Source\PSoC4/Timer_1.c ****         Timer_1_WritePeriod(Timer_1_PWM_PERIOD_VALUE );
 147:Generated_Source\PSoC4/Timer_1.c ****         Timer_1_WriteCompare(Timer_1_PWM_COMPARE_VALUE);
 148:Generated_Source\PSoC4/Timer_1.c **** 
 149:Generated_Source\PSoC4/Timer_1.c ****         #if (1u == Timer_1_PWM_COMPARE_SWAP)
 150:Generated_Source\PSoC4/Timer_1.c ****             Timer_1_SetCompareSwap(1u);
 151:Generated_Source\PSoC4/Timer_1.c ****             Timer_1_WriteCompareBuf(Timer_1_PWM_COMPARE_BUF_VALUE);
 152:Generated_Source\PSoC4/Timer_1.c ****         #endif  /* (1u == Timer_1_PWM_COMPARE_SWAP) */
 153:Generated_Source\PSoC4/Timer_1.c **** 
 154:Generated_Source\PSoC4/Timer_1.c ****         #if (1u == Timer_1_PWM_PERIOD_SWAP)
 155:Generated_Source\PSoC4/Timer_1.c ****             Timer_1_SetPeriodSwap(1u);
 156:Generated_Source\PSoC4/Timer_1.c ****             Timer_1_WritePeriodBuf(Timer_1_PWM_PERIOD_BUF_VALUE);
 157:Generated_Source\PSoC4/Timer_1.c ****         #endif  /* (1u == Timer_1_PWM_PERIOD_SWAP) */
 158:Generated_Source\PSoC4/Timer_1.c ****     #endif  /* (Timer_1__PWM_SEL == Timer_1_CONFIG) */
 159:Generated_Source\PSoC4/Timer_1.c ****     
 160:Generated_Source\PSoC4/Timer_1.c **** }
  67              		.loc 1 160 0
  68 002e C046     		nop
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 5


  69 0030 BD46     		mov	sp, r7
  70              		@ sp needed
  71 0032 80BD     		pop	{r7, pc}
  72              	.L3:
  73              		.align	2
  74              	.L2:
  75 0034 00012040 		.word	1075839232
  76 0038 24012040 		.word	1075839268
  77 003c FFFF0000 		.word	65535
  78              		.cfi_endproc
  79              	.LFE2:
  80              		.size	Timer_1_Init, .-Timer_1_Init
  81              		.section	.text.Timer_1_Enable,"ax",%progbits
  82              		.align	2
  83              		.global	Timer_1_Enable
  84              		.code	16
  85              		.thumb_func
  86              		.type	Timer_1_Enable, %function
  87              	Timer_1_Enable:
  88              	.LFB3:
 161:Generated_Source\PSoC4/Timer_1.c **** 
 162:Generated_Source\PSoC4/Timer_1.c **** 
 163:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 164:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_Enable
 165:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 166:Generated_Source\PSoC4/Timer_1.c **** *
 167:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 168:Generated_Source\PSoC4/Timer_1.c **** *  Enables the Timer_1.
 169:Generated_Source\PSoC4/Timer_1.c **** *
 170:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 171:Generated_Source\PSoC4/Timer_1.c **** *  None
 172:Generated_Source\PSoC4/Timer_1.c **** *
 173:Generated_Source\PSoC4/Timer_1.c **** * Return:
 174:Generated_Source\PSoC4/Timer_1.c **** *  None
 175:Generated_Source\PSoC4/Timer_1.c **** *
 176:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 177:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_Enable(void)
 178:Generated_Source\PSoC4/Timer_1.c **** {
  89              		.loc 1 178 0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 8
  92              		@ frame_needed = 1, uses_anonymous_args = 0
  93 0000 90B5     		push	{r4, r7, lr}
  94              		.cfi_def_cfa_offset 12
  95              		.cfi_offset 4, -12
  96              		.cfi_offset 7, -8
  97              		.cfi_offset 14, -4
  98 0002 83B0     		sub	sp, sp, #12
  99              		.cfi_def_cfa_offset 24
 100 0004 00AF     		add	r7, sp, #0
 101              		.cfi_def_cfa_register 7
 179:Generated_Source\PSoC4/Timer_1.c ****     uint8 enableInterrupts;
 180:Generated_Source\PSoC4/Timer_1.c **** 
 181:Generated_Source\PSoC4/Timer_1.c ****     enableInterrupts = CyEnterCriticalSection();
 102              		.loc 1 181 0
 103 0006 FC1D     		adds	r4, r7, #7
 104 0008 FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 6


 105 000c 0300     		movs	r3, r0
 106 000e 2370     		strb	r3, [r4]
 182:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_BLOCK_CONTROL_REG |= Timer_1_MASK;
 107              		.loc 1 182 0
 108 0010 094B     		ldr	r3, .L5
 109 0012 094A     		ldr	r2, .L5
 110 0014 1268     		ldr	r2, [r2]
 111 0016 0121     		movs	r1, #1
 112 0018 0A43     		orrs	r2, r1
 113 001a 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/Timer_1.c ****     CyExitCriticalSection(enableInterrupts);
 114              		.loc 1 183 0
 115 001c FB1D     		adds	r3, r7, #7
 116 001e 1B78     		ldrb	r3, [r3]
 117 0020 1800     		movs	r0, r3
 118 0022 FFF7FEFF 		bl	CyExitCriticalSection
 184:Generated_Source\PSoC4/Timer_1.c **** 
 185:Generated_Source\PSoC4/Timer_1.c ****     /* Start Timer or PWM if start input is absent */
 186:Generated_Source\PSoC4/Timer_1.c ****     #if (Timer_1__PWM_SEL == Timer_1_CONFIG)
 187:Generated_Source\PSoC4/Timer_1.c ****         #if (0u == Timer_1_PWM_START_SIGNAL_PRESENT)
 188:Generated_Source\PSoC4/Timer_1.c ****             Timer_1_TriggerCommand(Timer_1_MASK, Timer_1_CMD_START);
 189:Generated_Source\PSoC4/Timer_1.c ****         #endif /* (0u == Timer_1_PWM_START_SIGNAL_PRESENT) */
 190:Generated_Source\PSoC4/Timer_1.c ****     #endif /* (Timer_1__PWM_SEL == Timer_1_CONFIG) */
 191:Generated_Source\PSoC4/Timer_1.c **** 
 192:Generated_Source\PSoC4/Timer_1.c ****     #if (Timer_1__TIMER == Timer_1_CONFIG)
 193:Generated_Source\PSoC4/Timer_1.c ****         #if (0u == Timer_1_TC_START_SIGNAL_PRESENT)
 194:Generated_Source\PSoC4/Timer_1.c ****             Timer_1_TriggerCommand(Timer_1_MASK, Timer_1_CMD_START);
 119              		.loc 1 194 0
 120 0026 1821     		movs	r1, #24
 121 0028 0120     		movs	r0, #1
 122 002a FFF7FEFF 		bl	Timer_1_TriggerCommand
 195:Generated_Source\PSoC4/Timer_1.c ****         #endif /* (0u == Timer_1_TC_START_SIGNAL_PRESENT) */
 196:Generated_Source\PSoC4/Timer_1.c ****     #endif /* (Timer_1__TIMER == Timer_1_CONFIG) */
 197:Generated_Source\PSoC4/Timer_1.c ****     
 198:Generated_Source\PSoC4/Timer_1.c ****     #if (Timer_1__QUAD == Timer_1_CONFIG)
 199:Generated_Source\PSoC4/Timer_1.c ****         #if (0u != Timer_1_QUAD_AUTO_START)
 200:Generated_Source\PSoC4/Timer_1.c ****             Timer_1_TriggerCommand(Timer_1_MASK, Timer_1_CMD_RELOAD);
 201:Generated_Source\PSoC4/Timer_1.c ****         #endif /* (0u != Timer_1_QUAD_AUTO_START) */
 202:Generated_Source\PSoC4/Timer_1.c ****     #endif  /* (Timer_1__QUAD == Timer_1_CONFIG) */
 203:Generated_Source\PSoC4/Timer_1.c **** }
 123              		.loc 1 203 0
 124 002e C046     		nop
 125 0030 BD46     		mov	sp, r7
 126 0032 03B0     		add	sp, sp, #12
 127              		@ sp needed
 128 0034 90BD     		pop	{r4, r7, pc}
 129              	.L6:
 130 0036 C046     		.align	2
 131              	.L5:
 132 0038 00002040 		.word	1075838976
 133              		.cfi_endproc
 134              	.LFE3:
 135              		.size	Timer_1_Enable, .-Timer_1_Enable
 136              		.section	.text.Timer_1_Start,"ax",%progbits
 137              		.align	2
 138              		.global	Timer_1_Start
 139              		.code	16
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 7


 140              		.thumb_func
 141              		.type	Timer_1_Start, %function
 142              	Timer_1_Start:
 143              	.LFB4:
 204:Generated_Source\PSoC4/Timer_1.c **** 
 205:Generated_Source\PSoC4/Timer_1.c **** 
 206:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 207:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_Start
 208:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 209:Generated_Source\PSoC4/Timer_1.c **** *
 210:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 211:Generated_Source\PSoC4/Timer_1.c **** *  Initializes the Timer_1 with default customizer
 212:Generated_Source\PSoC4/Timer_1.c **** *  values when called the first time and enables the Timer_1.
 213:Generated_Source\PSoC4/Timer_1.c **** *  For subsequent calls the configuration is left unchanged and the component is
 214:Generated_Source\PSoC4/Timer_1.c **** *  just enabled.
 215:Generated_Source\PSoC4/Timer_1.c **** *
 216:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 217:Generated_Source\PSoC4/Timer_1.c **** *  None
 218:Generated_Source\PSoC4/Timer_1.c **** *
 219:Generated_Source\PSoC4/Timer_1.c **** * Return:
 220:Generated_Source\PSoC4/Timer_1.c **** *  None
 221:Generated_Source\PSoC4/Timer_1.c **** *
 222:Generated_Source\PSoC4/Timer_1.c **** * Global variables:
 223:Generated_Source\PSoC4/Timer_1.c **** *  Timer_1_initVar: global variable is used to indicate initial
 224:Generated_Source\PSoC4/Timer_1.c **** *  configuration of this component.  The variable is initialized to zero and set
 225:Generated_Source\PSoC4/Timer_1.c **** *  to 1 the first time Timer_1_Start() is called. This allows
 226:Generated_Source\PSoC4/Timer_1.c **** *  enabling/disabling a component without re-initialization in all subsequent
 227:Generated_Source\PSoC4/Timer_1.c **** *  calls to the Timer_1_Start() routine.
 228:Generated_Source\PSoC4/Timer_1.c **** *
 229:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 230:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_Start(void)
 231:Generated_Source\PSoC4/Timer_1.c **** {
 144              		.loc 1 231 0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 1, uses_anonymous_args = 0
 148 0000 80B5     		push	{r7, lr}
 149              		.cfi_def_cfa_offset 8
 150              		.cfi_offset 7, -8
 151              		.cfi_offset 14, -4
 152 0002 00AF     		add	r7, sp, #0
 153              		.cfi_def_cfa_register 7
 232:Generated_Source\PSoC4/Timer_1.c ****     if (0u == Timer_1_initVar)
 154              		.loc 1 232 0
 155 0004 064B     		ldr	r3, .L9
 156 0006 1B78     		ldrb	r3, [r3]
 157 0008 002B     		cmp	r3, #0
 158 000a 04D1     		bne	.L8
 233:Generated_Source\PSoC4/Timer_1.c ****     {
 234:Generated_Source\PSoC4/Timer_1.c ****         Timer_1_Init();
 159              		.loc 1 234 0
 160 000c FFF7FEFF 		bl	Timer_1_Init
 235:Generated_Source\PSoC4/Timer_1.c ****         Timer_1_initVar = 1u;
 161              		.loc 1 235 0
 162 0010 034B     		ldr	r3, .L9
 163 0012 0122     		movs	r2, #1
 164 0014 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 8


 165              	.L8:
 236:Generated_Source\PSoC4/Timer_1.c ****     }
 237:Generated_Source\PSoC4/Timer_1.c **** 
 238:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_Enable();
 166              		.loc 1 238 0
 167 0016 FFF7FEFF 		bl	Timer_1_Enable
 239:Generated_Source\PSoC4/Timer_1.c **** }
 168              		.loc 1 239 0
 169 001a C046     		nop
 170 001c BD46     		mov	sp, r7
 171              		@ sp needed
 172 001e 80BD     		pop	{r7, pc}
 173              	.L10:
 174              		.align	2
 175              	.L9:
 176 0020 00000000 		.word	Timer_1_initVar
 177              		.cfi_endproc
 178              	.LFE4:
 179              		.size	Timer_1_Start, .-Timer_1_Start
 180              		.section	.text.Timer_1_Stop,"ax",%progbits
 181              		.align	2
 182              		.global	Timer_1_Stop
 183              		.code	16
 184              		.thumb_func
 185              		.type	Timer_1_Stop, %function
 186              	Timer_1_Stop:
 187              	.LFB5:
 240:Generated_Source\PSoC4/Timer_1.c **** 
 241:Generated_Source\PSoC4/Timer_1.c **** 
 242:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 243:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_Stop
 244:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 245:Generated_Source\PSoC4/Timer_1.c **** *
 246:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 247:Generated_Source\PSoC4/Timer_1.c **** *  Disables the Timer_1.
 248:Generated_Source\PSoC4/Timer_1.c **** *
 249:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 250:Generated_Source\PSoC4/Timer_1.c **** *  None
 251:Generated_Source\PSoC4/Timer_1.c **** *
 252:Generated_Source\PSoC4/Timer_1.c **** * Return:
 253:Generated_Source\PSoC4/Timer_1.c **** *  None
 254:Generated_Source\PSoC4/Timer_1.c **** *
 255:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 256:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_Stop(void)
 257:Generated_Source\PSoC4/Timer_1.c **** {
 188              		.loc 1 257 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 8
 191              		@ frame_needed = 1, uses_anonymous_args = 0
 192 0000 90B5     		push	{r4, r7, lr}
 193              		.cfi_def_cfa_offset 12
 194              		.cfi_offset 4, -12
 195              		.cfi_offset 7, -8
 196              		.cfi_offset 14, -4
 197 0002 83B0     		sub	sp, sp, #12
 198              		.cfi_def_cfa_offset 24
 199 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 9


 200              		.cfi_def_cfa_register 7
 258:Generated_Source\PSoC4/Timer_1.c ****     uint8 enableInterrupts;
 259:Generated_Source\PSoC4/Timer_1.c **** 
 260:Generated_Source\PSoC4/Timer_1.c ****     enableInterrupts = CyEnterCriticalSection();
 201              		.loc 1 260 0
 202 0006 FC1D     		adds	r4, r7, #7
 203 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 204 000c 0300     		movs	r3, r0
 205 000e 2370     		strb	r3, [r4]
 261:Generated_Source\PSoC4/Timer_1.c **** 
 262:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_BLOCK_CONTROL_REG &= (uint32)~Timer_1_MASK;
 206              		.loc 1 262 0
 207 0010 074B     		ldr	r3, .L12
 208 0012 074A     		ldr	r2, .L12
 209 0014 1268     		ldr	r2, [r2]
 210 0016 0121     		movs	r1, #1
 211 0018 8A43     		bics	r2, r1
 212 001a 1A60     		str	r2, [r3]
 263:Generated_Source\PSoC4/Timer_1.c **** 
 264:Generated_Source\PSoC4/Timer_1.c ****     CyExitCriticalSection(enableInterrupts);
 213              		.loc 1 264 0
 214 001c FB1D     		adds	r3, r7, #7
 215 001e 1B78     		ldrb	r3, [r3]
 216 0020 1800     		movs	r0, r3
 217 0022 FFF7FEFF 		bl	CyExitCriticalSection
 265:Generated_Source\PSoC4/Timer_1.c **** }
 218              		.loc 1 265 0
 219 0026 C046     		nop
 220 0028 BD46     		mov	sp, r7
 221 002a 03B0     		add	sp, sp, #12
 222              		@ sp needed
 223 002c 90BD     		pop	{r4, r7, pc}
 224              	.L13:
 225 002e C046     		.align	2
 226              	.L12:
 227 0030 00002040 		.word	1075838976
 228              		.cfi_endproc
 229              	.LFE5:
 230              		.size	Timer_1_Stop, .-Timer_1_Stop
 231              		.section	.text.Timer_1_SetMode,"ax",%progbits
 232              		.align	2
 233              		.global	Timer_1_SetMode
 234              		.code	16
 235              		.thumb_func
 236              		.type	Timer_1_SetMode, %function
 237              	Timer_1_SetMode:
 238              	.LFB6:
 266:Generated_Source\PSoC4/Timer_1.c **** 
 267:Generated_Source\PSoC4/Timer_1.c **** 
 268:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 269:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_SetMode
 270:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 271:Generated_Source\PSoC4/Timer_1.c **** *
 272:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 273:Generated_Source\PSoC4/Timer_1.c **** *  Sets the operation mode of the Timer_1. This function is used when
 274:Generated_Source\PSoC4/Timer_1.c **** *  configured as a generic Timer_1 and the actual mode of operation is
 275:Generated_Source\PSoC4/Timer_1.c **** *  set at runtime. The mode must be set while the component is disabled.
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 10


 276:Generated_Source\PSoC4/Timer_1.c **** *
 277:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 278:Generated_Source\PSoC4/Timer_1.c **** *  mode: Mode for the Timer_1 to operate in
 279:Generated_Source\PSoC4/Timer_1.c **** *   Values:
 280:Generated_Source\PSoC4/Timer_1.c **** *   - Timer_1_MODE_TIMER_COMPARE - Timer / Counter with
 281:Generated_Source\PSoC4/Timer_1.c **** *                                                 compare capability
 282:Generated_Source\PSoC4/Timer_1.c **** *         - Timer_1_MODE_TIMER_CAPTURE - Timer / Counter with
 283:Generated_Source\PSoC4/Timer_1.c **** *                                                 capture capability
 284:Generated_Source\PSoC4/Timer_1.c **** *         - Timer_1_MODE_QUAD - Quadrature decoder
 285:Generated_Source\PSoC4/Timer_1.c **** *         - Timer_1_MODE_PWM - PWM
 286:Generated_Source\PSoC4/Timer_1.c **** *         - Timer_1_MODE_PWM_DT - PWM with dead time
 287:Generated_Source\PSoC4/Timer_1.c **** *         - Timer_1_MODE_PWM_PR - PWM with pseudo random capability
 288:Generated_Source\PSoC4/Timer_1.c **** *
 289:Generated_Source\PSoC4/Timer_1.c **** * Return:
 290:Generated_Source\PSoC4/Timer_1.c **** *  None
 291:Generated_Source\PSoC4/Timer_1.c **** *
 292:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 293:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_SetMode(uint32 mode)
 294:Generated_Source\PSoC4/Timer_1.c **** {
 239              		.loc 1 294 0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 16
 242              		@ frame_needed = 1, uses_anonymous_args = 0
 243 0000 90B5     		push	{r4, r7, lr}
 244              		.cfi_def_cfa_offset 12
 245              		.cfi_offset 4, -12
 246              		.cfi_offset 7, -8
 247              		.cfi_offset 14, -4
 248 0002 85B0     		sub	sp, sp, #20
 249              		.cfi_def_cfa_offset 32
 250 0004 00AF     		add	r7, sp, #0
 251              		.cfi_def_cfa_register 7
 252 0006 7860     		str	r0, [r7, #4]
 295:Generated_Source\PSoC4/Timer_1.c ****     uint8 enableInterrupts;
 296:Generated_Source\PSoC4/Timer_1.c **** 
 297:Generated_Source\PSoC4/Timer_1.c ****     enableInterrupts = CyEnterCriticalSection();
 253              		.loc 1 297 0
 254 0008 0F23     		movs	r3, #15
 255 000a FC18     		adds	r4, r7, r3
 256 000c FFF7FEFF 		bl	CyEnterCriticalSection
 257 0010 0300     		movs	r3, r0
 258 0012 2370     		strb	r3, [r4]
 298:Generated_Source\PSoC4/Timer_1.c **** 
 299:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_CONTROL_REG &= (uint32)~Timer_1_MODE_MASK;
 259              		.loc 1 299 0
 260 0014 0A4B     		ldr	r3, .L15
 261 0016 0A4A     		ldr	r2, .L15
 262 0018 1268     		ldr	r2, [r2]
 263 001a 0A49     		ldr	r1, .L15+4
 264 001c 0A40     		ands	r2, r1
 265 001e 1A60     		str	r2, [r3]
 300:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_CONTROL_REG |= mode;
 266              		.loc 1 300 0
 267 0020 074B     		ldr	r3, .L15
 268 0022 074A     		ldr	r2, .L15
 269 0024 1168     		ldr	r1, [r2]
 270 0026 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 11


 271 0028 0A43     		orrs	r2, r1
 272 002a 1A60     		str	r2, [r3]
 301:Generated_Source\PSoC4/Timer_1.c **** 
 302:Generated_Source\PSoC4/Timer_1.c ****     CyExitCriticalSection(enableInterrupts);
 273              		.loc 1 302 0
 274 002c 0F23     		movs	r3, #15
 275 002e FB18     		adds	r3, r7, r3
 276 0030 1B78     		ldrb	r3, [r3]
 277 0032 1800     		movs	r0, r3
 278 0034 FFF7FEFF 		bl	CyExitCriticalSection
 303:Generated_Source\PSoC4/Timer_1.c **** }
 279              		.loc 1 303 0
 280 0038 C046     		nop
 281 003a BD46     		mov	sp, r7
 282 003c 05B0     		add	sp, sp, #20
 283              		@ sp needed
 284 003e 90BD     		pop	{r4, r7, pc}
 285              	.L16:
 286              		.align	2
 287              	.L15:
 288 0040 00012040 		.word	1075839232
 289 0044 FFFFFFF8 		.word	-117440513
 290              		.cfi_endproc
 291              	.LFE6:
 292              		.size	Timer_1_SetMode, .-Timer_1_SetMode
 293              		.section	.text.Timer_1_SetQDMode,"ax",%progbits
 294              		.align	2
 295              		.global	Timer_1_SetQDMode
 296              		.code	16
 297              		.thumb_func
 298              		.type	Timer_1_SetQDMode, %function
 299              	Timer_1_SetQDMode:
 300              	.LFB7:
 304:Generated_Source\PSoC4/Timer_1.c **** 
 305:Generated_Source\PSoC4/Timer_1.c **** 
 306:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 307:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_SetQDMode
 308:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 309:Generated_Source\PSoC4/Timer_1.c **** *
 310:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 311:Generated_Source\PSoC4/Timer_1.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 312:Generated_Source\PSoC4/Timer_1.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 313:Generated_Source\PSoC4/Timer_1.c **** *
 314:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 315:Generated_Source\PSoC4/Timer_1.c **** *  qdMode: Quadrature Decoder mode
 316:Generated_Source\PSoC4/Timer_1.c **** *   Values:
 317:Generated_Source\PSoC4/Timer_1.c **** *         - Timer_1_MODE_X1 - Counts on phi 1 rising
 318:Generated_Source\PSoC4/Timer_1.c **** *         - Timer_1_MODE_X2 - Counts on both edges of phi1 (2x faster)
 319:Generated_Source\PSoC4/Timer_1.c **** *         - Timer_1_MODE_X4 - Counts on both edges of phi1 and phi2
 320:Generated_Source\PSoC4/Timer_1.c **** *                                        (4x faster)
 321:Generated_Source\PSoC4/Timer_1.c **** *
 322:Generated_Source\PSoC4/Timer_1.c **** * Return:
 323:Generated_Source\PSoC4/Timer_1.c **** *  None
 324:Generated_Source\PSoC4/Timer_1.c **** *
 325:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 326:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_SetQDMode(uint32 qdMode)
 327:Generated_Source\PSoC4/Timer_1.c **** {
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 12


 301              		.loc 1 327 0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 16
 304              		@ frame_needed = 1, uses_anonymous_args = 0
 305 0000 90B5     		push	{r4, r7, lr}
 306              		.cfi_def_cfa_offset 12
 307              		.cfi_offset 4, -12
 308              		.cfi_offset 7, -8
 309              		.cfi_offset 14, -4
 310 0002 85B0     		sub	sp, sp, #20
 311              		.cfi_def_cfa_offset 32
 312 0004 00AF     		add	r7, sp, #0
 313              		.cfi_def_cfa_register 7
 314 0006 7860     		str	r0, [r7, #4]
 328:Generated_Source\PSoC4/Timer_1.c ****     uint8 enableInterrupts;
 329:Generated_Source\PSoC4/Timer_1.c **** 
 330:Generated_Source\PSoC4/Timer_1.c ****     enableInterrupts = CyEnterCriticalSection();
 315              		.loc 1 330 0
 316 0008 0F23     		movs	r3, #15
 317 000a FC18     		adds	r4, r7, r3
 318 000c FFF7FEFF 		bl	CyEnterCriticalSection
 319 0010 0300     		movs	r3, r0
 320 0012 2370     		strb	r3, [r4]
 331:Generated_Source\PSoC4/Timer_1.c **** 
 332:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_CONTROL_REG &= (uint32)~Timer_1_QUAD_MODE_MASK;
 321              		.loc 1 332 0
 322 0014 0A4B     		ldr	r3, .L18
 323 0016 0A4A     		ldr	r2, .L18
 324 0018 1268     		ldr	r2, [r2]
 325 001a 0A49     		ldr	r1, .L18+4
 326 001c 0A40     		ands	r2, r1
 327 001e 1A60     		str	r2, [r3]
 333:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_CONTROL_REG |= qdMode;
 328              		.loc 1 333 0
 329 0020 074B     		ldr	r3, .L18
 330 0022 074A     		ldr	r2, .L18
 331 0024 1168     		ldr	r1, [r2]
 332 0026 7A68     		ldr	r2, [r7, #4]
 333 0028 0A43     		orrs	r2, r1
 334 002a 1A60     		str	r2, [r3]
 334:Generated_Source\PSoC4/Timer_1.c **** 
 335:Generated_Source\PSoC4/Timer_1.c ****     CyExitCriticalSection(enableInterrupts);
 335              		.loc 1 335 0
 336 002c 0F23     		movs	r3, #15
 337 002e FB18     		adds	r3, r7, r3
 338 0030 1B78     		ldrb	r3, [r3]
 339 0032 1800     		movs	r0, r3
 340 0034 FFF7FEFF 		bl	CyExitCriticalSection
 336:Generated_Source\PSoC4/Timer_1.c **** }
 341              		.loc 1 336 0
 342 0038 C046     		nop
 343 003a BD46     		mov	sp, r7
 344 003c 05B0     		add	sp, sp, #20
 345              		@ sp needed
 346 003e 90BD     		pop	{r4, r7, pc}
 347              	.L19:
 348              		.align	2
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 13


 349              	.L18:
 350 0040 00012040 		.word	1075839232
 351 0044 FFFF8FFF 		.word	-7340033
 352              		.cfi_endproc
 353              	.LFE7:
 354              		.size	Timer_1_SetQDMode, .-Timer_1_SetQDMode
 355              		.section	.text.Timer_1_SetPrescaler,"ax",%progbits
 356              		.align	2
 357              		.global	Timer_1_SetPrescaler
 358              		.code	16
 359              		.thumb_func
 360              		.type	Timer_1_SetPrescaler, %function
 361              	Timer_1_SetPrescaler:
 362              	.LFB8:
 337:Generated_Source\PSoC4/Timer_1.c **** 
 338:Generated_Source\PSoC4/Timer_1.c **** 
 339:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 340:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_SetPrescaler
 341:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 342:Generated_Source\PSoC4/Timer_1.c **** *
 343:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 344:Generated_Source\PSoC4/Timer_1.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 345:Generated_Source\PSoC4/Timer_1.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 346:Generated_Source\PSoC4/Timer_1.c **** *
 347:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 348:Generated_Source\PSoC4/Timer_1.c **** *  prescaler: Prescaler divider value
 349:Generated_Source\PSoC4/Timer_1.c **** *   Values:
 350:Generated_Source\PSoC4/Timer_1.c **** *         - Timer_1_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 351:Generated_Source\PSoC4/Timer_1.c **** *         - Timer_1_PRESCALE_DIVBY2    - Divide by 2
 352:Generated_Source\PSoC4/Timer_1.c **** *         - Timer_1_PRESCALE_DIVBY4    - Divide by 4
 353:Generated_Source\PSoC4/Timer_1.c **** *         - Timer_1_PRESCALE_DIVBY8    - Divide by 8
 354:Generated_Source\PSoC4/Timer_1.c **** *         - Timer_1_PRESCALE_DIVBY16   - Divide by 16
 355:Generated_Source\PSoC4/Timer_1.c **** *         - Timer_1_PRESCALE_DIVBY32   - Divide by 32
 356:Generated_Source\PSoC4/Timer_1.c **** *         - Timer_1_PRESCALE_DIVBY64   - Divide by 64
 357:Generated_Source\PSoC4/Timer_1.c **** *         - Timer_1_PRESCALE_DIVBY128  - Divide by 128
 358:Generated_Source\PSoC4/Timer_1.c **** *
 359:Generated_Source\PSoC4/Timer_1.c **** * Return:
 360:Generated_Source\PSoC4/Timer_1.c **** *  None
 361:Generated_Source\PSoC4/Timer_1.c **** *
 362:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 363:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_SetPrescaler(uint32 prescaler)
 364:Generated_Source\PSoC4/Timer_1.c **** {
 363              		.loc 1 364 0
 364              		.cfi_startproc
 365              		@ args = 0, pretend = 0, frame = 16
 366              		@ frame_needed = 1, uses_anonymous_args = 0
 367 0000 90B5     		push	{r4, r7, lr}
 368              		.cfi_def_cfa_offset 12
 369              		.cfi_offset 4, -12
 370              		.cfi_offset 7, -8
 371              		.cfi_offset 14, -4
 372 0002 85B0     		sub	sp, sp, #20
 373              		.cfi_def_cfa_offset 32
 374 0004 00AF     		add	r7, sp, #0
 375              		.cfi_def_cfa_register 7
 376 0006 7860     		str	r0, [r7, #4]
 365:Generated_Source\PSoC4/Timer_1.c ****     uint8 enableInterrupts;
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 14


 366:Generated_Source\PSoC4/Timer_1.c **** 
 367:Generated_Source\PSoC4/Timer_1.c ****     enableInterrupts = CyEnterCriticalSection();
 377              		.loc 1 367 0
 378 0008 0F23     		movs	r3, #15
 379 000a FC18     		adds	r4, r7, r3
 380 000c FFF7FEFF 		bl	CyEnterCriticalSection
 381 0010 0300     		movs	r3, r0
 382 0012 2370     		strb	r3, [r4]
 368:Generated_Source\PSoC4/Timer_1.c **** 
 369:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_CONTROL_REG &= (uint32)~Timer_1_PRESCALER_MASK;
 383              		.loc 1 369 0
 384 0014 0A4B     		ldr	r3, .L21
 385 0016 0A4A     		ldr	r2, .L21
 386 0018 1268     		ldr	r2, [r2]
 387 001a 0A49     		ldr	r1, .L21+4
 388 001c 0A40     		ands	r2, r1
 389 001e 1A60     		str	r2, [r3]
 370:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_CONTROL_REG |= prescaler;
 390              		.loc 1 370 0
 391 0020 074B     		ldr	r3, .L21
 392 0022 074A     		ldr	r2, .L21
 393 0024 1168     		ldr	r1, [r2]
 394 0026 7A68     		ldr	r2, [r7, #4]
 395 0028 0A43     		orrs	r2, r1
 396 002a 1A60     		str	r2, [r3]
 371:Generated_Source\PSoC4/Timer_1.c **** 
 372:Generated_Source\PSoC4/Timer_1.c ****     CyExitCriticalSection(enableInterrupts);
 397              		.loc 1 372 0
 398 002c 0F23     		movs	r3, #15
 399 002e FB18     		adds	r3, r7, r3
 400 0030 1B78     		ldrb	r3, [r3]
 401 0032 1800     		movs	r0, r3
 402 0034 FFF7FEFF 		bl	CyExitCriticalSection
 373:Generated_Source\PSoC4/Timer_1.c **** }
 403              		.loc 1 373 0
 404 0038 C046     		nop
 405 003a BD46     		mov	sp, r7
 406 003c 05B0     		add	sp, sp, #20
 407              		@ sp needed
 408 003e 90BD     		pop	{r4, r7, pc}
 409              	.L22:
 410              		.align	2
 411              	.L21:
 412 0040 00012040 		.word	1075839232
 413 0044 FF00FFFF 		.word	-65281
 414              		.cfi_endproc
 415              	.LFE8:
 416              		.size	Timer_1_SetPrescaler, .-Timer_1_SetPrescaler
 417              		.section	.text.Timer_1_SetOneShot,"ax",%progbits
 418              		.align	2
 419              		.global	Timer_1_SetOneShot
 420              		.code	16
 421              		.thumb_func
 422              		.type	Timer_1_SetOneShot, %function
 423              	Timer_1_SetOneShot:
 424              	.LFB9:
 374:Generated_Source\PSoC4/Timer_1.c **** 
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 15


 375:Generated_Source\PSoC4/Timer_1.c **** 
 376:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 377:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_SetOneShot
 378:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 379:Generated_Source\PSoC4/Timer_1.c **** *
 380:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 381:Generated_Source\PSoC4/Timer_1.c **** *  Writes the register that controls whether the Timer_1 runs
 382:Generated_Source\PSoC4/Timer_1.c **** *  continuously or stops when terminal count is reached.  By default the
 383:Generated_Source\PSoC4/Timer_1.c **** *  Timer_1 operates in the continuous mode.
 384:Generated_Source\PSoC4/Timer_1.c **** *
 385:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 386:Generated_Source\PSoC4/Timer_1.c **** *  oneShotEnable
 387:Generated_Source\PSoC4/Timer_1.c **** *   Values:
 388:Generated_Source\PSoC4/Timer_1.c **** *     - 0 - Continuous
 389:Generated_Source\PSoC4/Timer_1.c **** *     - 1 - Enable One Shot
 390:Generated_Source\PSoC4/Timer_1.c **** *
 391:Generated_Source\PSoC4/Timer_1.c **** * Return:
 392:Generated_Source\PSoC4/Timer_1.c **** *  None
 393:Generated_Source\PSoC4/Timer_1.c **** *
 394:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 395:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_SetOneShot(uint32 oneShotEnable)
 396:Generated_Source\PSoC4/Timer_1.c **** {
 425              		.loc 1 396 0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 16
 428              		@ frame_needed = 1, uses_anonymous_args = 0
 429 0000 90B5     		push	{r4, r7, lr}
 430              		.cfi_def_cfa_offset 12
 431              		.cfi_offset 4, -12
 432              		.cfi_offset 7, -8
 433              		.cfi_offset 14, -4
 434 0002 85B0     		sub	sp, sp, #20
 435              		.cfi_def_cfa_offset 32
 436 0004 00AF     		add	r7, sp, #0
 437              		.cfi_def_cfa_register 7
 438 0006 7860     		str	r0, [r7, #4]
 397:Generated_Source\PSoC4/Timer_1.c ****     uint8 enableInterrupts;
 398:Generated_Source\PSoC4/Timer_1.c **** 
 399:Generated_Source\PSoC4/Timer_1.c ****     enableInterrupts = CyEnterCriticalSection();
 439              		.loc 1 399 0
 440 0008 0F23     		movs	r3, #15
 441 000a FC18     		adds	r4, r7, r3
 442 000c FFF7FEFF 		bl	CyEnterCriticalSection
 443 0010 0300     		movs	r3, r0
 444 0012 2370     		strb	r3, [r4]
 400:Generated_Source\PSoC4/Timer_1.c **** 
 401:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_CONTROL_REG &= (uint32)~Timer_1_ONESHOT_MASK;
 445              		.loc 1 401 0
 446 0014 0C4B     		ldr	r3, .L24
 447 0016 0C4A     		ldr	r2, .L24
 448 0018 1268     		ldr	r2, [r2]
 449 001a 0C49     		ldr	r1, .L24+4
 450 001c 0A40     		ands	r2, r1
 451 001e 1A60     		str	r2, [r3]
 402:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_CONTROL_REG |= ((uint32)((oneShotEnable & Timer_1_1BIT_MASK) <<
 452              		.loc 1 402 0
 453 0020 094B     		ldr	r3, .L24
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 16


 454 0022 094A     		ldr	r2, .L24
 455 0024 1168     		ldr	r1, [r2]
 456 0026 7A68     		ldr	r2, [r7, #4]
 457 0028 9004     		lsls	r0, r2, #18
 458 002a 8022     		movs	r2, #128
 459 002c D202     		lsls	r2, r2, #11
 460 002e 0240     		ands	r2, r0
 461 0030 0A43     		orrs	r2, r1
 462 0032 1A60     		str	r2, [r3]
 403:Generated_Source\PSoC4/Timer_1.c ****                                                                Timer_1_ONESHOT_SHIFT));
 404:Generated_Source\PSoC4/Timer_1.c **** 
 405:Generated_Source\PSoC4/Timer_1.c ****     CyExitCriticalSection(enableInterrupts);
 463              		.loc 1 405 0
 464 0034 0F23     		movs	r3, #15
 465 0036 FB18     		adds	r3, r7, r3
 466 0038 1B78     		ldrb	r3, [r3]
 467 003a 1800     		movs	r0, r3
 468 003c FFF7FEFF 		bl	CyExitCriticalSection
 406:Generated_Source\PSoC4/Timer_1.c **** }
 469              		.loc 1 406 0
 470 0040 C046     		nop
 471 0042 BD46     		mov	sp, r7
 472 0044 05B0     		add	sp, sp, #20
 473              		@ sp needed
 474 0046 90BD     		pop	{r4, r7, pc}
 475              	.L25:
 476              		.align	2
 477              	.L24:
 478 0048 00012040 		.word	1075839232
 479 004c FFFFFBFF 		.word	-262145
 480              		.cfi_endproc
 481              	.LFE9:
 482              		.size	Timer_1_SetOneShot, .-Timer_1_SetOneShot
 483              		.section	.text.Timer_1_SetPWMMode,"ax",%progbits
 484              		.align	2
 485              		.global	Timer_1_SetPWMMode
 486              		.code	16
 487              		.thumb_func
 488              		.type	Timer_1_SetPWMMode, %function
 489              	Timer_1_SetPWMMode:
 490              	.LFB10:
 407:Generated_Source\PSoC4/Timer_1.c **** 
 408:Generated_Source\PSoC4/Timer_1.c **** 
 409:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 410:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_SetPWMMode
 411:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 412:Generated_Source\PSoC4/Timer_1.c **** *
 413:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 414:Generated_Source\PSoC4/Timer_1.c **** *  Writes the control register that determines what mode of operation the PWM
 415:Generated_Source\PSoC4/Timer_1.c **** *  output lines are driven in.  There is a setting for what to do on a
 416:Generated_Source\PSoC4/Timer_1.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 417:Generated_Source\PSoC4/Timer_1.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 418:Generated_Source\PSoC4/Timer_1.c **** *  the mode.
 419:Generated_Source\PSoC4/Timer_1.c **** *
 420:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 421:Generated_Source\PSoC4/Timer_1.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 422:Generated_Source\PSoC4/Timer_1.c **** *  for each of the three or use one of the preconfigured PWM settings.
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 17


 423:Generated_Source\PSoC4/Timer_1.c **** *   Values:
 424:Generated_Source\PSoC4/Timer_1.c **** *     - CC_MATCH_SET        - Set on comparison match
 425:Generated_Source\PSoC4/Timer_1.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 426:Generated_Source\PSoC4/Timer_1.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 427:Generated_Source\PSoC4/Timer_1.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 428:Generated_Source\PSoC4/Timer_1.c **** *     - OVERLOW_SET         - Set on overflow
 429:Generated_Source\PSoC4/Timer_1.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 430:Generated_Source\PSoC4/Timer_1.c **** *     - OVERLOW_INVERT      - Invert on overflow
 431:Generated_Source\PSoC4/Timer_1.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 432:Generated_Source\PSoC4/Timer_1.c **** *     - UNDERFLOW_SET       - Set on underflow
 433:Generated_Source\PSoC4/Timer_1.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 434:Generated_Source\PSoC4/Timer_1.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 435:Generated_Source\PSoC4/Timer_1.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 436:Generated_Source\PSoC4/Timer_1.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 437:Generated_Source\PSoC4/Timer_1.c **** *                             with up counting mode
 438:Generated_Source\PSoC4/Timer_1.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 439:Generated_Source\PSoC4/Timer_1.c **** *                             with down counting mode
 440:Generated_Source\PSoC4/Timer_1.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 441:Generated_Source\PSoC4/Timer_1.c **** *                             combined with up/down 0 mode
 442:Generated_Source\PSoC4/Timer_1.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 443:Generated_Source\PSoC4/Timer_1.c **** *                             with up/down 1 mode
 444:Generated_Source\PSoC4/Timer_1.c **** *
 445:Generated_Source\PSoC4/Timer_1.c **** * Return:
 446:Generated_Source\PSoC4/Timer_1.c **** *  None
 447:Generated_Source\PSoC4/Timer_1.c **** *
 448:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 449:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_SetPWMMode(uint32 modeMask)
 450:Generated_Source\PSoC4/Timer_1.c **** {
 491              		.loc 1 450 0
 492              		.cfi_startproc
 493              		@ args = 0, pretend = 0, frame = 8
 494              		@ frame_needed = 1, uses_anonymous_args = 0
 495 0000 80B5     		push	{r7, lr}
 496              		.cfi_def_cfa_offset 8
 497              		.cfi_offset 7, -8
 498              		.cfi_offset 14, -4
 499 0002 82B0     		sub	sp, sp, #8
 500              		.cfi_def_cfa_offset 16
 501 0004 00AF     		add	r7, sp, #0
 502              		.cfi_def_cfa_register 7
 503 0006 7860     		str	r0, [r7, #4]
 451:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_TRIG_CONTROL2_REG = (modeMask & Timer_1_6BIT_MASK);
 504              		.loc 1 451 0
 505 0008 044B     		ldr	r3, .L27
 506 000a 7A68     		ldr	r2, [r7, #4]
 507 000c 3F21     		movs	r1, #63
 508 000e 0A40     		ands	r2, r1
 509 0010 1A60     		str	r2, [r3]
 452:Generated_Source\PSoC4/Timer_1.c **** }
 510              		.loc 1 452 0
 511 0012 C046     		nop
 512 0014 BD46     		mov	sp, r7
 513 0016 02B0     		add	sp, sp, #8
 514              		@ sp needed
 515 0018 80BD     		pop	{r7, pc}
 516              	.L28:
 517 001a C046     		.align	2
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 18


 518              	.L27:
 519 001c 28012040 		.word	1075839272
 520              		.cfi_endproc
 521              	.LFE10:
 522              		.size	Timer_1_SetPWMMode, .-Timer_1_SetPWMMode
 523              		.section	.text.Timer_1_SetPWMSyncKill,"ax",%progbits
 524              		.align	2
 525              		.global	Timer_1_SetPWMSyncKill
 526              		.code	16
 527              		.thumb_func
 528              		.type	Timer_1_SetPWMSyncKill, %function
 529              	Timer_1_SetPWMSyncKill:
 530              	.LFB11:
 453:Generated_Source\PSoC4/Timer_1.c **** 
 454:Generated_Source\PSoC4/Timer_1.c **** 
 455:Generated_Source\PSoC4/Timer_1.c **** 
 456:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 457:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_SetPWMSyncKill
 458:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 459:Generated_Source\PSoC4/Timer_1.c **** *
 460:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 461:Generated_Source\PSoC4/Timer_1.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 462:Generated_Source\PSoC4/Timer_1.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 463:Generated_Source\PSoC4/Timer_1.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 464:Generated_Source\PSoC4/Timer_1.c **** *  and PWM with dead time modes.
 465:Generated_Source\PSoC4/Timer_1.c **** *
 466:Generated_Source\PSoC4/Timer_1.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 467:Generated_Source\PSoC4/Timer_1.c **** *  signals until the next terminal count.
 468:Generated_Source\PSoC4/Timer_1.c **** *
 469:Generated_Source\PSoC4/Timer_1.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 470:Generated_Source\PSoC4/Timer_1.c **** *  signals when the kill signal is present.  This mode should only be used
 471:Generated_Source\PSoC4/Timer_1.c **** *  when the kill signal (stop input) is configured in the pass through mode
 472:Generated_Source\PSoC4/Timer_1.c **** *  (Level sensitive signal).
 473:Generated_Source\PSoC4/Timer_1.c **** 
 474:Generated_Source\PSoC4/Timer_1.c **** *
 475:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 476:Generated_Source\PSoC4/Timer_1.c **** *  syncKillEnable
 477:Generated_Source\PSoC4/Timer_1.c **** *   Values:
 478:Generated_Source\PSoC4/Timer_1.c **** *     - 0 - Asynchronous
 479:Generated_Source\PSoC4/Timer_1.c **** *     - 1 - Synchronous
 480:Generated_Source\PSoC4/Timer_1.c **** *
 481:Generated_Source\PSoC4/Timer_1.c **** * Return:
 482:Generated_Source\PSoC4/Timer_1.c **** *  None
 483:Generated_Source\PSoC4/Timer_1.c **** *
 484:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 485:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_SetPWMSyncKill(uint32 syncKillEnable)
 486:Generated_Source\PSoC4/Timer_1.c **** {
 531              		.loc 1 486 0
 532              		.cfi_startproc
 533              		@ args = 0, pretend = 0, frame = 16
 534              		@ frame_needed = 1, uses_anonymous_args = 0
 535 0000 90B5     		push	{r4, r7, lr}
 536              		.cfi_def_cfa_offset 12
 537              		.cfi_offset 4, -12
 538              		.cfi_offset 7, -8
 539              		.cfi_offset 14, -4
 540 0002 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 19


 541              		.cfi_def_cfa_offset 32
 542 0004 00AF     		add	r7, sp, #0
 543              		.cfi_def_cfa_register 7
 544 0006 7860     		str	r0, [r7, #4]
 487:Generated_Source\PSoC4/Timer_1.c ****     uint8 enableInterrupts;
 488:Generated_Source\PSoC4/Timer_1.c **** 
 489:Generated_Source\PSoC4/Timer_1.c ****     enableInterrupts = CyEnterCriticalSection();
 545              		.loc 1 489 0
 546 0008 0F23     		movs	r3, #15
 547 000a FC18     		adds	r4, r7, r3
 548 000c FFF7FEFF 		bl	CyEnterCriticalSection
 549 0010 0300     		movs	r3, r0
 550 0012 2370     		strb	r3, [r4]
 490:Generated_Source\PSoC4/Timer_1.c **** 
 491:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_CONTROL_REG &= (uint32)~Timer_1_PWM_SYNC_KILL_MASK;
 551              		.loc 1 491 0
 552 0014 0C4B     		ldr	r3, .L30
 553 0016 0C4A     		ldr	r2, .L30
 554 0018 1268     		ldr	r2, [r2]
 555 001a 0421     		movs	r1, #4
 556 001c 8A43     		bics	r2, r1
 557 001e 1A60     		str	r2, [r3]
 492:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_CONTROL_REG |= ((uint32)((syncKillEnable & Timer_1_1BIT_MASK)  <<
 558              		.loc 1 492 0
 559 0020 094B     		ldr	r3, .L30
 560 0022 094A     		ldr	r2, .L30
 561 0024 1168     		ldr	r1, [r2]
 562 0026 7A68     		ldr	r2, [r7, #4]
 563 0028 9200     		lsls	r2, r2, #2
 564 002a 0420     		movs	r0, #4
 565 002c 0240     		ands	r2, r0
 566 002e 0A43     		orrs	r2, r1
 567 0030 1A60     		str	r2, [r3]
 493:Generated_Source\PSoC4/Timer_1.c ****                                                Timer_1_PWM_SYNC_KILL_SHIFT));
 494:Generated_Source\PSoC4/Timer_1.c **** 
 495:Generated_Source\PSoC4/Timer_1.c ****     CyExitCriticalSection(enableInterrupts);
 568              		.loc 1 495 0
 569 0032 0F23     		movs	r3, #15
 570 0034 FB18     		adds	r3, r7, r3
 571 0036 1B78     		ldrb	r3, [r3]
 572 0038 1800     		movs	r0, r3
 573 003a FFF7FEFF 		bl	CyExitCriticalSection
 496:Generated_Source\PSoC4/Timer_1.c **** }
 574              		.loc 1 496 0
 575 003e C046     		nop
 576 0040 BD46     		mov	sp, r7
 577 0042 05B0     		add	sp, sp, #20
 578              		@ sp needed
 579 0044 90BD     		pop	{r4, r7, pc}
 580              	.L31:
 581 0046 C046     		.align	2
 582              	.L30:
 583 0048 00012040 		.word	1075839232
 584              		.cfi_endproc
 585              	.LFE11:
 586              		.size	Timer_1_SetPWMSyncKill, .-Timer_1_SetPWMSyncKill
 587              		.section	.text.Timer_1_SetPWMStopOnKill,"ax",%progbits
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 20


 588              		.align	2
 589              		.global	Timer_1_SetPWMStopOnKill
 590              		.code	16
 591              		.thumb_func
 592              		.type	Timer_1_SetPWMStopOnKill, %function
 593              	Timer_1_SetPWMStopOnKill:
 594              	.LFB12:
 497:Generated_Source\PSoC4/Timer_1.c **** 
 498:Generated_Source\PSoC4/Timer_1.c **** 
 499:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 500:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_SetPWMStopOnKill
 501:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 502:Generated_Source\PSoC4/Timer_1.c **** *
 503:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 504:Generated_Source\PSoC4/Timer_1.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 505:Generated_Source\PSoC4/Timer_1.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 506:Generated_Source\PSoC4/Timer_1.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 507:Generated_Source\PSoC4/Timer_1.c **** *
 508:Generated_Source\PSoC4/Timer_1.c **** *
 509:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 510:Generated_Source\PSoC4/Timer_1.c **** *  stopOnKillEnable
 511:Generated_Source\PSoC4/Timer_1.c **** *   Values:
 512:Generated_Source\PSoC4/Timer_1.c **** *     - 0 - Don't stop
 513:Generated_Source\PSoC4/Timer_1.c **** *     - 1 - Stop
 514:Generated_Source\PSoC4/Timer_1.c **** *
 515:Generated_Source\PSoC4/Timer_1.c **** * Return:
 516:Generated_Source\PSoC4/Timer_1.c **** *  None
 517:Generated_Source\PSoC4/Timer_1.c **** *
 518:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 519:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_SetPWMStopOnKill(uint32 stopOnKillEnable)
 520:Generated_Source\PSoC4/Timer_1.c **** {
 595              		.loc 1 520 0
 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 16
 598              		@ frame_needed = 1, uses_anonymous_args = 0
 599 0000 90B5     		push	{r4, r7, lr}
 600              		.cfi_def_cfa_offset 12
 601              		.cfi_offset 4, -12
 602              		.cfi_offset 7, -8
 603              		.cfi_offset 14, -4
 604 0002 85B0     		sub	sp, sp, #20
 605              		.cfi_def_cfa_offset 32
 606 0004 00AF     		add	r7, sp, #0
 607              		.cfi_def_cfa_register 7
 608 0006 7860     		str	r0, [r7, #4]
 521:Generated_Source\PSoC4/Timer_1.c ****     uint8 enableInterrupts;
 522:Generated_Source\PSoC4/Timer_1.c **** 
 523:Generated_Source\PSoC4/Timer_1.c ****     enableInterrupts = CyEnterCriticalSection();
 609              		.loc 1 523 0
 610 0008 0F23     		movs	r3, #15
 611 000a FC18     		adds	r4, r7, r3
 612 000c FFF7FEFF 		bl	CyEnterCriticalSection
 613 0010 0300     		movs	r3, r0
 614 0012 2370     		strb	r3, [r4]
 524:Generated_Source\PSoC4/Timer_1.c **** 
 525:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_CONTROL_REG &= (uint32)~Timer_1_PWM_STOP_KILL_MASK;
 615              		.loc 1 525 0
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 21


 616 0014 0C4B     		ldr	r3, .L33
 617 0016 0C4A     		ldr	r2, .L33
 618 0018 1268     		ldr	r2, [r2]
 619 001a 0821     		movs	r1, #8
 620 001c 8A43     		bics	r2, r1
 621 001e 1A60     		str	r2, [r3]
 526:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_CONTROL_REG |= ((uint32)((stopOnKillEnable & Timer_1_1BIT_MASK)  <<
 622              		.loc 1 526 0
 623 0020 094B     		ldr	r3, .L33
 624 0022 094A     		ldr	r2, .L33
 625 0024 1168     		ldr	r1, [r2]
 626 0026 7A68     		ldr	r2, [r7, #4]
 627 0028 D200     		lsls	r2, r2, #3
 628 002a 0820     		movs	r0, #8
 629 002c 0240     		ands	r2, r0
 630 002e 0A43     		orrs	r2, r1
 631 0030 1A60     		str	r2, [r3]
 527:Generated_Source\PSoC4/Timer_1.c ****                                                          Timer_1_PWM_STOP_KILL_SHIFT));
 528:Generated_Source\PSoC4/Timer_1.c **** 
 529:Generated_Source\PSoC4/Timer_1.c ****     CyExitCriticalSection(enableInterrupts);
 632              		.loc 1 529 0
 633 0032 0F23     		movs	r3, #15
 634 0034 FB18     		adds	r3, r7, r3
 635 0036 1B78     		ldrb	r3, [r3]
 636 0038 1800     		movs	r0, r3
 637 003a FFF7FEFF 		bl	CyExitCriticalSection
 530:Generated_Source\PSoC4/Timer_1.c **** }
 638              		.loc 1 530 0
 639 003e C046     		nop
 640 0040 BD46     		mov	sp, r7
 641 0042 05B0     		add	sp, sp, #20
 642              		@ sp needed
 643 0044 90BD     		pop	{r4, r7, pc}
 644              	.L34:
 645 0046 C046     		.align	2
 646              	.L33:
 647 0048 00012040 		.word	1075839232
 648              		.cfi_endproc
 649              	.LFE12:
 650              		.size	Timer_1_SetPWMStopOnKill, .-Timer_1_SetPWMStopOnKill
 651              		.section	.text.Timer_1_SetPWMDeadTime,"ax",%progbits
 652              		.align	2
 653              		.global	Timer_1_SetPWMDeadTime
 654              		.code	16
 655              		.thumb_func
 656              		.type	Timer_1_SetPWMDeadTime, %function
 657              	Timer_1_SetPWMDeadTime:
 658              	.LFB13:
 531:Generated_Source\PSoC4/Timer_1.c **** 
 532:Generated_Source\PSoC4/Timer_1.c **** 
 533:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 534:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_SetPWMDeadTime
 535:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 536:Generated_Source\PSoC4/Timer_1.c **** *
 537:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 538:Generated_Source\PSoC4/Timer_1.c **** *  Writes the dead time control value.  This value delays the rising edge of
 539:Generated_Source\PSoC4/Timer_1.c **** *  both the line and line_n signals the designated number of cycles resulting
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 22


 540:Generated_Source\PSoC4/Timer_1.c **** *  in both signals being inactive for that many cycles.  This functionality is
 541:Generated_Source\PSoC4/Timer_1.c **** *  only applicable to the PWM in the dead time mode.
 542:Generated_Source\PSoC4/Timer_1.c **** 
 543:Generated_Source\PSoC4/Timer_1.c **** *
 544:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 545:Generated_Source\PSoC4/Timer_1.c **** *  Dead time to insert
 546:Generated_Source\PSoC4/Timer_1.c **** *   Values: 0 to 255
 547:Generated_Source\PSoC4/Timer_1.c **** *
 548:Generated_Source\PSoC4/Timer_1.c **** * Return:
 549:Generated_Source\PSoC4/Timer_1.c **** *  None
 550:Generated_Source\PSoC4/Timer_1.c **** *
 551:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 552:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_SetPWMDeadTime(uint32 deadTime)
 553:Generated_Source\PSoC4/Timer_1.c **** {
 659              		.loc 1 553 0
 660              		.cfi_startproc
 661              		@ args = 0, pretend = 0, frame = 16
 662              		@ frame_needed = 1, uses_anonymous_args = 0
 663 0000 90B5     		push	{r4, r7, lr}
 664              		.cfi_def_cfa_offset 12
 665              		.cfi_offset 4, -12
 666              		.cfi_offset 7, -8
 667              		.cfi_offset 14, -4
 668 0002 85B0     		sub	sp, sp, #20
 669              		.cfi_def_cfa_offset 32
 670 0004 00AF     		add	r7, sp, #0
 671              		.cfi_def_cfa_register 7
 672 0006 7860     		str	r0, [r7, #4]
 554:Generated_Source\PSoC4/Timer_1.c ****     uint8 enableInterrupts;
 555:Generated_Source\PSoC4/Timer_1.c **** 
 556:Generated_Source\PSoC4/Timer_1.c ****     enableInterrupts = CyEnterCriticalSection();
 673              		.loc 1 556 0
 674 0008 0F23     		movs	r3, #15
 675 000a FC18     		adds	r4, r7, r3
 676 000c FFF7FEFF 		bl	CyEnterCriticalSection
 677 0010 0300     		movs	r3, r0
 678 0012 2370     		strb	r3, [r4]
 557:Generated_Source\PSoC4/Timer_1.c **** 
 558:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_CONTROL_REG &= (uint32)~Timer_1_PRESCALER_MASK;
 679              		.loc 1 558 0
 680 0014 0C4B     		ldr	r3, .L36
 681 0016 0C4A     		ldr	r2, .L36
 682 0018 1268     		ldr	r2, [r2]
 683 001a 0C49     		ldr	r1, .L36+4
 684 001c 0A40     		ands	r2, r1
 685 001e 1A60     		str	r2, [r3]
 559:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_CONTROL_REG |= ((uint32)((deadTime & Timer_1_8BIT_MASK) <<
 686              		.loc 1 559 0
 687 0020 094B     		ldr	r3, .L36
 688 0022 094A     		ldr	r2, .L36
 689 0024 1168     		ldr	r1, [r2]
 690 0026 7A68     		ldr	r2, [r7, #4]
 691 0028 1202     		lsls	r2, r2, #8
 692 002a 1204     		lsls	r2, r2, #16
 693 002c 120C     		lsrs	r2, r2, #16
 694 002e 0A43     		orrs	r2, r1
 695 0030 1A60     		str	r2, [r3]
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 23


 560:Generated_Source\PSoC4/Timer_1.c ****                                                           Timer_1_PRESCALER_SHIFT));
 561:Generated_Source\PSoC4/Timer_1.c **** 
 562:Generated_Source\PSoC4/Timer_1.c ****     CyExitCriticalSection(enableInterrupts);
 696              		.loc 1 562 0
 697 0032 0F23     		movs	r3, #15
 698 0034 FB18     		adds	r3, r7, r3
 699 0036 1B78     		ldrb	r3, [r3]
 700 0038 1800     		movs	r0, r3
 701 003a FFF7FEFF 		bl	CyExitCriticalSection
 563:Generated_Source\PSoC4/Timer_1.c **** }
 702              		.loc 1 563 0
 703 003e C046     		nop
 704 0040 BD46     		mov	sp, r7
 705 0042 05B0     		add	sp, sp, #20
 706              		@ sp needed
 707 0044 90BD     		pop	{r4, r7, pc}
 708              	.L37:
 709 0046 C046     		.align	2
 710              	.L36:
 711 0048 00012040 		.word	1075839232
 712 004c FF00FFFF 		.word	-65281
 713              		.cfi_endproc
 714              	.LFE13:
 715              		.size	Timer_1_SetPWMDeadTime, .-Timer_1_SetPWMDeadTime
 716              		.section	.text.Timer_1_SetPWMInvert,"ax",%progbits
 717              		.align	2
 718              		.global	Timer_1_SetPWMInvert
 719              		.code	16
 720              		.thumb_func
 721              		.type	Timer_1_SetPWMInvert, %function
 722              	Timer_1_SetPWMInvert:
 723              	.LFB14:
 564:Generated_Source\PSoC4/Timer_1.c **** 
 565:Generated_Source\PSoC4/Timer_1.c **** 
 566:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 567:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_SetPWMInvert
 568:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 569:Generated_Source\PSoC4/Timer_1.c **** *
 570:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 571:Generated_Source\PSoC4/Timer_1.c **** *  Writes the bits that control whether the line and line_n outputs are
 572:Generated_Source\PSoC4/Timer_1.c **** *  inverted from their normal output values.  This functionality is only
 573:Generated_Source\PSoC4/Timer_1.c **** *  applicable to the three PWM modes.
 574:Generated_Source\PSoC4/Timer_1.c **** *
 575:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 576:Generated_Source\PSoC4/Timer_1.c **** *  mask: Mask of outputs to invert.
 577:Generated_Source\PSoC4/Timer_1.c **** *   Values:
 578:Generated_Source\PSoC4/Timer_1.c **** *         - Timer_1_INVERT_LINE   - Inverts the line output
 579:Generated_Source\PSoC4/Timer_1.c **** *         - Timer_1_INVERT_LINE_N - Inverts the line_n output
 580:Generated_Source\PSoC4/Timer_1.c **** *
 581:Generated_Source\PSoC4/Timer_1.c **** * Return:
 582:Generated_Source\PSoC4/Timer_1.c **** *  None
 583:Generated_Source\PSoC4/Timer_1.c **** *
 584:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 585:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_SetPWMInvert(uint32 mask)
 586:Generated_Source\PSoC4/Timer_1.c **** {
 724              		.loc 1 586 0
 725              		.cfi_startproc
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 24


 726              		@ args = 0, pretend = 0, frame = 16
 727              		@ frame_needed = 1, uses_anonymous_args = 0
 728 0000 90B5     		push	{r4, r7, lr}
 729              		.cfi_def_cfa_offset 12
 730              		.cfi_offset 4, -12
 731              		.cfi_offset 7, -8
 732              		.cfi_offset 14, -4
 733 0002 85B0     		sub	sp, sp, #20
 734              		.cfi_def_cfa_offset 32
 735 0004 00AF     		add	r7, sp, #0
 736              		.cfi_def_cfa_register 7
 737 0006 7860     		str	r0, [r7, #4]
 587:Generated_Source\PSoC4/Timer_1.c ****     uint8 enableInterrupts;
 588:Generated_Source\PSoC4/Timer_1.c **** 
 589:Generated_Source\PSoC4/Timer_1.c ****     enableInterrupts = CyEnterCriticalSection();
 738              		.loc 1 589 0
 739 0008 0F23     		movs	r3, #15
 740 000a FC18     		adds	r4, r7, r3
 741 000c FFF7FEFF 		bl	CyEnterCriticalSection
 742 0010 0300     		movs	r3, r0
 743 0012 2370     		strb	r3, [r4]
 590:Generated_Source\PSoC4/Timer_1.c **** 
 591:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_CONTROL_REG &= (uint32)~Timer_1_INV_OUT_MASK;
 744              		.loc 1 591 0
 745 0014 0A4B     		ldr	r3, .L39
 746 0016 0A4A     		ldr	r2, .L39
 747 0018 1268     		ldr	r2, [r2]
 748 001a 0A49     		ldr	r1, .L39+4
 749 001c 0A40     		ands	r2, r1
 750 001e 1A60     		str	r2, [r3]
 592:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_CONTROL_REG |= mask;
 751              		.loc 1 592 0
 752 0020 074B     		ldr	r3, .L39
 753 0022 074A     		ldr	r2, .L39
 754 0024 1168     		ldr	r1, [r2]
 755 0026 7A68     		ldr	r2, [r7, #4]
 756 0028 0A43     		orrs	r2, r1
 757 002a 1A60     		str	r2, [r3]
 593:Generated_Source\PSoC4/Timer_1.c **** 
 594:Generated_Source\PSoC4/Timer_1.c ****     CyExitCriticalSection(enableInterrupts);
 758              		.loc 1 594 0
 759 002c 0F23     		movs	r3, #15
 760 002e FB18     		adds	r3, r7, r3
 761 0030 1B78     		ldrb	r3, [r3]
 762 0032 1800     		movs	r0, r3
 763 0034 FFF7FEFF 		bl	CyExitCriticalSection
 595:Generated_Source\PSoC4/Timer_1.c **** }
 764              		.loc 1 595 0
 765 0038 C046     		nop
 766 003a BD46     		mov	sp, r7
 767 003c 05B0     		add	sp, sp, #20
 768              		@ sp needed
 769 003e 90BD     		pop	{r4, r7, pc}
 770              	.L40:
 771              		.align	2
 772              	.L39:
 773 0040 00012040 		.word	1075839232
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 25


 774 0044 FFFFCFFF 		.word	-3145729
 775              		.cfi_endproc
 776              	.LFE14:
 777              		.size	Timer_1_SetPWMInvert, .-Timer_1_SetPWMInvert
 778              		.section	.text.Timer_1_WriteCounter,"ax",%progbits
 779              		.align	2
 780              		.global	Timer_1_WriteCounter
 781              		.code	16
 782              		.thumb_func
 783              		.type	Timer_1_WriteCounter, %function
 784              	Timer_1_WriteCounter:
 785              	.LFB15:
 596:Generated_Source\PSoC4/Timer_1.c **** 
 597:Generated_Source\PSoC4/Timer_1.c **** 
 598:Generated_Source\PSoC4/Timer_1.c **** 
 599:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 600:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_WriteCounter
 601:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 602:Generated_Source\PSoC4/Timer_1.c **** *
 603:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 604:Generated_Source\PSoC4/Timer_1.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 605:Generated_Source\PSoC4/Timer_1.c **** *  setting the counter (not the period) to the value written. It is not
 606:Generated_Source\PSoC4/Timer_1.c **** *  advised to write to this field when the counter is running.
 607:Generated_Source\PSoC4/Timer_1.c **** *
 608:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 609:Generated_Source\PSoC4/Timer_1.c **** *  count: value to write
 610:Generated_Source\PSoC4/Timer_1.c **** *
 611:Generated_Source\PSoC4/Timer_1.c **** * Return:
 612:Generated_Source\PSoC4/Timer_1.c **** *  None
 613:Generated_Source\PSoC4/Timer_1.c **** *
 614:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 615:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_WriteCounter(uint32 count)
 616:Generated_Source\PSoC4/Timer_1.c **** {
 786              		.loc 1 616 0
 787              		.cfi_startproc
 788              		@ args = 0, pretend = 0, frame = 8
 789              		@ frame_needed = 1, uses_anonymous_args = 0
 790 0000 80B5     		push	{r7, lr}
 791              		.cfi_def_cfa_offset 8
 792              		.cfi_offset 7, -8
 793              		.cfi_offset 14, -4
 794 0002 82B0     		sub	sp, sp, #8
 795              		.cfi_def_cfa_offset 16
 796 0004 00AF     		add	r7, sp, #0
 797              		.cfi_def_cfa_register 7
 798 0006 7860     		str	r0, [r7, #4]
 617:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_COUNTER_REG = (count & Timer_1_16BIT_MASK);
 799              		.loc 1 617 0
 800 0008 044B     		ldr	r3, .L42
 801 000a 7A68     		ldr	r2, [r7, #4]
 802 000c 1204     		lsls	r2, r2, #16
 803 000e 120C     		lsrs	r2, r2, #16
 804 0010 1A60     		str	r2, [r3]
 618:Generated_Source\PSoC4/Timer_1.c **** }
 805              		.loc 1 618 0
 806 0012 C046     		nop
 807 0014 BD46     		mov	sp, r7
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 26


 808 0016 02B0     		add	sp, sp, #8
 809              		@ sp needed
 810 0018 80BD     		pop	{r7, pc}
 811              	.L43:
 812 001a C046     		.align	2
 813              	.L42:
 814 001c 08012040 		.word	1075839240
 815              		.cfi_endproc
 816              	.LFE15:
 817              		.size	Timer_1_WriteCounter, .-Timer_1_WriteCounter
 818              		.section	.text.Timer_1_ReadCounter,"ax",%progbits
 819              		.align	2
 820              		.global	Timer_1_ReadCounter
 821              		.code	16
 822              		.thumb_func
 823              		.type	Timer_1_ReadCounter, %function
 824              	Timer_1_ReadCounter:
 825              	.LFB16:
 619:Generated_Source\PSoC4/Timer_1.c **** 
 620:Generated_Source\PSoC4/Timer_1.c **** 
 621:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_ReadCounter
 623:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 624:Generated_Source\PSoC4/Timer_1.c **** *
 625:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 626:Generated_Source\PSoC4/Timer_1.c **** *  Reads the current counter value.
 627:Generated_Source\PSoC4/Timer_1.c **** *
 628:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 629:Generated_Source\PSoC4/Timer_1.c **** *  None
 630:Generated_Source\PSoC4/Timer_1.c **** *
 631:Generated_Source\PSoC4/Timer_1.c **** * Return:
 632:Generated_Source\PSoC4/Timer_1.c **** *  Current counter value
 633:Generated_Source\PSoC4/Timer_1.c **** *
 634:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 635:Generated_Source\PSoC4/Timer_1.c **** uint32 Timer_1_ReadCounter(void)
 636:Generated_Source\PSoC4/Timer_1.c **** {
 826              		.loc 1 636 0
 827              		.cfi_startproc
 828              		@ args = 0, pretend = 0, frame = 0
 829              		@ frame_needed = 1, uses_anonymous_args = 0
 830 0000 80B5     		push	{r7, lr}
 831              		.cfi_def_cfa_offset 8
 832              		.cfi_offset 7, -8
 833              		.cfi_offset 14, -4
 834 0002 00AF     		add	r7, sp, #0
 835              		.cfi_def_cfa_register 7
 637:Generated_Source\PSoC4/Timer_1.c ****     return (Timer_1_COUNTER_REG & Timer_1_16BIT_MASK);
 836              		.loc 1 637 0
 837 0004 034B     		ldr	r3, .L46
 838 0006 1B68     		ldr	r3, [r3]
 839 0008 1B04     		lsls	r3, r3, #16
 840 000a 1B0C     		lsrs	r3, r3, #16
 638:Generated_Source\PSoC4/Timer_1.c **** }
 841              		.loc 1 638 0
 842 000c 1800     		movs	r0, r3
 843 000e BD46     		mov	sp, r7
 844              		@ sp needed
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 27


 845 0010 80BD     		pop	{r7, pc}
 846              	.L47:
 847 0012 C046     		.align	2
 848              	.L46:
 849 0014 08012040 		.word	1075839240
 850              		.cfi_endproc
 851              	.LFE16:
 852              		.size	Timer_1_ReadCounter, .-Timer_1_ReadCounter
 853              		.section	.text.Timer_1_SetCounterMode,"ax",%progbits
 854              		.align	2
 855              		.global	Timer_1_SetCounterMode
 856              		.code	16
 857              		.thumb_func
 858              		.type	Timer_1_SetCounterMode, %function
 859              	Timer_1_SetCounterMode:
 860              	.LFB17:
 639:Generated_Source\PSoC4/Timer_1.c **** 
 640:Generated_Source\PSoC4/Timer_1.c **** 
 641:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 642:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_SetCounterMode
 643:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 644:Generated_Source\PSoC4/Timer_1.c **** *
 645:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 646:Generated_Source\PSoC4/Timer_1.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 647:Generated_Source\PSoC4/Timer_1.c **** *  and the PWM with a pseudo random output.
 648:Generated_Source\PSoC4/Timer_1.c **** *
 649:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 650:Generated_Source\PSoC4/Timer_1.c **** *  counterMode: Enumerated counter type values
 651:Generated_Source\PSoC4/Timer_1.c **** *   Values:
 652:Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_COUNT_UP       - Counts up
 653:Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_COUNT_DOWN     - Counts down
 654:Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_COUNT_UPDOWN0  - Counts up and down. Terminal count
 655:Generated_Source\PSoC4/Timer_1.c **** *                                         generated when counter reaches 0
 656:Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_COUNT_UPDOWN1  - Counts up and down. Terminal count
 657:Generated_Source\PSoC4/Timer_1.c **** *                                         generated both when counter reaches 0
 658:Generated_Source\PSoC4/Timer_1.c **** *                                         and period
 659:Generated_Source\PSoC4/Timer_1.c **** *
 660:Generated_Source\PSoC4/Timer_1.c **** * Return:
 661:Generated_Source\PSoC4/Timer_1.c **** *  None
 662:Generated_Source\PSoC4/Timer_1.c **** *
 663:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 664:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_SetCounterMode(uint32 counterMode)
 665:Generated_Source\PSoC4/Timer_1.c **** {
 861              		.loc 1 665 0
 862              		.cfi_startproc
 863              		@ args = 0, pretend = 0, frame = 16
 864              		@ frame_needed = 1, uses_anonymous_args = 0
 865 0000 90B5     		push	{r4, r7, lr}
 866              		.cfi_def_cfa_offset 12
 867              		.cfi_offset 4, -12
 868              		.cfi_offset 7, -8
 869              		.cfi_offset 14, -4
 870 0002 85B0     		sub	sp, sp, #20
 871              		.cfi_def_cfa_offset 32
 872 0004 00AF     		add	r7, sp, #0
 873              		.cfi_def_cfa_register 7
 874 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 28


 666:Generated_Source\PSoC4/Timer_1.c ****     uint8 enableInterrupts;
 667:Generated_Source\PSoC4/Timer_1.c **** 
 668:Generated_Source\PSoC4/Timer_1.c ****     enableInterrupts = CyEnterCriticalSection();
 875              		.loc 1 668 0
 876 0008 0F23     		movs	r3, #15
 877 000a FC18     		adds	r4, r7, r3
 878 000c FFF7FEFF 		bl	CyEnterCriticalSection
 879 0010 0300     		movs	r3, r0
 880 0012 2370     		strb	r3, [r4]
 669:Generated_Source\PSoC4/Timer_1.c **** 
 670:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_CONTROL_REG &= (uint32)~Timer_1_UPDOWN_MASK;
 881              		.loc 1 670 0
 882 0014 0A4B     		ldr	r3, .L49
 883 0016 0A4A     		ldr	r2, .L49
 884 0018 1268     		ldr	r2, [r2]
 885 001a 0A49     		ldr	r1, .L49+4
 886 001c 0A40     		ands	r2, r1
 887 001e 1A60     		str	r2, [r3]
 671:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_CONTROL_REG |= counterMode;
 888              		.loc 1 671 0
 889 0020 074B     		ldr	r3, .L49
 890 0022 074A     		ldr	r2, .L49
 891 0024 1168     		ldr	r1, [r2]
 892 0026 7A68     		ldr	r2, [r7, #4]
 893 0028 0A43     		orrs	r2, r1
 894 002a 1A60     		str	r2, [r3]
 672:Generated_Source\PSoC4/Timer_1.c **** 
 673:Generated_Source\PSoC4/Timer_1.c ****     CyExitCriticalSection(enableInterrupts);
 895              		.loc 1 673 0
 896 002c 0F23     		movs	r3, #15
 897 002e FB18     		adds	r3, r7, r3
 898 0030 1B78     		ldrb	r3, [r3]
 899 0032 1800     		movs	r0, r3
 900 0034 FFF7FEFF 		bl	CyExitCriticalSection
 674:Generated_Source\PSoC4/Timer_1.c **** }
 901              		.loc 1 674 0
 902 0038 C046     		nop
 903 003a BD46     		mov	sp, r7
 904 003c 05B0     		add	sp, sp, #20
 905              		@ sp needed
 906 003e 90BD     		pop	{r4, r7, pc}
 907              	.L50:
 908              		.align	2
 909              	.L49:
 910 0040 00012040 		.word	1075839232
 911 0044 FFFFFCFF 		.word	-196609
 912              		.cfi_endproc
 913              	.LFE17:
 914              		.size	Timer_1_SetCounterMode, .-Timer_1_SetCounterMode
 915              		.section	.text.Timer_1_WritePeriod,"ax",%progbits
 916              		.align	2
 917              		.global	Timer_1_WritePeriod
 918              		.code	16
 919              		.thumb_func
 920              		.type	Timer_1_WritePeriod, %function
 921              	Timer_1_WritePeriod:
 922              	.LFB18:
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 29


 675:Generated_Source\PSoC4/Timer_1.c **** 
 676:Generated_Source\PSoC4/Timer_1.c **** 
 677:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 678:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_WritePeriod
 679:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 680:Generated_Source\PSoC4/Timer_1.c **** *
 681:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 682:Generated_Source\PSoC4/Timer_1.c **** *  Writes the 16 bit period register with the new period value.
 683:Generated_Source\PSoC4/Timer_1.c **** *  To cause the counter to count for N cycles this register should be written
 684:Generated_Source\PSoC4/Timer_1.c **** *  with N-1 (counts from 0 to period inclusive).
 685:Generated_Source\PSoC4/Timer_1.c **** *
 686:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 687:Generated_Source\PSoC4/Timer_1.c **** *  period: Period value
 688:Generated_Source\PSoC4/Timer_1.c **** *
 689:Generated_Source\PSoC4/Timer_1.c **** * Return:
 690:Generated_Source\PSoC4/Timer_1.c **** *  None
 691:Generated_Source\PSoC4/Timer_1.c **** *
 692:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 693:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_WritePeriod(uint32 period)
 694:Generated_Source\PSoC4/Timer_1.c **** {
 923              		.loc 1 694 0
 924              		.cfi_startproc
 925              		@ args = 0, pretend = 0, frame = 8
 926              		@ frame_needed = 1, uses_anonymous_args = 0
 927 0000 80B5     		push	{r7, lr}
 928              		.cfi_def_cfa_offset 8
 929              		.cfi_offset 7, -8
 930              		.cfi_offset 14, -4
 931 0002 82B0     		sub	sp, sp, #8
 932              		.cfi_def_cfa_offset 16
 933 0004 00AF     		add	r7, sp, #0
 934              		.cfi_def_cfa_register 7
 935 0006 7860     		str	r0, [r7, #4]
 695:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_PERIOD_REG = (period & Timer_1_16BIT_MASK);
 936              		.loc 1 695 0
 937 0008 044B     		ldr	r3, .L52
 938 000a 7A68     		ldr	r2, [r7, #4]
 939 000c 1204     		lsls	r2, r2, #16
 940 000e 120C     		lsrs	r2, r2, #16
 941 0010 1A60     		str	r2, [r3]
 696:Generated_Source\PSoC4/Timer_1.c **** }
 942              		.loc 1 696 0
 943 0012 C046     		nop
 944 0014 BD46     		mov	sp, r7
 945 0016 02B0     		add	sp, sp, #8
 946              		@ sp needed
 947 0018 80BD     		pop	{r7, pc}
 948              	.L53:
 949 001a C046     		.align	2
 950              	.L52:
 951 001c 14012040 		.word	1075839252
 952              		.cfi_endproc
 953              	.LFE18:
 954              		.size	Timer_1_WritePeriod, .-Timer_1_WritePeriod
 955              		.section	.text.Timer_1_ReadPeriod,"ax",%progbits
 956              		.align	2
 957              		.global	Timer_1_ReadPeriod
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 30


 958              		.code	16
 959              		.thumb_func
 960              		.type	Timer_1_ReadPeriod, %function
 961              	Timer_1_ReadPeriod:
 962              	.LFB19:
 697:Generated_Source\PSoC4/Timer_1.c **** 
 698:Generated_Source\PSoC4/Timer_1.c **** 
 699:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 700:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_ReadPeriod
 701:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 702:Generated_Source\PSoC4/Timer_1.c **** *
 703:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 704:Generated_Source\PSoC4/Timer_1.c **** *  Reads the 16 bit period register.
 705:Generated_Source\PSoC4/Timer_1.c **** *
 706:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 707:Generated_Source\PSoC4/Timer_1.c **** *  None
 708:Generated_Source\PSoC4/Timer_1.c **** *
 709:Generated_Source\PSoC4/Timer_1.c **** * Return:
 710:Generated_Source\PSoC4/Timer_1.c **** *  Period value
 711:Generated_Source\PSoC4/Timer_1.c **** *
 712:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 713:Generated_Source\PSoC4/Timer_1.c **** uint32 Timer_1_ReadPeriod(void)
 714:Generated_Source\PSoC4/Timer_1.c **** {
 963              		.loc 1 714 0
 964              		.cfi_startproc
 965              		@ args = 0, pretend = 0, frame = 0
 966              		@ frame_needed = 1, uses_anonymous_args = 0
 967 0000 80B5     		push	{r7, lr}
 968              		.cfi_def_cfa_offset 8
 969              		.cfi_offset 7, -8
 970              		.cfi_offset 14, -4
 971 0002 00AF     		add	r7, sp, #0
 972              		.cfi_def_cfa_register 7
 715:Generated_Source\PSoC4/Timer_1.c ****     return (Timer_1_PERIOD_REG & Timer_1_16BIT_MASK);
 973              		.loc 1 715 0
 974 0004 034B     		ldr	r3, .L56
 975 0006 1B68     		ldr	r3, [r3]
 976 0008 1B04     		lsls	r3, r3, #16
 977 000a 1B0C     		lsrs	r3, r3, #16
 716:Generated_Source\PSoC4/Timer_1.c **** }
 978              		.loc 1 716 0
 979 000c 1800     		movs	r0, r3
 980 000e BD46     		mov	sp, r7
 981              		@ sp needed
 982 0010 80BD     		pop	{r7, pc}
 983              	.L57:
 984 0012 C046     		.align	2
 985              	.L56:
 986 0014 14012040 		.word	1075839252
 987              		.cfi_endproc
 988              	.LFE19:
 989              		.size	Timer_1_ReadPeriod, .-Timer_1_ReadPeriod
 990              		.section	.text.Timer_1_SetCompareSwap,"ax",%progbits
 991              		.align	2
 992              		.global	Timer_1_SetCompareSwap
 993              		.code	16
 994              		.thumb_func
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 31


 995              		.type	Timer_1_SetCompareSwap, %function
 996              	Timer_1_SetCompareSwap:
 997              	.LFB20:
 717:Generated_Source\PSoC4/Timer_1.c **** 
 718:Generated_Source\PSoC4/Timer_1.c **** 
 719:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 720:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_SetCompareSwap
 721:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 722:Generated_Source\PSoC4/Timer_1.c **** *
 723:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 724:Generated_Source\PSoC4/Timer_1.c **** *  Writes the register that controls whether the compare registers are
 725:Generated_Source\PSoC4/Timer_1.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 726:Generated_Source\PSoC4/Timer_1.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 727:Generated_Source\PSoC4/Timer_1.c **** *  following a hardware switch event.
 728:Generated_Source\PSoC4/Timer_1.c **** *
 729:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 730:Generated_Source\PSoC4/Timer_1.c **** *  swapEnable
 731:Generated_Source\PSoC4/Timer_1.c **** *   Values:
 732:Generated_Source\PSoC4/Timer_1.c **** *     - 0 - Disable swap
 733:Generated_Source\PSoC4/Timer_1.c **** *     - 1 - Enable swap
 734:Generated_Source\PSoC4/Timer_1.c **** *
 735:Generated_Source\PSoC4/Timer_1.c **** * Return:
 736:Generated_Source\PSoC4/Timer_1.c **** *  None
 737:Generated_Source\PSoC4/Timer_1.c **** *
 738:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 739:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_SetCompareSwap(uint32 swapEnable)
 740:Generated_Source\PSoC4/Timer_1.c **** {
 998              		.loc 1 740 0
 999              		.cfi_startproc
 1000              		@ args = 0, pretend = 0, frame = 16
 1001              		@ frame_needed = 1, uses_anonymous_args = 0
 1002 0000 90B5     		push	{r4, r7, lr}
 1003              		.cfi_def_cfa_offset 12
 1004              		.cfi_offset 4, -12
 1005              		.cfi_offset 7, -8
 1006              		.cfi_offset 14, -4
 1007 0002 85B0     		sub	sp, sp, #20
 1008              		.cfi_def_cfa_offset 32
 1009 0004 00AF     		add	r7, sp, #0
 1010              		.cfi_def_cfa_register 7
 1011 0006 7860     		str	r0, [r7, #4]
 741:Generated_Source\PSoC4/Timer_1.c ****     uint8 enableInterrupts;
 742:Generated_Source\PSoC4/Timer_1.c **** 
 743:Generated_Source\PSoC4/Timer_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1012              		.loc 1 743 0
 1013 0008 0F23     		movs	r3, #15
 1014 000a FC18     		adds	r4, r7, r3
 1015 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1016 0010 0300     		movs	r3, r0
 1017 0012 2370     		strb	r3, [r4]
 744:Generated_Source\PSoC4/Timer_1.c **** 
 745:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_CONTROL_REG &= (uint32)~Timer_1_RELOAD_CC_MASK;
 1018              		.loc 1 745 0
 1019 0014 0B4B     		ldr	r3, .L59
 1020 0016 0B4A     		ldr	r2, .L59
 1021 0018 1268     		ldr	r2, [r2]
 1022 001a 0121     		movs	r1, #1
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 32


 1023 001c 8A43     		bics	r2, r1
 1024 001e 1A60     		str	r2, [r3]
 746:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_CONTROL_REG |= (swapEnable & Timer_1_1BIT_MASK);
 1025              		.loc 1 746 0
 1026 0020 084B     		ldr	r3, .L59
 1027 0022 084A     		ldr	r2, .L59
 1028 0024 1168     		ldr	r1, [r2]
 1029 0026 7A68     		ldr	r2, [r7, #4]
 1030 0028 0120     		movs	r0, #1
 1031 002a 0240     		ands	r2, r0
 1032 002c 0A43     		orrs	r2, r1
 1033 002e 1A60     		str	r2, [r3]
 747:Generated_Source\PSoC4/Timer_1.c **** 
 748:Generated_Source\PSoC4/Timer_1.c ****     CyExitCriticalSection(enableInterrupts);
 1034              		.loc 1 748 0
 1035 0030 0F23     		movs	r3, #15
 1036 0032 FB18     		adds	r3, r7, r3
 1037 0034 1B78     		ldrb	r3, [r3]
 1038 0036 1800     		movs	r0, r3
 1039 0038 FFF7FEFF 		bl	CyExitCriticalSection
 749:Generated_Source\PSoC4/Timer_1.c **** }
 1040              		.loc 1 749 0
 1041 003c C046     		nop
 1042 003e BD46     		mov	sp, r7
 1043 0040 05B0     		add	sp, sp, #20
 1044              		@ sp needed
 1045 0042 90BD     		pop	{r4, r7, pc}
 1046              	.L60:
 1047              		.align	2
 1048              	.L59:
 1049 0044 00012040 		.word	1075839232
 1050              		.cfi_endproc
 1051              	.LFE20:
 1052              		.size	Timer_1_SetCompareSwap, .-Timer_1_SetCompareSwap
 1053              		.section	.text.Timer_1_WritePeriodBuf,"ax",%progbits
 1054              		.align	2
 1055              		.global	Timer_1_WritePeriodBuf
 1056              		.code	16
 1057              		.thumb_func
 1058              		.type	Timer_1_WritePeriodBuf, %function
 1059              	Timer_1_WritePeriodBuf:
 1060              	.LFB21:
 750:Generated_Source\PSoC4/Timer_1.c **** 
 751:Generated_Source\PSoC4/Timer_1.c **** 
 752:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 753:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_WritePeriodBuf
 754:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 755:Generated_Source\PSoC4/Timer_1.c **** *
 756:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 757:Generated_Source\PSoC4/Timer_1.c **** *  Writes the 16 bit period buf register with the new period value.
 758:Generated_Source\PSoC4/Timer_1.c **** *
 759:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 760:Generated_Source\PSoC4/Timer_1.c **** *  periodBuf: Period value
 761:Generated_Source\PSoC4/Timer_1.c **** *
 762:Generated_Source\PSoC4/Timer_1.c **** * Return:
 763:Generated_Source\PSoC4/Timer_1.c **** *  None
 764:Generated_Source\PSoC4/Timer_1.c **** *
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 33


 765:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 766:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_WritePeriodBuf(uint32 periodBuf)
 767:Generated_Source\PSoC4/Timer_1.c **** {
 1061              		.loc 1 767 0
 1062              		.cfi_startproc
 1063              		@ args = 0, pretend = 0, frame = 8
 1064              		@ frame_needed = 1, uses_anonymous_args = 0
 1065 0000 80B5     		push	{r7, lr}
 1066              		.cfi_def_cfa_offset 8
 1067              		.cfi_offset 7, -8
 1068              		.cfi_offset 14, -4
 1069 0002 82B0     		sub	sp, sp, #8
 1070              		.cfi_def_cfa_offset 16
 1071 0004 00AF     		add	r7, sp, #0
 1072              		.cfi_def_cfa_register 7
 1073 0006 7860     		str	r0, [r7, #4]
 768:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_PERIOD_BUF_REG = (periodBuf & Timer_1_16BIT_MASK);
 1074              		.loc 1 768 0
 1075 0008 044B     		ldr	r3, .L62
 1076 000a 7A68     		ldr	r2, [r7, #4]
 1077 000c 1204     		lsls	r2, r2, #16
 1078 000e 120C     		lsrs	r2, r2, #16
 1079 0010 1A60     		str	r2, [r3]
 769:Generated_Source\PSoC4/Timer_1.c **** }
 1080              		.loc 1 769 0
 1081 0012 C046     		nop
 1082 0014 BD46     		mov	sp, r7
 1083 0016 02B0     		add	sp, sp, #8
 1084              		@ sp needed
 1085 0018 80BD     		pop	{r7, pc}
 1086              	.L63:
 1087 001a C046     		.align	2
 1088              	.L62:
 1089 001c 18012040 		.word	1075839256
 1090              		.cfi_endproc
 1091              	.LFE21:
 1092              		.size	Timer_1_WritePeriodBuf, .-Timer_1_WritePeriodBuf
 1093              		.section	.text.Timer_1_ReadPeriodBuf,"ax",%progbits
 1094              		.align	2
 1095              		.global	Timer_1_ReadPeriodBuf
 1096              		.code	16
 1097              		.thumb_func
 1098              		.type	Timer_1_ReadPeriodBuf, %function
 1099              	Timer_1_ReadPeriodBuf:
 1100              	.LFB22:
 770:Generated_Source\PSoC4/Timer_1.c **** 
 771:Generated_Source\PSoC4/Timer_1.c **** 
 772:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 773:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_ReadPeriodBuf
 774:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 775:Generated_Source\PSoC4/Timer_1.c **** *
 776:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 777:Generated_Source\PSoC4/Timer_1.c **** *  Reads the 16 bit period buf register.
 778:Generated_Source\PSoC4/Timer_1.c **** *
 779:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 780:Generated_Source\PSoC4/Timer_1.c **** *  None
 781:Generated_Source\PSoC4/Timer_1.c **** *
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 34


 782:Generated_Source\PSoC4/Timer_1.c **** * Return:
 783:Generated_Source\PSoC4/Timer_1.c **** *  Period value
 784:Generated_Source\PSoC4/Timer_1.c **** *
 785:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 786:Generated_Source\PSoC4/Timer_1.c **** uint32 Timer_1_ReadPeriodBuf(void)
 787:Generated_Source\PSoC4/Timer_1.c **** {
 1101              		.loc 1 787 0
 1102              		.cfi_startproc
 1103              		@ args = 0, pretend = 0, frame = 0
 1104              		@ frame_needed = 1, uses_anonymous_args = 0
 1105 0000 80B5     		push	{r7, lr}
 1106              		.cfi_def_cfa_offset 8
 1107              		.cfi_offset 7, -8
 1108              		.cfi_offset 14, -4
 1109 0002 00AF     		add	r7, sp, #0
 1110              		.cfi_def_cfa_register 7
 788:Generated_Source\PSoC4/Timer_1.c ****     return (Timer_1_PERIOD_BUF_REG & Timer_1_16BIT_MASK);
 1111              		.loc 1 788 0
 1112 0004 034B     		ldr	r3, .L66
 1113 0006 1B68     		ldr	r3, [r3]
 1114 0008 1B04     		lsls	r3, r3, #16
 1115 000a 1B0C     		lsrs	r3, r3, #16
 789:Generated_Source\PSoC4/Timer_1.c **** }
 1116              		.loc 1 789 0
 1117 000c 1800     		movs	r0, r3
 1118 000e BD46     		mov	sp, r7
 1119              		@ sp needed
 1120 0010 80BD     		pop	{r7, pc}
 1121              	.L67:
 1122 0012 C046     		.align	2
 1123              	.L66:
 1124 0014 18012040 		.word	1075839256
 1125              		.cfi_endproc
 1126              	.LFE22:
 1127              		.size	Timer_1_ReadPeriodBuf, .-Timer_1_ReadPeriodBuf
 1128              		.section	.text.Timer_1_SetPeriodSwap,"ax",%progbits
 1129              		.align	2
 1130              		.global	Timer_1_SetPeriodSwap
 1131              		.code	16
 1132              		.thumb_func
 1133              		.type	Timer_1_SetPeriodSwap, %function
 1134              	Timer_1_SetPeriodSwap:
 1135              	.LFB23:
 790:Generated_Source\PSoC4/Timer_1.c **** 
 791:Generated_Source\PSoC4/Timer_1.c **** 
 792:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 793:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_SetPeriodSwap
 794:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 795:Generated_Source\PSoC4/Timer_1.c **** *
 796:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 797:Generated_Source\PSoC4/Timer_1.c **** *  Writes the register that controls whether the period registers are
 798:Generated_Source\PSoC4/Timer_1.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 799:Generated_Source\PSoC4/Timer_1.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 800:Generated_Source\PSoC4/Timer_1.c **** *  switch event.
 801:Generated_Source\PSoC4/Timer_1.c **** *
 802:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 803:Generated_Source\PSoC4/Timer_1.c **** *  swapEnable
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 35


 804:Generated_Source\PSoC4/Timer_1.c **** *   Values:
 805:Generated_Source\PSoC4/Timer_1.c **** *     - 0 - Disable swap
 806:Generated_Source\PSoC4/Timer_1.c **** *     - 1 - Enable swap
 807:Generated_Source\PSoC4/Timer_1.c **** *
 808:Generated_Source\PSoC4/Timer_1.c **** * Return:
 809:Generated_Source\PSoC4/Timer_1.c **** *  None
 810:Generated_Source\PSoC4/Timer_1.c **** *
 811:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 812:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_SetPeriodSwap(uint32 swapEnable)
 813:Generated_Source\PSoC4/Timer_1.c **** {
 1136              		.loc 1 813 0
 1137              		.cfi_startproc
 1138              		@ args = 0, pretend = 0, frame = 16
 1139              		@ frame_needed = 1, uses_anonymous_args = 0
 1140 0000 90B5     		push	{r4, r7, lr}
 1141              		.cfi_def_cfa_offset 12
 1142              		.cfi_offset 4, -12
 1143              		.cfi_offset 7, -8
 1144              		.cfi_offset 14, -4
 1145 0002 85B0     		sub	sp, sp, #20
 1146              		.cfi_def_cfa_offset 32
 1147 0004 00AF     		add	r7, sp, #0
 1148              		.cfi_def_cfa_register 7
 1149 0006 7860     		str	r0, [r7, #4]
 814:Generated_Source\PSoC4/Timer_1.c ****     uint8 enableInterrupts;
 815:Generated_Source\PSoC4/Timer_1.c **** 
 816:Generated_Source\PSoC4/Timer_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1150              		.loc 1 816 0
 1151 0008 0F23     		movs	r3, #15
 1152 000a FC18     		adds	r4, r7, r3
 1153 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1154 0010 0300     		movs	r3, r0
 1155 0012 2370     		strb	r3, [r4]
 817:Generated_Source\PSoC4/Timer_1.c **** 
 818:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_CONTROL_REG &= (uint32)~Timer_1_RELOAD_PERIOD_MASK;
 1156              		.loc 1 818 0
 1157 0014 0C4B     		ldr	r3, .L69
 1158 0016 0C4A     		ldr	r2, .L69
 1159 0018 1268     		ldr	r2, [r2]
 1160 001a 0221     		movs	r1, #2
 1161 001c 8A43     		bics	r2, r1
 1162 001e 1A60     		str	r2, [r3]
 819:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_CONTROL_REG |= ((uint32)((swapEnable & Timer_1_1BIT_MASK) <<
 1163              		.loc 1 819 0
 1164 0020 094B     		ldr	r3, .L69
 1165 0022 094A     		ldr	r2, .L69
 1166 0024 1168     		ldr	r1, [r2]
 1167 0026 7A68     		ldr	r2, [r7, #4]
 1168 0028 5200     		lsls	r2, r2, #1
 1169 002a 0220     		movs	r0, #2
 1170 002c 0240     		ands	r2, r0
 1171 002e 0A43     		orrs	r2, r1
 1172 0030 1A60     		str	r2, [r3]
 820:Generated_Source\PSoC4/Timer_1.c ****                                                             Timer_1_RELOAD_PERIOD_SHIFT));
 821:Generated_Source\PSoC4/Timer_1.c **** 
 822:Generated_Source\PSoC4/Timer_1.c ****     CyExitCriticalSection(enableInterrupts);
 1173              		.loc 1 822 0
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 36


 1174 0032 0F23     		movs	r3, #15
 1175 0034 FB18     		adds	r3, r7, r3
 1176 0036 1B78     		ldrb	r3, [r3]
 1177 0038 1800     		movs	r0, r3
 1178 003a FFF7FEFF 		bl	CyExitCriticalSection
 823:Generated_Source\PSoC4/Timer_1.c **** }
 1179              		.loc 1 823 0
 1180 003e C046     		nop
 1181 0040 BD46     		mov	sp, r7
 1182 0042 05B0     		add	sp, sp, #20
 1183              		@ sp needed
 1184 0044 90BD     		pop	{r4, r7, pc}
 1185              	.L70:
 1186 0046 C046     		.align	2
 1187              	.L69:
 1188 0048 00012040 		.word	1075839232
 1189              		.cfi_endproc
 1190              	.LFE23:
 1191              		.size	Timer_1_SetPeriodSwap, .-Timer_1_SetPeriodSwap
 1192              		.section	.text.Timer_1_WriteCompare,"ax",%progbits
 1193              		.align	2
 1194              		.global	Timer_1_WriteCompare
 1195              		.code	16
 1196              		.thumb_func
 1197              		.type	Timer_1_WriteCompare, %function
 1198              	Timer_1_WriteCompare:
 1199              	.LFB24:
 824:Generated_Source\PSoC4/Timer_1.c **** 
 825:Generated_Source\PSoC4/Timer_1.c **** 
 826:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 827:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_WriteCompare
 828:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 829:Generated_Source\PSoC4/Timer_1.c **** *
 830:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 831:Generated_Source\PSoC4/Timer_1.c **** *  Writes the 16 bit compare register with the new compare value. Not
 832:Generated_Source\PSoC4/Timer_1.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 833:Generated_Source\PSoC4/Timer_1.c **** *
 834:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 835:Generated_Source\PSoC4/Timer_1.c **** *  compare: Compare value
 836:Generated_Source\PSoC4/Timer_1.c **** *
 837:Generated_Source\PSoC4/Timer_1.c **** * Return:
 838:Generated_Source\PSoC4/Timer_1.c **** *  None
 839:Generated_Source\PSoC4/Timer_1.c **** *
 840:Generated_Source\PSoC4/Timer_1.c **** * Note:
 841:Generated_Source\PSoC4/Timer_1.c **** *  It is not recommended to use the value equal to "0" or equal to 
 842:Generated_Source\PSoC4/Timer_1.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 843:Generated_Source\PSoC4/Timer_1.c **** *  PSoC 4100/PSoC 4200 devices.
 844:Generated_Source\PSoC4/Timer_1.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 845:Generated_Source\PSoC4/Timer_1.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 846:Generated_Source\PSoC4/Timer_1.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 847:Generated_Source\PSoC4/Timer_1.c **** *
 848:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 849:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_WriteCompare(uint32 compare)
 850:Generated_Source\PSoC4/Timer_1.c **** {
 1200              		.loc 1 850 0
 1201              		.cfi_startproc
 1202              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 37


 1203              		@ frame_needed = 1, uses_anonymous_args = 0
 1204 0000 80B5     		push	{r7, lr}
 1205              		.cfi_def_cfa_offset 8
 1206              		.cfi_offset 7, -8
 1207              		.cfi_offset 14, -4
 1208 0002 82B0     		sub	sp, sp, #8
 1209              		.cfi_def_cfa_offset 16
 1210 0004 00AF     		add	r7, sp, #0
 1211              		.cfi_def_cfa_register 7
 1212 0006 7860     		str	r0, [r7, #4]
 851:Generated_Source\PSoC4/Timer_1.c ****     #if (Timer_1_CY_TCPWM_4000)
 852:Generated_Source\PSoC4/Timer_1.c ****         uint32 currentMode;
 853:Generated_Source\PSoC4/Timer_1.c ****     #endif /* (Timer_1_CY_TCPWM_4000) */
 854:Generated_Source\PSoC4/Timer_1.c **** 
 855:Generated_Source\PSoC4/Timer_1.c ****     #if (Timer_1_CY_TCPWM_4000)
 856:Generated_Source\PSoC4/Timer_1.c ****         currentMode = ((Timer_1_CONTROL_REG & Timer_1_UPDOWN_MASK) >> Timer_1_UPDOWN_SHIFT);
 857:Generated_Source\PSoC4/Timer_1.c **** 
 858:Generated_Source\PSoC4/Timer_1.c ****         if (((uint32)Timer_1__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 859:Generated_Source\PSoC4/Timer_1.c ****         {
 860:Generated_Source\PSoC4/Timer_1.c ****             compare++;
 861:Generated_Source\PSoC4/Timer_1.c ****         }
 862:Generated_Source\PSoC4/Timer_1.c ****         else if (((uint32)Timer_1__COUNT_UP == currentMode) && (0u != compare))
 863:Generated_Source\PSoC4/Timer_1.c ****         {
 864:Generated_Source\PSoC4/Timer_1.c ****             compare--;
 865:Generated_Source\PSoC4/Timer_1.c ****         }
 866:Generated_Source\PSoC4/Timer_1.c ****         else
 867:Generated_Source\PSoC4/Timer_1.c ****         {
 868:Generated_Source\PSoC4/Timer_1.c ****         }
 869:Generated_Source\PSoC4/Timer_1.c ****         
 870:Generated_Source\PSoC4/Timer_1.c ****     
 871:Generated_Source\PSoC4/Timer_1.c ****     #endif /* (Timer_1_CY_TCPWM_4000) */
 872:Generated_Source\PSoC4/Timer_1.c ****     
 873:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_COMP_CAP_REG = (compare & Timer_1_16BIT_MASK);
 1213              		.loc 1 873 0
 1214 0008 044B     		ldr	r3, .L72
 1215 000a 7A68     		ldr	r2, [r7, #4]
 1216 000c 1204     		lsls	r2, r2, #16
 1217 000e 120C     		lsrs	r2, r2, #16
 1218 0010 1A60     		str	r2, [r3]
 874:Generated_Source\PSoC4/Timer_1.c **** }
 1219              		.loc 1 874 0
 1220 0012 C046     		nop
 1221 0014 BD46     		mov	sp, r7
 1222 0016 02B0     		add	sp, sp, #8
 1223              		@ sp needed
 1224 0018 80BD     		pop	{r7, pc}
 1225              	.L73:
 1226 001a C046     		.align	2
 1227              	.L72:
 1228 001c 0C012040 		.word	1075839244
 1229              		.cfi_endproc
 1230              	.LFE24:
 1231              		.size	Timer_1_WriteCompare, .-Timer_1_WriteCompare
 1232              		.section	.text.Timer_1_ReadCompare,"ax",%progbits
 1233              		.align	2
 1234              		.global	Timer_1_ReadCompare
 1235              		.code	16
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 38


 1236              		.thumb_func
 1237              		.type	Timer_1_ReadCompare, %function
 1238              	Timer_1_ReadCompare:
 1239              	.LFB25:
 875:Generated_Source\PSoC4/Timer_1.c **** 
 876:Generated_Source\PSoC4/Timer_1.c **** 
 877:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 878:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_ReadCompare
 879:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 880:Generated_Source\PSoC4/Timer_1.c **** *
 881:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 882:Generated_Source\PSoC4/Timer_1.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 883:Generated_Source\PSoC4/Timer_1.c **** *  or in Quadrature Decoder modes.
 884:Generated_Source\PSoC4/Timer_1.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 885:Generated_Source\PSoC4/Timer_1.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 886:Generated_Source\PSoC4/Timer_1.c **** *  Down counting mode (except 0x0u).
 887:Generated_Source\PSoC4/Timer_1.c **** *
 888:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 889:Generated_Source\PSoC4/Timer_1.c **** *  None
 890:Generated_Source\PSoC4/Timer_1.c **** *
 891:Generated_Source\PSoC4/Timer_1.c **** * Return:
 892:Generated_Source\PSoC4/Timer_1.c **** *  Compare value
 893:Generated_Source\PSoC4/Timer_1.c **** *
 894:Generated_Source\PSoC4/Timer_1.c **** * Note:
 895:Generated_Source\PSoC4/Timer_1.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 896:Generated_Source\PSoC4/Timer_1.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 897:Generated_Source\PSoC4/Timer_1.c **** *  Down counting mode (except 0x0u).
 898:Generated_Source\PSoC4/Timer_1.c **** *
 899:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 900:Generated_Source\PSoC4/Timer_1.c **** uint32 Timer_1_ReadCompare(void)
 901:Generated_Source\PSoC4/Timer_1.c **** {
 1240              		.loc 1 901 0
 1241              		.cfi_startproc
 1242              		@ args = 0, pretend = 0, frame = 0
 1243              		@ frame_needed = 1, uses_anonymous_args = 0
 1244 0000 80B5     		push	{r7, lr}
 1245              		.cfi_def_cfa_offset 8
 1246              		.cfi_offset 7, -8
 1247              		.cfi_offset 14, -4
 1248 0002 00AF     		add	r7, sp, #0
 1249              		.cfi_def_cfa_register 7
 902:Generated_Source\PSoC4/Timer_1.c ****     #if (Timer_1_CY_TCPWM_4000)
 903:Generated_Source\PSoC4/Timer_1.c ****         uint32 currentMode;
 904:Generated_Source\PSoC4/Timer_1.c ****         uint32 regVal;
 905:Generated_Source\PSoC4/Timer_1.c ****     #endif /* (Timer_1_CY_TCPWM_4000) */
 906:Generated_Source\PSoC4/Timer_1.c **** 
 907:Generated_Source\PSoC4/Timer_1.c ****     #if (Timer_1_CY_TCPWM_4000)
 908:Generated_Source\PSoC4/Timer_1.c ****         currentMode = ((Timer_1_CONTROL_REG & Timer_1_UPDOWN_MASK) >> Timer_1_UPDOWN_SHIFT);
 909:Generated_Source\PSoC4/Timer_1.c ****         
 910:Generated_Source\PSoC4/Timer_1.c ****         regVal = Timer_1_COMP_CAP_REG;
 911:Generated_Source\PSoC4/Timer_1.c ****         
 912:Generated_Source\PSoC4/Timer_1.c ****         if (((uint32)Timer_1__COUNT_DOWN == currentMode) && (0u != regVal))
 913:Generated_Source\PSoC4/Timer_1.c ****         {
 914:Generated_Source\PSoC4/Timer_1.c ****             regVal--;
 915:Generated_Source\PSoC4/Timer_1.c ****         }
 916:Generated_Source\PSoC4/Timer_1.c ****         else if (((uint32)Timer_1__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 917:Generated_Source\PSoC4/Timer_1.c ****         {
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 39


 918:Generated_Source\PSoC4/Timer_1.c ****             regVal++;
 919:Generated_Source\PSoC4/Timer_1.c ****         }
 920:Generated_Source\PSoC4/Timer_1.c ****         else
 921:Generated_Source\PSoC4/Timer_1.c ****         {
 922:Generated_Source\PSoC4/Timer_1.c ****         }
 923:Generated_Source\PSoC4/Timer_1.c **** 
 924:Generated_Source\PSoC4/Timer_1.c ****         return (regVal & Timer_1_16BIT_MASK);
 925:Generated_Source\PSoC4/Timer_1.c ****     #else
 926:Generated_Source\PSoC4/Timer_1.c ****         return (Timer_1_COMP_CAP_REG & Timer_1_16BIT_MASK);
 1250              		.loc 1 926 0
 1251 0004 034B     		ldr	r3, .L76
 1252 0006 1B68     		ldr	r3, [r3]
 1253 0008 1B04     		lsls	r3, r3, #16
 1254 000a 1B0C     		lsrs	r3, r3, #16
 927:Generated_Source\PSoC4/Timer_1.c ****     #endif /* (Timer_1_CY_TCPWM_4000) */
 928:Generated_Source\PSoC4/Timer_1.c **** }
 1255              		.loc 1 928 0
 1256 000c 1800     		movs	r0, r3
 1257 000e BD46     		mov	sp, r7
 1258              		@ sp needed
 1259 0010 80BD     		pop	{r7, pc}
 1260              	.L77:
 1261 0012 C046     		.align	2
 1262              	.L76:
 1263 0014 0C012040 		.word	1075839244
 1264              		.cfi_endproc
 1265              	.LFE25:
 1266              		.size	Timer_1_ReadCompare, .-Timer_1_ReadCompare
 1267              		.section	.text.Timer_1_WriteCompareBuf,"ax",%progbits
 1268              		.align	2
 1269              		.global	Timer_1_WriteCompareBuf
 1270              		.code	16
 1271              		.thumb_func
 1272              		.type	Timer_1_WriteCompareBuf, %function
 1273              	Timer_1_WriteCompareBuf:
 1274              	.LFB26:
 929:Generated_Source\PSoC4/Timer_1.c **** 
 930:Generated_Source\PSoC4/Timer_1.c **** 
 931:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 932:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_WriteCompareBuf
 933:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 934:Generated_Source\PSoC4/Timer_1.c **** *
 935:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 936:Generated_Source\PSoC4/Timer_1.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 937:Generated_Source\PSoC4/Timer_1.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 938:Generated_Source\PSoC4/Timer_1.c **** *
 939:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 940:Generated_Source\PSoC4/Timer_1.c **** *  compareBuf: Compare value
 941:Generated_Source\PSoC4/Timer_1.c **** *
 942:Generated_Source\PSoC4/Timer_1.c **** * Return:
 943:Generated_Source\PSoC4/Timer_1.c **** *  None
 944:Generated_Source\PSoC4/Timer_1.c **** *
 945:Generated_Source\PSoC4/Timer_1.c **** * Note:
 946:Generated_Source\PSoC4/Timer_1.c **** *  It is not recommended to use the value equal to "0" or equal to 
 947:Generated_Source\PSoC4/Timer_1.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 948:Generated_Source\PSoC4/Timer_1.c **** *  PSoC 4100/PSoC 4200 devices.
 949:Generated_Source\PSoC4/Timer_1.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 40


 950:Generated_Source\PSoC4/Timer_1.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 951:Generated_Source\PSoC4/Timer_1.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 952:Generated_Source\PSoC4/Timer_1.c **** *
 953:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 954:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_WriteCompareBuf(uint32 compareBuf)
 955:Generated_Source\PSoC4/Timer_1.c **** {
 1275              		.loc 1 955 0
 1276              		.cfi_startproc
 1277              		@ args = 0, pretend = 0, frame = 8
 1278              		@ frame_needed = 1, uses_anonymous_args = 0
 1279 0000 80B5     		push	{r7, lr}
 1280              		.cfi_def_cfa_offset 8
 1281              		.cfi_offset 7, -8
 1282              		.cfi_offset 14, -4
 1283 0002 82B0     		sub	sp, sp, #8
 1284              		.cfi_def_cfa_offset 16
 1285 0004 00AF     		add	r7, sp, #0
 1286              		.cfi_def_cfa_register 7
 1287 0006 7860     		str	r0, [r7, #4]
 956:Generated_Source\PSoC4/Timer_1.c ****     #if (Timer_1_CY_TCPWM_4000)
 957:Generated_Source\PSoC4/Timer_1.c ****         uint32 currentMode;
 958:Generated_Source\PSoC4/Timer_1.c ****     #endif /* (Timer_1_CY_TCPWM_4000) */
 959:Generated_Source\PSoC4/Timer_1.c **** 
 960:Generated_Source\PSoC4/Timer_1.c ****     #if (Timer_1_CY_TCPWM_4000)
 961:Generated_Source\PSoC4/Timer_1.c ****         currentMode = ((Timer_1_CONTROL_REG & Timer_1_UPDOWN_MASK) >> Timer_1_UPDOWN_SHIFT);
 962:Generated_Source\PSoC4/Timer_1.c **** 
 963:Generated_Source\PSoC4/Timer_1.c ****         if (((uint32)Timer_1__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 964:Generated_Source\PSoC4/Timer_1.c ****         {
 965:Generated_Source\PSoC4/Timer_1.c ****             compareBuf++;
 966:Generated_Source\PSoC4/Timer_1.c ****         }
 967:Generated_Source\PSoC4/Timer_1.c ****         else if (((uint32)Timer_1__COUNT_UP == currentMode) && (0u != compareBuf))
 968:Generated_Source\PSoC4/Timer_1.c ****         {
 969:Generated_Source\PSoC4/Timer_1.c ****             compareBuf --;
 970:Generated_Source\PSoC4/Timer_1.c ****         }
 971:Generated_Source\PSoC4/Timer_1.c ****         else
 972:Generated_Source\PSoC4/Timer_1.c ****         {
 973:Generated_Source\PSoC4/Timer_1.c ****         }
 974:Generated_Source\PSoC4/Timer_1.c ****     #endif /* (Timer_1_CY_TCPWM_4000) */
 975:Generated_Source\PSoC4/Timer_1.c ****     
 976:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_COMP_CAP_BUF_REG = (compareBuf & Timer_1_16BIT_MASK);
 1288              		.loc 1 976 0
 1289 0008 044B     		ldr	r3, .L79
 1290 000a 7A68     		ldr	r2, [r7, #4]
 1291 000c 1204     		lsls	r2, r2, #16
 1292 000e 120C     		lsrs	r2, r2, #16
 1293 0010 1A60     		str	r2, [r3]
 977:Generated_Source\PSoC4/Timer_1.c **** }
 1294              		.loc 1 977 0
 1295 0012 C046     		nop
 1296 0014 BD46     		mov	sp, r7
 1297 0016 02B0     		add	sp, sp, #8
 1298              		@ sp needed
 1299 0018 80BD     		pop	{r7, pc}
 1300              	.L80:
 1301 001a C046     		.align	2
 1302              	.L79:
 1303 001c 10012040 		.word	1075839248
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 41


 1304              		.cfi_endproc
 1305              	.LFE26:
 1306              		.size	Timer_1_WriteCompareBuf, .-Timer_1_WriteCompareBuf
 1307              		.section	.text.Timer_1_ReadCompareBuf,"ax",%progbits
 1308              		.align	2
 1309              		.global	Timer_1_ReadCompareBuf
 1310              		.code	16
 1311              		.thumb_func
 1312              		.type	Timer_1_ReadCompareBuf, %function
 1313              	Timer_1_ReadCompareBuf:
 1314              	.LFB27:
 978:Generated_Source\PSoC4/Timer_1.c **** 
 979:Generated_Source\PSoC4/Timer_1.c **** 
 980:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 981:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_ReadCompareBuf
 982:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 983:Generated_Source\PSoC4/Timer_1.c **** *
 984:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 985:Generated_Source\PSoC4/Timer_1.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 986:Generated_Source\PSoC4/Timer_1.c **** *  Capture or in Quadrature Decoder modes.
 987:Generated_Source\PSoC4/Timer_1.c **** *
 988:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 989:Generated_Source\PSoC4/Timer_1.c **** *  None
 990:Generated_Source\PSoC4/Timer_1.c **** *
 991:Generated_Source\PSoC4/Timer_1.c **** * Return:
 992:Generated_Source\PSoC4/Timer_1.c **** *  Compare buffer value
 993:Generated_Source\PSoC4/Timer_1.c **** *
 994:Generated_Source\PSoC4/Timer_1.c **** * Note:
 995:Generated_Source\PSoC4/Timer_1.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 996:Generated_Source\PSoC4/Timer_1.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 997:Generated_Source\PSoC4/Timer_1.c **** *  Down counting mode (except 0x0u).
 998:Generated_Source\PSoC4/Timer_1.c **** *
 999:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
1000:Generated_Source\PSoC4/Timer_1.c **** uint32 Timer_1_ReadCompareBuf(void)
1001:Generated_Source\PSoC4/Timer_1.c **** {
 1315              		.loc 1 1001 0
 1316              		.cfi_startproc
 1317              		@ args = 0, pretend = 0, frame = 0
 1318              		@ frame_needed = 1, uses_anonymous_args = 0
 1319 0000 80B5     		push	{r7, lr}
 1320              		.cfi_def_cfa_offset 8
 1321              		.cfi_offset 7, -8
 1322              		.cfi_offset 14, -4
 1323 0002 00AF     		add	r7, sp, #0
 1324              		.cfi_def_cfa_register 7
1002:Generated_Source\PSoC4/Timer_1.c ****     #if (Timer_1_CY_TCPWM_4000)
1003:Generated_Source\PSoC4/Timer_1.c ****         uint32 currentMode;
1004:Generated_Source\PSoC4/Timer_1.c ****         uint32 regVal;
1005:Generated_Source\PSoC4/Timer_1.c ****     #endif /* (Timer_1_CY_TCPWM_4000) */
1006:Generated_Source\PSoC4/Timer_1.c **** 
1007:Generated_Source\PSoC4/Timer_1.c ****     #if (Timer_1_CY_TCPWM_4000)
1008:Generated_Source\PSoC4/Timer_1.c ****         currentMode = ((Timer_1_CONTROL_REG & Timer_1_UPDOWN_MASK) >> Timer_1_UPDOWN_SHIFT);
1009:Generated_Source\PSoC4/Timer_1.c **** 
1010:Generated_Source\PSoC4/Timer_1.c ****         regVal = Timer_1_COMP_CAP_BUF_REG;
1011:Generated_Source\PSoC4/Timer_1.c ****         
1012:Generated_Source\PSoC4/Timer_1.c ****         if (((uint32)Timer_1__COUNT_DOWN == currentMode) && (0u != regVal))
1013:Generated_Source\PSoC4/Timer_1.c ****         {
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 42


1014:Generated_Source\PSoC4/Timer_1.c ****             regVal--;
1015:Generated_Source\PSoC4/Timer_1.c ****         }
1016:Generated_Source\PSoC4/Timer_1.c ****         else if (((uint32)Timer_1__COUNT_UP == currentMode) && (0xFFFFu != regVal))
1017:Generated_Source\PSoC4/Timer_1.c ****         {
1018:Generated_Source\PSoC4/Timer_1.c ****             regVal++;
1019:Generated_Source\PSoC4/Timer_1.c ****         }
1020:Generated_Source\PSoC4/Timer_1.c ****         else
1021:Generated_Source\PSoC4/Timer_1.c ****         {
1022:Generated_Source\PSoC4/Timer_1.c ****         }
1023:Generated_Source\PSoC4/Timer_1.c **** 
1024:Generated_Source\PSoC4/Timer_1.c ****         return (regVal & Timer_1_16BIT_MASK);
1025:Generated_Source\PSoC4/Timer_1.c ****     #else
1026:Generated_Source\PSoC4/Timer_1.c ****         return (Timer_1_COMP_CAP_BUF_REG & Timer_1_16BIT_MASK);
 1325              		.loc 1 1026 0
 1326 0004 034B     		ldr	r3, .L83
 1327 0006 1B68     		ldr	r3, [r3]
 1328 0008 1B04     		lsls	r3, r3, #16
 1329 000a 1B0C     		lsrs	r3, r3, #16
1027:Generated_Source\PSoC4/Timer_1.c ****     #endif /* (Timer_1_CY_TCPWM_4000) */
1028:Generated_Source\PSoC4/Timer_1.c **** }
 1330              		.loc 1 1028 0
 1331 000c 1800     		movs	r0, r3
 1332 000e BD46     		mov	sp, r7
 1333              		@ sp needed
 1334 0010 80BD     		pop	{r7, pc}
 1335              	.L84:
 1336 0012 C046     		.align	2
 1337              	.L83:
 1338 0014 10012040 		.word	1075839248
 1339              		.cfi_endproc
 1340              	.LFE27:
 1341              		.size	Timer_1_ReadCompareBuf, .-Timer_1_ReadCompareBuf
 1342              		.section	.text.Timer_1_ReadCapture,"ax",%progbits
 1343              		.align	2
 1344              		.global	Timer_1_ReadCapture
 1345              		.code	16
 1346              		.thumb_func
 1347              		.type	Timer_1_ReadCapture, %function
 1348              	Timer_1_ReadCapture:
 1349              	.LFB28:
1029:Generated_Source\PSoC4/Timer_1.c **** 
1030:Generated_Source\PSoC4/Timer_1.c **** 
1031:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
1032:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_ReadCapture
1033:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
1034:Generated_Source\PSoC4/Timer_1.c **** *
1035:Generated_Source\PSoC4/Timer_1.c **** * Summary:
1036:Generated_Source\PSoC4/Timer_1.c **** *  Reads the captured counter value. This API is applicable only for
1037:Generated_Source\PSoC4/Timer_1.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1038:Generated_Source\PSoC4/Timer_1.c **** *
1039:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
1040:Generated_Source\PSoC4/Timer_1.c **** *  None
1041:Generated_Source\PSoC4/Timer_1.c **** *
1042:Generated_Source\PSoC4/Timer_1.c **** * Return:
1043:Generated_Source\PSoC4/Timer_1.c **** *  Capture value
1044:Generated_Source\PSoC4/Timer_1.c **** *
1045:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 43


1046:Generated_Source\PSoC4/Timer_1.c **** uint32 Timer_1_ReadCapture(void)
1047:Generated_Source\PSoC4/Timer_1.c **** {
 1350              		.loc 1 1047 0
 1351              		.cfi_startproc
 1352              		@ args = 0, pretend = 0, frame = 0
 1353              		@ frame_needed = 1, uses_anonymous_args = 0
 1354 0000 80B5     		push	{r7, lr}
 1355              		.cfi_def_cfa_offset 8
 1356              		.cfi_offset 7, -8
 1357              		.cfi_offset 14, -4
 1358 0002 00AF     		add	r7, sp, #0
 1359              		.cfi_def_cfa_register 7
1048:Generated_Source\PSoC4/Timer_1.c ****     return (Timer_1_COMP_CAP_REG & Timer_1_16BIT_MASK);
 1360              		.loc 1 1048 0
 1361 0004 034B     		ldr	r3, .L87
 1362 0006 1B68     		ldr	r3, [r3]
 1363 0008 1B04     		lsls	r3, r3, #16
 1364 000a 1B0C     		lsrs	r3, r3, #16
1049:Generated_Source\PSoC4/Timer_1.c **** }
 1365              		.loc 1 1049 0
 1366 000c 1800     		movs	r0, r3
 1367 000e BD46     		mov	sp, r7
 1368              		@ sp needed
 1369 0010 80BD     		pop	{r7, pc}
 1370              	.L88:
 1371 0012 C046     		.align	2
 1372              	.L87:
 1373 0014 0C012040 		.word	1075839244
 1374              		.cfi_endproc
 1375              	.LFE28:
 1376              		.size	Timer_1_ReadCapture, .-Timer_1_ReadCapture
 1377              		.section	.text.Timer_1_ReadCaptureBuf,"ax",%progbits
 1378              		.align	2
 1379              		.global	Timer_1_ReadCaptureBuf
 1380              		.code	16
 1381              		.thumb_func
 1382              		.type	Timer_1_ReadCaptureBuf, %function
 1383              	Timer_1_ReadCaptureBuf:
 1384              	.LFB29:
1050:Generated_Source\PSoC4/Timer_1.c **** 
1051:Generated_Source\PSoC4/Timer_1.c **** 
1052:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
1053:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_ReadCaptureBuf
1054:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
1055:Generated_Source\PSoC4/Timer_1.c **** *
1056:Generated_Source\PSoC4/Timer_1.c **** * Summary:
1057:Generated_Source\PSoC4/Timer_1.c **** *  Reads the capture buffer register. This API is applicable only for
1058:Generated_Source\PSoC4/Timer_1.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1059:Generated_Source\PSoC4/Timer_1.c **** *
1060:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
1061:Generated_Source\PSoC4/Timer_1.c **** *  None
1062:Generated_Source\PSoC4/Timer_1.c **** *
1063:Generated_Source\PSoC4/Timer_1.c **** * Return:
1064:Generated_Source\PSoC4/Timer_1.c **** *  Capture buffer value
1065:Generated_Source\PSoC4/Timer_1.c **** *
1066:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
1067:Generated_Source\PSoC4/Timer_1.c **** uint32 Timer_1_ReadCaptureBuf(void)
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 44


1068:Generated_Source\PSoC4/Timer_1.c **** {
 1385              		.loc 1 1068 0
 1386              		.cfi_startproc
 1387              		@ args = 0, pretend = 0, frame = 0
 1388              		@ frame_needed = 1, uses_anonymous_args = 0
 1389 0000 80B5     		push	{r7, lr}
 1390              		.cfi_def_cfa_offset 8
 1391              		.cfi_offset 7, -8
 1392              		.cfi_offset 14, -4
 1393 0002 00AF     		add	r7, sp, #0
 1394              		.cfi_def_cfa_register 7
1069:Generated_Source\PSoC4/Timer_1.c ****     return (Timer_1_COMP_CAP_BUF_REG & Timer_1_16BIT_MASK);
 1395              		.loc 1 1069 0
 1396 0004 034B     		ldr	r3, .L91
 1397 0006 1B68     		ldr	r3, [r3]
 1398 0008 1B04     		lsls	r3, r3, #16
 1399 000a 1B0C     		lsrs	r3, r3, #16
1070:Generated_Source\PSoC4/Timer_1.c **** }
 1400              		.loc 1 1070 0
 1401 000c 1800     		movs	r0, r3
 1402 000e BD46     		mov	sp, r7
 1403              		@ sp needed
 1404 0010 80BD     		pop	{r7, pc}
 1405              	.L92:
 1406 0012 C046     		.align	2
 1407              	.L91:
 1408 0014 10012040 		.word	1075839248
 1409              		.cfi_endproc
 1410              	.LFE29:
 1411              		.size	Timer_1_ReadCaptureBuf, .-Timer_1_ReadCaptureBuf
 1412              		.section	.text.Timer_1_SetCaptureMode,"ax",%progbits
 1413              		.align	2
 1414              		.global	Timer_1_SetCaptureMode
 1415              		.code	16
 1416              		.thumb_func
 1417              		.type	Timer_1_SetCaptureMode, %function
 1418              	Timer_1_SetCaptureMode:
 1419              	.LFB30:
1071:Generated_Source\PSoC4/Timer_1.c **** 
1072:Generated_Source\PSoC4/Timer_1.c **** 
1073:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
1074:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_SetCaptureMode
1075:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
1076:Generated_Source\PSoC4/Timer_1.c **** *
1077:Generated_Source\PSoC4/Timer_1.c **** * Summary:
1078:Generated_Source\PSoC4/Timer_1.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1079:Generated_Source\PSoC4/Timer_1.c **** *  This input is not applicable to the Timer/Counter without Capture and
1080:Generated_Source\PSoC4/Timer_1.c **** *  Quadrature Decoder modes.
1081:Generated_Source\PSoC4/Timer_1.c **** *
1082:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
1083:Generated_Source\PSoC4/Timer_1.c **** *  triggerMode: Enumerated trigger mode value
1084:Generated_Source\PSoC4/Timer_1.c **** *   Values:
1085:Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_TRIG_LEVEL     - Level
1086:Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_TRIG_RISING    - Rising edge
1087:Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_TRIG_FALLING   - Falling edge
1088:Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_TRIG_BOTH      - Both rising and falling edge
1089:Generated_Source\PSoC4/Timer_1.c **** *
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 45


1090:Generated_Source\PSoC4/Timer_1.c **** * Return:
1091:Generated_Source\PSoC4/Timer_1.c **** *  None
1092:Generated_Source\PSoC4/Timer_1.c **** *
1093:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
1094:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_SetCaptureMode(uint32 triggerMode)
1095:Generated_Source\PSoC4/Timer_1.c **** {
 1420              		.loc 1 1095 0
 1421              		.cfi_startproc
 1422              		@ args = 0, pretend = 0, frame = 16
 1423              		@ frame_needed = 1, uses_anonymous_args = 0
 1424 0000 90B5     		push	{r4, r7, lr}
 1425              		.cfi_def_cfa_offset 12
 1426              		.cfi_offset 4, -12
 1427              		.cfi_offset 7, -8
 1428              		.cfi_offset 14, -4
 1429 0002 85B0     		sub	sp, sp, #20
 1430              		.cfi_def_cfa_offset 32
 1431 0004 00AF     		add	r7, sp, #0
 1432              		.cfi_def_cfa_register 7
 1433 0006 7860     		str	r0, [r7, #4]
1096:Generated_Source\PSoC4/Timer_1.c ****     uint8 enableInterrupts;
1097:Generated_Source\PSoC4/Timer_1.c **** 
1098:Generated_Source\PSoC4/Timer_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1434              		.loc 1 1098 0
 1435 0008 0F23     		movs	r3, #15
 1436 000a FC18     		adds	r4, r7, r3
 1437 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1438 0010 0300     		movs	r3, r0
 1439 0012 2370     		strb	r3, [r4]
1099:Generated_Source\PSoC4/Timer_1.c **** 
1100:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_TRIG_CONTROL1_REG &= (uint32)~Timer_1_CAPTURE_MASK;
 1440              		.loc 1 1100 0
 1441 0014 0A4B     		ldr	r3, .L94
 1442 0016 0A4A     		ldr	r2, .L94
 1443 0018 1268     		ldr	r2, [r2]
 1444 001a 0321     		movs	r1, #3
 1445 001c 8A43     		bics	r2, r1
 1446 001e 1A60     		str	r2, [r3]
1101:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_TRIG_CONTROL1_REG |= triggerMode;
 1447              		.loc 1 1101 0
 1448 0020 074B     		ldr	r3, .L94
 1449 0022 074A     		ldr	r2, .L94
 1450 0024 1168     		ldr	r1, [r2]
 1451 0026 7A68     		ldr	r2, [r7, #4]
 1452 0028 0A43     		orrs	r2, r1
 1453 002a 1A60     		str	r2, [r3]
1102:Generated_Source\PSoC4/Timer_1.c **** 
1103:Generated_Source\PSoC4/Timer_1.c ****     CyExitCriticalSection(enableInterrupts);
 1454              		.loc 1 1103 0
 1455 002c 0F23     		movs	r3, #15
 1456 002e FB18     		adds	r3, r7, r3
 1457 0030 1B78     		ldrb	r3, [r3]
 1458 0032 1800     		movs	r0, r3
 1459 0034 FFF7FEFF 		bl	CyExitCriticalSection
1104:Generated_Source\PSoC4/Timer_1.c **** }
 1460              		.loc 1 1104 0
 1461 0038 C046     		nop
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 46


 1462 003a BD46     		mov	sp, r7
 1463 003c 05B0     		add	sp, sp, #20
 1464              		@ sp needed
 1465 003e 90BD     		pop	{r4, r7, pc}
 1466              	.L95:
 1467              		.align	2
 1468              	.L94:
 1469 0040 24012040 		.word	1075839268
 1470              		.cfi_endproc
 1471              	.LFE30:
 1472              		.size	Timer_1_SetCaptureMode, .-Timer_1_SetCaptureMode
 1473              		.section	.text.Timer_1_SetReloadMode,"ax",%progbits
 1474              		.align	2
 1475              		.global	Timer_1_SetReloadMode
 1476              		.code	16
 1477              		.thumb_func
 1478              		.type	Timer_1_SetReloadMode, %function
 1479              	Timer_1_SetReloadMode:
 1480              	.LFB31:
1105:Generated_Source\PSoC4/Timer_1.c **** 
1106:Generated_Source\PSoC4/Timer_1.c **** 
1107:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
1108:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_SetReloadMode
1109:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
1110:Generated_Source\PSoC4/Timer_1.c **** *
1111:Generated_Source\PSoC4/Timer_1.c **** * Summary:
1112:Generated_Source\PSoC4/Timer_1.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1113:Generated_Source\PSoC4/Timer_1.c **** *  input.
1114:Generated_Source\PSoC4/Timer_1.c **** *
1115:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
1116:Generated_Source\PSoC4/Timer_1.c **** *  triggerMode: Enumerated trigger mode value
1117:Generated_Source\PSoC4/Timer_1.c **** *   Values:
1118:Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_TRIG_LEVEL     - Level
1119:Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_TRIG_RISING    - Rising edge
1120:Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_TRIG_FALLING   - Falling edge
1121:Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_TRIG_BOTH      - Both rising and falling edge
1122:Generated_Source\PSoC4/Timer_1.c **** *
1123:Generated_Source\PSoC4/Timer_1.c **** * Return:
1124:Generated_Source\PSoC4/Timer_1.c **** *  None
1125:Generated_Source\PSoC4/Timer_1.c **** *
1126:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
1127:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_SetReloadMode(uint32 triggerMode)
1128:Generated_Source\PSoC4/Timer_1.c **** {
 1481              		.loc 1 1128 0
 1482              		.cfi_startproc
 1483              		@ args = 0, pretend = 0, frame = 16
 1484              		@ frame_needed = 1, uses_anonymous_args = 0
 1485 0000 90B5     		push	{r4, r7, lr}
 1486              		.cfi_def_cfa_offset 12
 1487              		.cfi_offset 4, -12
 1488              		.cfi_offset 7, -8
 1489              		.cfi_offset 14, -4
 1490 0002 85B0     		sub	sp, sp, #20
 1491              		.cfi_def_cfa_offset 32
 1492 0004 00AF     		add	r7, sp, #0
 1493              		.cfi_def_cfa_register 7
 1494 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 47


1129:Generated_Source\PSoC4/Timer_1.c ****     uint8 enableInterrupts;
1130:Generated_Source\PSoC4/Timer_1.c **** 
1131:Generated_Source\PSoC4/Timer_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1495              		.loc 1 1131 0
 1496 0008 0F23     		movs	r3, #15
 1497 000a FC18     		adds	r4, r7, r3
 1498 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1499 0010 0300     		movs	r3, r0
 1500 0012 2370     		strb	r3, [r4]
1132:Generated_Source\PSoC4/Timer_1.c **** 
1133:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_TRIG_CONTROL1_REG &= (uint32)~Timer_1_RELOAD_MASK;
 1501              		.loc 1 1133 0
 1502 0014 0B4B     		ldr	r3, .L97
 1503 0016 0B4A     		ldr	r2, .L97
 1504 0018 1268     		ldr	r2, [r2]
 1505 001a 3021     		movs	r1, #48
 1506 001c 8A43     		bics	r2, r1
 1507 001e 1A60     		str	r2, [r3]
1134:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_1_RELOAD_SHIFT));
 1508              		.loc 1 1134 0
 1509 0020 084B     		ldr	r3, .L97
 1510 0022 084A     		ldr	r2, .L97
 1511 0024 1168     		ldr	r1, [r2]
 1512 0026 7A68     		ldr	r2, [r7, #4]
 1513 0028 1201     		lsls	r2, r2, #4
 1514 002a 0A43     		orrs	r2, r1
 1515 002c 1A60     		str	r2, [r3]
1135:Generated_Source\PSoC4/Timer_1.c **** 
1136:Generated_Source\PSoC4/Timer_1.c ****     CyExitCriticalSection(enableInterrupts);
 1516              		.loc 1 1136 0
 1517 002e 0F23     		movs	r3, #15
 1518 0030 FB18     		adds	r3, r7, r3
 1519 0032 1B78     		ldrb	r3, [r3]
 1520 0034 1800     		movs	r0, r3
 1521 0036 FFF7FEFF 		bl	CyExitCriticalSection
1137:Generated_Source\PSoC4/Timer_1.c **** }
 1522              		.loc 1 1137 0
 1523 003a C046     		nop
 1524 003c BD46     		mov	sp, r7
 1525 003e 05B0     		add	sp, sp, #20
 1526              		@ sp needed
 1527 0040 90BD     		pop	{r4, r7, pc}
 1528              	.L98:
 1529 0042 C046     		.align	2
 1530              	.L97:
 1531 0044 24012040 		.word	1075839268
 1532              		.cfi_endproc
 1533              	.LFE31:
 1534              		.size	Timer_1_SetReloadMode, .-Timer_1_SetReloadMode
 1535              		.section	.text.Timer_1_SetStartMode,"ax",%progbits
 1536              		.align	2
 1537              		.global	Timer_1_SetStartMode
 1538              		.code	16
 1539              		.thumb_func
 1540              		.type	Timer_1_SetStartMode, %function
 1541              	Timer_1_SetStartMode:
 1542              	.LFB32:
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 48


1138:Generated_Source\PSoC4/Timer_1.c **** 
1139:Generated_Source\PSoC4/Timer_1.c **** 
1140:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
1141:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_SetStartMode
1142:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
1143:Generated_Source\PSoC4/Timer_1.c **** *
1144:Generated_Source\PSoC4/Timer_1.c **** * Summary:
1145:Generated_Source\PSoC4/Timer_1.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1146:Generated_Source\PSoC4/Timer_1.c **** *  phiB input.
1147:Generated_Source\PSoC4/Timer_1.c **** *
1148:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
1149:Generated_Source\PSoC4/Timer_1.c **** *  triggerMode: Enumerated trigger mode value
1150:Generated_Source\PSoC4/Timer_1.c **** *   Values:
1151:Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_TRIG_LEVEL     - Level
1152:Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_TRIG_RISING    - Rising edge
1153:Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_TRIG_FALLING   - Falling edge
1154:Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_TRIG_BOTH      - Both rising and falling edge
1155:Generated_Source\PSoC4/Timer_1.c **** *
1156:Generated_Source\PSoC4/Timer_1.c **** * Return:
1157:Generated_Source\PSoC4/Timer_1.c **** *  None
1158:Generated_Source\PSoC4/Timer_1.c **** *
1159:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
1160:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_SetStartMode(uint32 triggerMode)
1161:Generated_Source\PSoC4/Timer_1.c **** {
 1543              		.loc 1 1161 0
 1544              		.cfi_startproc
 1545              		@ args = 0, pretend = 0, frame = 16
 1546              		@ frame_needed = 1, uses_anonymous_args = 0
 1547 0000 90B5     		push	{r4, r7, lr}
 1548              		.cfi_def_cfa_offset 12
 1549              		.cfi_offset 4, -12
 1550              		.cfi_offset 7, -8
 1551              		.cfi_offset 14, -4
 1552 0002 85B0     		sub	sp, sp, #20
 1553              		.cfi_def_cfa_offset 32
 1554 0004 00AF     		add	r7, sp, #0
 1555              		.cfi_def_cfa_register 7
 1556 0006 7860     		str	r0, [r7, #4]
1162:Generated_Source\PSoC4/Timer_1.c ****     uint8 enableInterrupts;
1163:Generated_Source\PSoC4/Timer_1.c **** 
1164:Generated_Source\PSoC4/Timer_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1557              		.loc 1 1164 0
 1558 0008 0F23     		movs	r3, #15
 1559 000a FC18     		adds	r4, r7, r3
 1560 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1561 0010 0300     		movs	r3, r0
 1562 0012 2370     		strb	r3, [r4]
1165:Generated_Source\PSoC4/Timer_1.c **** 
1166:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_TRIG_CONTROL1_REG &= (uint32)~Timer_1_START_MASK;
 1563              		.loc 1 1166 0
 1564 0014 0B4B     		ldr	r3, .L100
 1565 0016 0B4A     		ldr	r2, .L100
 1566 0018 1268     		ldr	r2, [r2]
 1567 001a 0B49     		ldr	r1, .L100+4
 1568 001c 0A40     		ands	r2, r1
 1569 001e 1A60     		str	r2, [r3]
1167:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_1_START_SHIFT));
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 49


 1570              		.loc 1 1167 0
 1571 0020 084B     		ldr	r3, .L100
 1572 0022 084A     		ldr	r2, .L100
 1573 0024 1168     		ldr	r1, [r2]
 1574 0026 7A68     		ldr	r2, [r7, #4]
 1575 0028 1202     		lsls	r2, r2, #8
 1576 002a 0A43     		orrs	r2, r1
 1577 002c 1A60     		str	r2, [r3]
1168:Generated_Source\PSoC4/Timer_1.c **** 
1169:Generated_Source\PSoC4/Timer_1.c ****     CyExitCriticalSection(enableInterrupts);
 1578              		.loc 1 1169 0
 1579 002e 0F23     		movs	r3, #15
 1580 0030 FB18     		adds	r3, r7, r3
 1581 0032 1B78     		ldrb	r3, [r3]
 1582 0034 1800     		movs	r0, r3
 1583 0036 FFF7FEFF 		bl	CyExitCriticalSection
1170:Generated_Source\PSoC4/Timer_1.c **** }
 1584              		.loc 1 1170 0
 1585 003a C046     		nop
 1586 003c BD46     		mov	sp, r7
 1587 003e 05B0     		add	sp, sp, #20
 1588              		@ sp needed
 1589 0040 90BD     		pop	{r4, r7, pc}
 1590              	.L101:
 1591 0042 C046     		.align	2
 1592              	.L100:
 1593 0044 24012040 		.word	1075839268
 1594 0048 FFFCFFFF 		.word	-769
 1595              		.cfi_endproc
 1596              	.LFE32:
 1597              		.size	Timer_1_SetStartMode, .-Timer_1_SetStartMode
 1598              		.section	.text.Timer_1_SetStopMode,"ax",%progbits
 1599              		.align	2
 1600              		.global	Timer_1_SetStopMode
 1601              		.code	16
 1602              		.thumb_func
 1603              		.type	Timer_1_SetStopMode, %function
 1604              	Timer_1_SetStopMode:
 1605              	.LFB33:
1171:Generated_Source\PSoC4/Timer_1.c **** 
1172:Generated_Source\PSoC4/Timer_1.c **** 
1173:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
1174:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_SetStopMode
1175:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
1176:Generated_Source\PSoC4/Timer_1.c **** *
1177:Generated_Source\PSoC4/Timer_1.c **** * Summary:
1178:Generated_Source\PSoC4/Timer_1.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1179:Generated_Source\PSoC4/Timer_1.c **** *
1180:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
1181:Generated_Source\PSoC4/Timer_1.c **** *  triggerMode: Enumerated trigger mode value
1182:Generated_Source\PSoC4/Timer_1.c **** *   Values:
1183:Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_TRIG_LEVEL     - Level
1184:Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_TRIG_RISING    - Rising edge
1185:Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_TRIG_FALLING   - Falling edge
1186:Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_TRIG_BOTH      - Both rising and falling edge
1187:Generated_Source\PSoC4/Timer_1.c **** *
1188:Generated_Source\PSoC4/Timer_1.c **** * Return:
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 50


1189:Generated_Source\PSoC4/Timer_1.c **** *  None
1190:Generated_Source\PSoC4/Timer_1.c **** *
1191:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
1192:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_SetStopMode(uint32 triggerMode)
1193:Generated_Source\PSoC4/Timer_1.c **** {
 1606              		.loc 1 1193 0
 1607              		.cfi_startproc
 1608              		@ args = 0, pretend = 0, frame = 16
 1609              		@ frame_needed = 1, uses_anonymous_args = 0
 1610 0000 90B5     		push	{r4, r7, lr}
 1611              		.cfi_def_cfa_offset 12
 1612              		.cfi_offset 4, -12
 1613              		.cfi_offset 7, -8
 1614              		.cfi_offset 14, -4
 1615 0002 85B0     		sub	sp, sp, #20
 1616              		.cfi_def_cfa_offset 32
 1617 0004 00AF     		add	r7, sp, #0
 1618              		.cfi_def_cfa_register 7
 1619 0006 7860     		str	r0, [r7, #4]
1194:Generated_Source\PSoC4/Timer_1.c ****     uint8 enableInterrupts;
1195:Generated_Source\PSoC4/Timer_1.c **** 
1196:Generated_Source\PSoC4/Timer_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1620              		.loc 1 1196 0
 1621 0008 0F23     		movs	r3, #15
 1622 000a FC18     		adds	r4, r7, r3
 1623 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1624 0010 0300     		movs	r3, r0
 1625 0012 2370     		strb	r3, [r4]
1197:Generated_Source\PSoC4/Timer_1.c **** 
1198:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_TRIG_CONTROL1_REG &= (uint32)~Timer_1_STOP_MASK;
 1626              		.loc 1 1198 0
 1627 0014 0B4B     		ldr	r3, .L103
 1628 0016 0B4A     		ldr	r2, .L103
 1629 0018 1268     		ldr	r2, [r2]
 1630 001a C021     		movs	r1, #192
 1631 001c 8A43     		bics	r2, r1
 1632 001e 1A60     		str	r2, [r3]
1199:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_1_STOP_SHIFT));
 1633              		.loc 1 1199 0
 1634 0020 084B     		ldr	r3, .L103
 1635 0022 084A     		ldr	r2, .L103
 1636 0024 1168     		ldr	r1, [r2]
 1637 0026 7A68     		ldr	r2, [r7, #4]
 1638 0028 9201     		lsls	r2, r2, #6
 1639 002a 0A43     		orrs	r2, r1
 1640 002c 1A60     		str	r2, [r3]
1200:Generated_Source\PSoC4/Timer_1.c **** 
1201:Generated_Source\PSoC4/Timer_1.c ****     CyExitCriticalSection(enableInterrupts);
 1641              		.loc 1 1201 0
 1642 002e 0F23     		movs	r3, #15
 1643 0030 FB18     		adds	r3, r7, r3
 1644 0032 1B78     		ldrb	r3, [r3]
 1645 0034 1800     		movs	r0, r3
 1646 0036 FFF7FEFF 		bl	CyExitCriticalSection
1202:Generated_Source\PSoC4/Timer_1.c **** }
 1647              		.loc 1 1202 0
 1648 003a C046     		nop
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 51


 1649 003c BD46     		mov	sp, r7
 1650 003e 05B0     		add	sp, sp, #20
 1651              		@ sp needed
 1652 0040 90BD     		pop	{r4, r7, pc}
 1653              	.L104:
 1654 0042 C046     		.align	2
 1655              	.L103:
 1656 0044 24012040 		.word	1075839268
 1657              		.cfi_endproc
 1658              	.LFE33:
 1659              		.size	Timer_1_SetStopMode, .-Timer_1_SetStopMode
 1660              		.section	.text.Timer_1_SetCountMode,"ax",%progbits
 1661              		.align	2
 1662              		.global	Timer_1_SetCountMode
 1663              		.code	16
 1664              		.thumb_func
 1665              		.type	Timer_1_SetCountMode, %function
 1666              	Timer_1_SetCountMode:
 1667              	.LFB34:
1203:Generated_Source\PSoC4/Timer_1.c **** 
1204:Generated_Source\PSoC4/Timer_1.c **** 
1205:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
1206:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_SetCountMode
1207:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
1208:Generated_Source\PSoC4/Timer_1.c **** *
1209:Generated_Source\PSoC4/Timer_1.c **** * Summary:
1210:Generated_Source\PSoC4/Timer_1.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1211:Generated_Source\PSoC4/Timer_1.c **** *  input.
1212:Generated_Source\PSoC4/Timer_1.c **** *
1213:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
1214:Generated_Source\PSoC4/Timer_1.c **** *  triggerMode: Enumerated trigger mode value
1215:Generated_Source\PSoC4/Timer_1.c **** *   Values:
1216:Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_TRIG_LEVEL     - Level
1217:Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_TRIG_RISING    - Rising edge
1218:Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_TRIG_FALLING   - Falling edge
1219:Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_TRIG_BOTH      - Both rising and falling edge
1220:Generated_Source\PSoC4/Timer_1.c **** *
1221:Generated_Source\PSoC4/Timer_1.c **** * Return:
1222:Generated_Source\PSoC4/Timer_1.c **** *  None
1223:Generated_Source\PSoC4/Timer_1.c **** *
1224:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
1225:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_SetCountMode(uint32 triggerMode)
1226:Generated_Source\PSoC4/Timer_1.c **** {
 1668              		.loc 1 1226 0
 1669              		.cfi_startproc
 1670              		@ args = 0, pretend = 0, frame = 16
 1671              		@ frame_needed = 1, uses_anonymous_args = 0
 1672 0000 90B5     		push	{r4, r7, lr}
 1673              		.cfi_def_cfa_offset 12
 1674              		.cfi_offset 4, -12
 1675              		.cfi_offset 7, -8
 1676              		.cfi_offset 14, -4
 1677 0002 85B0     		sub	sp, sp, #20
 1678              		.cfi_def_cfa_offset 32
 1679 0004 00AF     		add	r7, sp, #0
 1680              		.cfi_def_cfa_register 7
 1681 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 52


1227:Generated_Source\PSoC4/Timer_1.c ****     uint8 enableInterrupts;
1228:Generated_Source\PSoC4/Timer_1.c **** 
1229:Generated_Source\PSoC4/Timer_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1682              		.loc 1 1229 0
 1683 0008 0F23     		movs	r3, #15
 1684 000a FC18     		adds	r4, r7, r3
 1685 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1686 0010 0300     		movs	r3, r0
 1687 0012 2370     		strb	r3, [r4]
1230:Generated_Source\PSoC4/Timer_1.c **** 
1231:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_TRIG_CONTROL1_REG &= (uint32)~Timer_1_COUNT_MASK;
 1688              		.loc 1 1231 0
 1689 0014 0B4B     		ldr	r3, .L106
 1690 0016 0B4A     		ldr	r2, .L106
 1691 0018 1268     		ldr	r2, [r2]
 1692 001a 0C21     		movs	r1, #12
 1693 001c 8A43     		bics	r2, r1
 1694 001e 1A60     		str	r2, [r3]
1232:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_1_COUNT_SHIFT));
 1695              		.loc 1 1232 0
 1696 0020 084B     		ldr	r3, .L106
 1697 0022 084A     		ldr	r2, .L106
 1698 0024 1168     		ldr	r1, [r2]
 1699 0026 7A68     		ldr	r2, [r7, #4]
 1700 0028 9200     		lsls	r2, r2, #2
 1701 002a 0A43     		orrs	r2, r1
 1702 002c 1A60     		str	r2, [r3]
1233:Generated_Source\PSoC4/Timer_1.c **** 
1234:Generated_Source\PSoC4/Timer_1.c ****     CyExitCriticalSection(enableInterrupts);
 1703              		.loc 1 1234 0
 1704 002e 0F23     		movs	r3, #15
 1705 0030 FB18     		adds	r3, r7, r3
 1706 0032 1B78     		ldrb	r3, [r3]
 1707 0034 1800     		movs	r0, r3
 1708 0036 FFF7FEFF 		bl	CyExitCriticalSection
1235:Generated_Source\PSoC4/Timer_1.c **** }
 1709              		.loc 1 1235 0
 1710 003a C046     		nop
 1711 003c BD46     		mov	sp, r7
 1712 003e 05B0     		add	sp, sp, #20
 1713              		@ sp needed
 1714 0040 90BD     		pop	{r4, r7, pc}
 1715              	.L107:
 1716 0042 C046     		.align	2
 1717              	.L106:
 1718 0044 24012040 		.word	1075839268
 1719              		.cfi_endproc
 1720              	.LFE34:
 1721              		.size	Timer_1_SetCountMode, .-Timer_1_SetCountMode
 1722              		.section	.text.Timer_1_TriggerCommand,"ax",%progbits
 1723              		.align	2
 1724              		.global	Timer_1_TriggerCommand
 1725              		.code	16
 1726              		.thumb_func
 1727              		.type	Timer_1_TriggerCommand, %function
 1728              	Timer_1_TriggerCommand:
 1729              	.LFB35:
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 53


1236:Generated_Source\PSoC4/Timer_1.c **** 
1237:Generated_Source\PSoC4/Timer_1.c **** 
1238:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
1239:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_TriggerCommand
1240:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
1241:Generated_Source\PSoC4/Timer_1.c **** *
1242:Generated_Source\PSoC4/Timer_1.c **** * Summary:
1243:Generated_Source\PSoC4/Timer_1.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1244:Generated_Source\PSoC4/Timer_1.c **** *  The mask can be used to apply this command simultaneously to more than one
1245:Generated_Source\PSoC4/Timer_1.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1246:Generated_Source\PSoC4/Timer_1.c **** *
1247:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
1248:Generated_Source\PSoC4/Timer_1.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1249:Generated_Source\PSoC4/Timer_1.c **** *        command should apply to.  This function from one instance can be used
1250:Generated_Source\PSoC4/Timer_1.c **** *        to apply the command to any of the instances in the design.
1251:Generated_Source\PSoC4/Timer_1.c **** *        The mask value for a specific instance is available with the MASK
1252:Generated_Source\PSoC4/Timer_1.c **** *        define.
1253:Generated_Source\PSoC4/Timer_1.c **** *  command: Enumerated command values. Capture command only applicable for
1254:Generated_Source\PSoC4/Timer_1.c **** *           Timer/Counter with Capture and PWM modes.
1255:Generated_Source\PSoC4/Timer_1.c **** *   Values:
1256:Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_CMD_CAPTURE    - Trigger Capture/Switch command
1257:Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_CMD_RELOAD     - Trigger Reload/Index command
1258:Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_CMD_STOP       - Trigger Stop/Kill command
1259:Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_CMD_START      - Trigger Start/phiB command
1260:Generated_Source\PSoC4/Timer_1.c **** *
1261:Generated_Source\PSoC4/Timer_1.c **** * Return:
1262:Generated_Source\PSoC4/Timer_1.c **** *  None
1263:Generated_Source\PSoC4/Timer_1.c **** *
1264:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
1265:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_TriggerCommand(uint32 mask, uint32 command)
1266:Generated_Source\PSoC4/Timer_1.c **** {
 1730              		.loc 1 1266 0
 1731              		.cfi_startproc
 1732              		@ args = 0, pretend = 0, frame = 16
 1733              		@ frame_needed = 1, uses_anonymous_args = 0
 1734 0000 90B5     		push	{r4, r7, lr}
 1735              		.cfi_def_cfa_offset 12
 1736              		.cfi_offset 4, -12
 1737              		.cfi_offset 7, -8
 1738              		.cfi_offset 14, -4
 1739 0002 85B0     		sub	sp, sp, #20
 1740              		.cfi_def_cfa_offset 32
 1741 0004 00AF     		add	r7, sp, #0
 1742              		.cfi_def_cfa_register 7
 1743 0006 7860     		str	r0, [r7, #4]
 1744 0008 3960     		str	r1, [r7]
1267:Generated_Source\PSoC4/Timer_1.c ****     uint8 enableInterrupts;
1268:Generated_Source\PSoC4/Timer_1.c **** 
1269:Generated_Source\PSoC4/Timer_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1745              		.loc 1 1269 0
 1746 000a 0F23     		movs	r3, #15
 1747 000c FC18     		adds	r4, r7, r3
 1748 000e FFF7FEFF 		bl	CyEnterCriticalSection
 1749 0012 0300     		movs	r3, r0
 1750 0014 2370     		strb	r3, [r4]
1270:Generated_Source\PSoC4/Timer_1.c **** 
1271:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_COMMAND_REG = ((uint32)(mask << command));
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 54


 1751              		.loc 1 1271 0
 1752 0016 084B     		ldr	r3, .L109
 1753 0018 7968     		ldr	r1, [r7, #4]
 1754 001a 3A68     		ldr	r2, [r7]
 1755 001c 9140     		lsls	r1, r1, r2
 1756 001e 0A00     		movs	r2, r1
 1757 0020 1A60     		str	r2, [r3]
1272:Generated_Source\PSoC4/Timer_1.c **** 
1273:Generated_Source\PSoC4/Timer_1.c ****     CyExitCriticalSection(enableInterrupts);
 1758              		.loc 1 1273 0
 1759 0022 0F23     		movs	r3, #15
 1760 0024 FB18     		adds	r3, r7, r3
 1761 0026 1B78     		ldrb	r3, [r3]
 1762 0028 1800     		movs	r0, r3
 1763 002a FFF7FEFF 		bl	CyExitCriticalSection
1274:Generated_Source\PSoC4/Timer_1.c **** }
 1764              		.loc 1 1274 0
 1765 002e C046     		nop
 1766 0030 BD46     		mov	sp, r7
 1767 0032 05B0     		add	sp, sp, #20
 1768              		@ sp needed
 1769 0034 90BD     		pop	{r4, r7, pc}
 1770              	.L110:
 1771 0036 C046     		.align	2
 1772              	.L109:
 1773 0038 08002040 		.word	1075838984
 1774              		.cfi_endproc
 1775              	.LFE35:
 1776              		.size	Timer_1_TriggerCommand, .-Timer_1_TriggerCommand
 1777              		.section	.text.Timer_1_ReadStatus,"ax",%progbits
 1778              		.align	2
 1779              		.global	Timer_1_ReadStatus
 1780              		.code	16
 1781              		.thumb_func
 1782              		.type	Timer_1_ReadStatus, %function
 1783              	Timer_1_ReadStatus:
 1784              	.LFB36:
1275:Generated_Source\PSoC4/Timer_1.c **** 
1276:Generated_Source\PSoC4/Timer_1.c **** 
1277:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
1278:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_ReadStatus
1279:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
1280:Generated_Source\PSoC4/Timer_1.c **** *
1281:Generated_Source\PSoC4/Timer_1.c **** * Summary:
1282:Generated_Source\PSoC4/Timer_1.c **** *  Reads the status of the Timer_1.
1283:Generated_Source\PSoC4/Timer_1.c **** *
1284:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
1285:Generated_Source\PSoC4/Timer_1.c **** *  None
1286:Generated_Source\PSoC4/Timer_1.c **** *
1287:Generated_Source\PSoC4/Timer_1.c **** * Return:
1288:Generated_Source\PSoC4/Timer_1.c **** *  Status
1289:Generated_Source\PSoC4/Timer_1.c **** *   Values:
1290:Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_STATUS_DOWN    - Set if counting down
1291:Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_STATUS_RUNNING - Set if counter is running
1292:Generated_Source\PSoC4/Timer_1.c **** *
1293:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
1294:Generated_Source\PSoC4/Timer_1.c **** uint32 Timer_1_ReadStatus(void)
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 55


1295:Generated_Source\PSoC4/Timer_1.c **** {
 1785              		.loc 1 1295 0
 1786              		.cfi_startproc
 1787              		@ args = 0, pretend = 0, frame = 0
 1788              		@ frame_needed = 1, uses_anonymous_args = 0
 1789 0000 80B5     		push	{r7, lr}
 1790              		.cfi_def_cfa_offset 8
 1791              		.cfi_offset 7, -8
 1792              		.cfi_offset 14, -4
 1793 0002 00AF     		add	r7, sp, #0
 1794              		.cfi_def_cfa_register 7
1296:Generated_Source\PSoC4/Timer_1.c ****     return ((Timer_1_STATUS_REG >> Timer_1_RUNNING_STATUS_SHIFT) |
 1795              		.loc 1 1296 0
 1796 0004 054B     		ldr	r3, .L113
 1797 0006 1B68     		ldr	r3, [r3]
 1798 0008 9A0F     		lsrs	r2, r3, #30
1297:Generated_Source\PSoC4/Timer_1.c ****             (Timer_1_STATUS_REG & Timer_1_STATUS_DOWN));
 1799              		.loc 1 1297 0
 1800 000a 044B     		ldr	r3, .L113
 1801 000c 1B68     		ldr	r3, [r3]
 1802 000e 0121     		movs	r1, #1
 1803 0010 0B40     		ands	r3, r1
1296:Generated_Source\PSoC4/Timer_1.c ****     return ((Timer_1_STATUS_REG >> Timer_1_RUNNING_STATUS_SHIFT) |
 1804              		.loc 1 1296 0
 1805 0012 1343     		orrs	r3, r2
1298:Generated_Source\PSoC4/Timer_1.c **** }
 1806              		.loc 1 1298 0
 1807 0014 1800     		movs	r0, r3
 1808 0016 BD46     		mov	sp, r7
 1809              		@ sp needed
 1810 0018 80BD     		pop	{r7, pc}
 1811              	.L114:
 1812 001a C046     		.align	2
 1813              	.L113:
 1814 001c 04012040 		.word	1075839236
 1815              		.cfi_endproc
 1816              	.LFE36:
 1817              		.size	Timer_1_ReadStatus, .-Timer_1_ReadStatus
 1818              		.section	.text.Timer_1_SetInterruptMode,"ax",%progbits
 1819              		.align	2
 1820              		.global	Timer_1_SetInterruptMode
 1821              		.code	16
 1822              		.thumb_func
 1823              		.type	Timer_1_SetInterruptMode, %function
 1824              	Timer_1_SetInterruptMode:
 1825              	.LFB37:
1299:Generated_Source\PSoC4/Timer_1.c **** 
1300:Generated_Source\PSoC4/Timer_1.c **** 
1301:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
1302:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_SetInterruptMode
1303:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
1304:Generated_Source\PSoC4/Timer_1.c **** *
1305:Generated_Source\PSoC4/Timer_1.c **** * Summary:
1306:Generated_Source\PSoC4/Timer_1.c **** *  Sets the interrupt mask to control which interrupt
1307:Generated_Source\PSoC4/Timer_1.c **** *  requests generate the interrupt signal.
1308:Generated_Source\PSoC4/Timer_1.c **** *
1309:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 56


1310:Generated_Source\PSoC4/Timer_1.c **** *   interruptMask: Mask of bits to be enabled
1311:Generated_Source\PSoC4/Timer_1.c **** *   Values:
1312:Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_INTR_MASK_TC       - Terminal count mask
1313:Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1314:Generated_Source\PSoC4/Timer_1.c **** *
1315:Generated_Source\PSoC4/Timer_1.c **** * Return:
1316:Generated_Source\PSoC4/Timer_1.c **** *  None
1317:Generated_Source\PSoC4/Timer_1.c **** *
1318:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
1319:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_SetInterruptMode(uint32 interruptMask)
1320:Generated_Source\PSoC4/Timer_1.c **** {
 1826              		.loc 1 1320 0
 1827              		.cfi_startproc
 1828              		@ args = 0, pretend = 0, frame = 8
 1829              		@ frame_needed = 1, uses_anonymous_args = 0
 1830 0000 80B5     		push	{r7, lr}
 1831              		.cfi_def_cfa_offset 8
 1832              		.cfi_offset 7, -8
 1833              		.cfi_offset 14, -4
 1834 0002 82B0     		sub	sp, sp, #8
 1835              		.cfi_def_cfa_offset 16
 1836 0004 00AF     		add	r7, sp, #0
 1837              		.cfi_def_cfa_register 7
 1838 0006 7860     		str	r0, [r7, #4]
1321:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_INTERRUPT_MASK_REG =  interruptMask;
 1839              		.loc 1 1321 0
 1840 0008 034B     		ldr	r3, .L116
 1841 000a 7A68     		ldr	r2, [r7, #4]
 1842 000c 1A60     		str	r2, [r3]
1322:Generated_Source\PSoC4/Timer_1.c **** }
 1843              		.loc 1 1322 0
 1844 000e C046     		nop
 1845 0010 BD46     		mov	sp, r7
 1846 0012 02B0     		add	sp, sp, #8
 1847              		@ sp needed
 1848 0014 80BD     		pop	{r7, pc}
 1849              	.L117:
 1850 0016 C046     		.align	2
 1851              	.L116:
 1852 0018 38012040 		.word	1075839288
 1853              		.cfi_endproc
 1854              	.LFE37:
 1855              		.size	Timer_1_SetInterruptMode, .-Timer_1_SetInterruptMode
 1856              		.section	.text.Timer_1_GetInterruptSourceMasked,"ax",%progbits
 1857              		.align	2
 1858              		.global	Timer_1_GetInterruptSourceMasked
 1859              		.code	16
 1860              		.thumb_func
 1861              		.type	Timer_1_GetInterruptSourceMasked, %function
 1862              	Timer_1_GetInterruptSourceMasked:
 1863              	.LFB38:
1323:Generated_Source\PSoC4/Timer_1.c **** 
1324:Generated_Source\PSoC4/Timer_1.c **** 
1325:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
1326:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_GetInterruptSourceMasked
1327:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
1328:Generated_Source\PSoC4/Timer_1.c **** *
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 57


1329:Generated_Source\PSoC4/Timer_1.c **** * Summary:
1330:Generated_Source\PSoC4/Timer_1.c **** *  Gets the interrupt requests masked by the interrupt mask.
1331:Generated_Source\PSoC4/Timer_1.c **** *
1332:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
1333:Generated_Source\PSoC4/Timer_1.c **** *   None
1334:Generated_Source\PSoC4/Timer_1.c **** *
1335:Generated_Source\PSoC4/Timer_1.c **** * Return:
1336:Generated_Source\PSoC4/Timer_1.c **** *  Masked interrupt source
1337:Generated_Source\PSoC4/Timer_1.c **** *   Values:
1338:Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_INTR_MASK_TC       - Terminal count mask
1339:Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1340:Generated_Source\PSoC4/Timer_1.c **** *
1341:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
1342:Generated_Source\PSoC4/Timer_1.c **** uint32 Timer_1_GetInterruptSourceMasked(void)
1343:Generated_Source\PSoC4/Timer_1.c **** {
 1864              		.loc 1 1343 0
 1865              		.cfi_startproc
 1866              		@ args = 0, pretend = 0, frame = 0
 1867              		@ frame_needed = 1, uses_anonymous_args = 0
 1868 0000 80B5     		push	{r7, lr}
 1869              		.cfi_def_cfa_offset 8
 1870              		.cfi_offset 7, -8
 1871              		.cfi_offset 14, -4
 1872 0002 00AF     		add	r7, sp, #0
 1873              		.cfi_def_cfa_register 7
1344:Generated_Source\PSoC4/Timer_1.c ****     return (Timer_1_INTERRUPT_MASKED_REG);
 1874              		.loc 1 1344 0
 1875 0004 024B     		ldr	r3, .L120
 1876 0006 1B68     		ldr	r3, [r3]
1345:Generated_Source\PSoC4/Timer_1.c **** }
 1877              		.loc 1 1345 0
 1878 0008 1800     		movs	r0, r3
 1879 000a BD46     		mov	sp, r7
 1880              		@ sp needed
 1881 000c 80BD     		pop	{r7, pc}
 1882              	.L121:
 1883 000e C046     		.align	2
 1884              	.L120:
 1885 0010 3C012040 		.word	1075839292
 1886              		.cfi_endproc
 1887              	.LFE38:
 1888              		.size	Timer_1_GetInterruptSourceMasked, .-Timer_1_GetInterruptSourceMasked
 1889              		.section	.text.Timer_1_GetInterruptSource,"ax",%progbits
 1890              		.align	2
 1891              		.global	Timer_1_GetInterruptSource
 1892              		.code	16
 1893              		.thumb_func
 1894              		.type	Timer_1_GetInterruptSource, %function
 1895              	Timer_1_GetInterruptSource:
 1896              	.LFB39:
1346:Generated_Source\PSoC4/Timer_1.c **** 
1347:Generated_Source\PSoC4/Timer_1.c **** 
1348:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
1349:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_GetInterruptSource
1350:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
1351:Generated_Source\PSoC4/Timer_1.c **** *
1352:Generated_Source\PSoC4/Timer_1.c **** * Summary:
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 58


1353:Generated_Source\PSoC4/Timer_1.c **** *  Gets the interrupt requests (without masking).
1354:Generated_Source\PSoC4/Timer_1.c **** *
1355:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
1356:Generated_Source\PSoC4/Timer_1.c **** *  None
1357:Generated_Source\PSoC4/Timer_1.c **** *
1358:Generated_Source\PSoC4/Timer_1.c **** * Return:
1359:Generated_Source\PSoC4/Timer_1.c **** *  Interrupt request value
1360:Generated_Source\PSoC4/Timer_1.c **** *   Values:
1361:Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_INTR_MASK_TC       - Terminal count mask
1362:Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1363:Generated_Source\PSoC4/Timer_1.c **** *
1364:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
1365:Generated_Source\PSoC4/Timer_1.c **** uint32 Timer_1_GetInterruptSource(void)
1366:Generated_Source\PSoC4/Timer_1.c **** {
 1897              		.loc 1 1366 0
 1898              		.cfi_startproc
 1899              		@ args = 0, pretend = 0, frame = 0
 1900              		@ frame_needed = 1, uses_anonymous_args = 0
 1901 0000 80B5     		push	{r7, lr}
 1902              		.cfi_def_cfa_offset 8
 1903              		.cfi_offset 7, -8
 1904              		.cfi_offset 14, -4
 1905 0002 00AF     		add	r7, sp, #0
 1906              		.cfi_def_cfa_register 7
1367:Generated_Source\PSoC4/Timer_1.c ****     return (Timer_1_INTERRUPT_REQ_REG);
 1907              		.loc 1 1367 0
 1908 0004 024B     		ldr	r3, .L124
 1909 0006 1B68     		ldr	r3, [r3]
1368:Generated_Source\PSoC4/Timer_1.c **** }
 1910              		.loc 1 1368 0
 1911 0008 1800     		movs	r0, r3
 1912 000a BD46     		mov	sp, r7
 1913              		@ sp needed
 1914 000c 80BD     		pop	{r7, pc}
 1915              	.L125:
 1916 000e C046     		.align	2
 1917              	.L124:
 1918 0010 30012040 		.word	1075839280
 1919              		.cfi_endproc
 1920              	.LFE39:
 1921              		.size	Timer_1_GetInterruptSource, .-Timer_1_GetInterruptSource
 1922              		.section	.text.Timer_1_ClearInterrupt,"ax",%progbits
 1923              		.align	2
 1924              		.global	Timer_1_ClearInterrupt
 1925              		.code	16
 1926              		.thumb_func
 1927              		.type	Timer_1_ClearInterrupt, %function
 1928              	Timer_1_ClearInterrupt:
 1929              	.LFB40:
1369:Generated_Source\PSoC4/Timer_1.c **** 
1370:Generated_Source\PSoC4/Timer_1.c **** 
1371:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
1372:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_ClearInterrupt
1373:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
1374:Generated_Source\PSoC4/Timer_1.c **** *
1375:Generated_Source\PSoC4/Timer_1.c **** * Summary:
1376:Generated_Source\PSoC4/Timer_1.c **** *  Clears the interrupt request.
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 59


1377:Generated_Source\PSoC4/Timer_1.c **** *
1378:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
1379:Generated_Source\PSoC4/Timer_1.c **** *   interruptMask: Mask of interrupts to clear
1380:Generated_Source\PSoC4/Timer_1.c **** *   Values:
1381:Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_INTR_MASK_TC       - Terminal count mask
1382:Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1383:Generated_Source\PSoC4/Timer_1.c **** *
1384:Generated_Source\PSoC4/Timer_1.c **** * Return:
1385:Generated_Source\PSoC4/Timer_1.c **** *  None
1386:Generated_Source\PSoC4/Timer_1.c **** *
1387:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
1388:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_ClearInterrupt(uint32 interruptMask)
1389:Generated_Source\PSoC4/Timer_1.c **** {
 1930              		.loc 1 1389 0
 1931              		.cfi_startproc
 1932              		@ args = 0, pretend = 0, frame = 8
 1933              		@ frame_needed = 1, uses_anonymous_args = 0
 1934 0000 80B5     		push	{r7, lr}
 1935              		.cfi_def_cfa_offset 8
 1936              		.cfi_offset 7, -8
 1937              		.cfi_offset 14, -4
 1938 0002 82B0     		sub	sp, sp, #8
 1939              		.cfi_def_cfa_offset 16
 1940 0004 00AF     		add	r7, sp, #0
 1941              		.cfi_def_cfa_register 7
 1942 0006 7860     		str	r0, [r7, #4]
1390:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_INTERRUPT_REQ_REG = interruptMask;
 1943              		.loc 1 1390 0
 1944 0008 034B     		ldr	r3, .L127
 1945 000a 7A68     		ldr	r2, [r7, #4]
 1946 000c 1A60     		str	r2, [r3]
1391:Generated_Source\PSoC4/Timer_1.c **** }
 1947              		.loc 1 1391 0
 1948 000e C046     		nop
 1949 0010 BD46     		mov	sp, r7
 1950 0012 02B0     		add	sp, sp, #8
 1951              		@ sp needed
 1952 0014 80BD     		pop	{r7, pc}
 1953              	.L128:
 1954 0016 C046     		.align	2
 1955              	.L127:
 1956 0018 30012040 		.word	1075839280
 1957              		.cfi_endproc
 1958              	.LFE40:
 1959              		.size	Timer_1_ClearInterrupt, .-Timer_1_ClearInterrupt
 1960              		.section	.text.Timer_1_SetInterrupt,"ax",%progbits
 1961              		.align	2
 1962              		.global	Timer_1_SetInterrupt
 1963              		.code	16
 1964              		.thumb_func
 1965              		.type	Timer_1_SetInterrupt, %function
 1966              	Timer_1_SetInterrupt:
 1967              	.LFB41:
1392:Generated_Source\PSoC4/Timer_1.c **** 
1393:Generated_Source\PSoC4/Timer_1.c **** 
1394:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
1395:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_SetInterrupt
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 60


1396:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
1397:Generated_Source\PSoC4/Timer_1.c **** *
1398:Generated_Source\PSoC4/Timer_1.c **** * Summary:
1399:Generated_Source\PSoC4/Timer_1.c **** *  Sets a software interrupt request.
1400:Generated_Source\PSoC4/Timer_1.c **** *
1401:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
1402:Generated_Source\PSoC4/Timer_1.c **** *   interruptMask: Mask of interrupts to set
1403:Generated_Source\PSoC4/Timer_1.c **** *   Values:
1404:Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_INTR_MASK_TC       - Terminal count mask
1405:Generated_Source\PSoC4/Timer_1.c **** *     - Timer_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1406:Generated_Source\PSoC4/Timer_1.c **** *
1407:Generated_Source\PSoC4/Timer_1.c **** * Return:
1408:Generated_Source\PSoC4/Timer_1.c **** *  None
1409:Generated_Source\PSoC4/Timer_1.c **** *
1410:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
1411:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_SetInterrupt(uint32 interruptMask)
1412:Generated_Source\PSoC4/Timer_1.c **** {
 1968              		.loc 1 1412 0
 1969              		.cfi_startproc
 1970              		@ args = 0, pretend = 0, frame = 8
 1971              		@ frame_needed = 1, uses_anonymous_args = 0
 1972 0000 80B5     		push	{r7, lr}
 1973              		.cfi_def_cfa_offset 8
 1974              		.cfi_offset 7, -8
 1975              		.cfi_offset 14, -4
 1976 0002 82B0     		sub	sp, sp, #8
 1977              		.cfi_def_cfa_offset 16
 1978 0004 00AF     		add	r7, sp, #0
 1979              		.cfi_def_cfa_register 7
 1980 0006 7860     		str	r0, [r7, #4]
1413:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_INTERRUPT_SET_REG = interruptMask;
 1981              		.loc 1 1413 0
 1982 0008 034B     		ldr	r3, .L130
 1983 000a 7A68     		ldr	r2, [r7, #4]
 1984 000c 1A60     		str	r2, [r3]
1414:Generated_Source\PSoC4/Timer_1.c **** }
 1985              		.loc 1 1414 0
 1986 000e C046     		nop
 1987 0010 BD46     		mov	sp, r7
 1988 0012 02B0     		add	sp, sp, #8
 1989              		@ sp needed
 1990 0014 80BD     		pop	{r7, pc}
 1991              	.L131:
 1992 0016 C046     		.align	2
 1993              	.L130:
 1994 0018 34012040 		.word	1075839284
 1995              		.cfi_endproc
 1996              	.LFE41:
 1997              		.size	Timer_1_SetInterrupt, .-Timer_1_SetInterrupt
 1998              		.text
 1999              	.Letext0:
 2000              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2001              		.section	.debug_info,"",%progbits
 2002              	.Ldebug_info0:
 2003 0000 F7060000 		.4byte	0x6f7
 2004 0004 0400     		.2byte	0x4
 2005 0006 00000000 		.4byte	.Ldebug_abbrev0
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 61


 2006 000a 04       		.byte	0x4
 2007 000b 01       		.uleb128 0x1
 2008 000c B1020000 		.4byte	.LASF77
 2009 0010 0C       		.byte	0xc
 2010 0011 63010000 		.4byte	.LASF78
 2011 0015 F4010000 		.4byte	.LASF79
 2012 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2013 001d 00000000 		.4byte	0
 2014 0021 00000000 		.4byte	.Ldebug_line0
 2015 0025 02       		.uleb128 0x2
 2016 0026 01       		.byte	0x1
 2017 0027 06       		.byte	0x6
 2018 0028 6D000000 		.4byte	.LASF0
 2019 002c 02       		.uleb128 0x2
 2020 002d 01       		.byte	0x1
 2021 002e 08       		.byte	0x8
 2022 002f 58040000 		.4byte	.LASF1
 2023 0033 02       		.uleb128 0x2
 2024 0034 02       		.byte	0x2
 2025 0035 05       		.byte	0x5
 2026 0036 8A040000 		.4byte	.LASF2
 2027 003a 02       		.uleb128 0x2
 2028 003b 02       		.byte	0x2
 2029 003c 07       		.byte	0x7
 2030 003d 4F050000 		.4byte	.LASF3
 2031 0041 02       		.uleb128 0x2
 2032 0042 04       		.byte	0x4
 2033 0043 05       		.byte	0x5
 2034 0044 A4000000 		.4byte	.LASF4
 2035 0048 02       		.uleb128 0x2
 2036 0049 04       		.byte	0x4
 2037 004a 07       		.byte	0x7
 2038 004b A0010000 		.4byte	.LASF5
 2039 004f 02       		.uleb128 0x2
 2040 0050 08       		.byte	0x8
 2041 0051 05       		.byte	0x5
 2042 0052 5F000000 		.4byte	.LASF6
 2043 0056 02       		.uleb128 0x2
 2044 0057 08       		.byte	0x8
 2045 0058 07       		.byte	0x7
 2046 0059 41000000 		.4byte	.LASF7
 2047 005d 03       		.uleb128 0x3
 2048 005e 04       		.byte	0x4
 2049 005f 05       		.byte	0x5
 2050 0060 696E7400 		.ascii	"int\000"
 2051 0064 02       		.uleb128 0x2
 2052 0065 04       		.byte	0x4
 2053 0066 07       		.byte	0x7
 2054 0067 56010000 		.4byte	.LASF8
 2055 006b 04       		.uleb128 0x4
 2056 006c B8000000 		.4byte	.LASF9
 2057 0070 02       		.byte	0x2
 2058 0071 B901     		.2byte	0x1b9
 2059 0073 2C000000 		.4byte	0x2c
 2060 0077 04       		.uleb128 0x4
 2061 0078 0A010000 		.4byte	.LASF10
 2062 007c 02       		.byte	0x2
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 62


 2063 007d BB01     		.2byte	0x1bb
 2064 007f 48000000 		.4byte	0x48
 2065 0083 02       		.uleb128 0x2
 2066 0084 04       		.byte	0x4
 2067 0085 04       		.byte	0x4
 2068 0086 F8030000 		.4byte	.LASF11
 2069 008a 02       		.uleb128 0x2
 2070 008b 08       		.byte	0x8
 2071 008c 04       		.byte	0x4
 2072 008d BE000000 		.4byte	.LASF12
 2073 0091 02       		.uleb128 0x2
 2074 0092 01       		.byte	0x1
 2075 0093 08       		.byte	0x8
 2076 0094 E4040000 		.4byte	.LASF13
 2077 0098 04       		.uleb128 0x4
 2078 0099 52030000 		.4byte	.LASF14
 2079 009d 02       		.byte	0x2
 2080 009e 6502     		.2byte	0x265
 2081 00a0 A4000000 		.4byte	0xa4
 2082 00a4 05       		.uleb128 0x5
 2083 00a5 77000000 		.4byte	0x77
 2084 00a9 02       		.uleb128 0x2
 2085 00aa 08       		.byte	0x8
 2086 00ab 04       		.byte	0x4
 2087 00ac 78030000 		.4byte	.LASF15
 2088 00b0 02       		.uleb128 0x2
 2089 00b1 04       		.byte	0x4
 2090 00b2 07       		.byte	0x7
 2091 00b3 58030000 		.4byte	.LASF16
 2092 00b7 06       		.uleb128 0x6
 2093 00b8 02050000 		.4byte	.LASF17
 2094 00bc 01       		.byte	0x1
 2095 00bd 26       		.byte	0x26
 2096 00be 00000000 		.4byte	.LFB2
 2097 00c2 40000000 		.4byte	.LFE2-.LFB2
 2098 00c6 01       		.uleb128 0x1
 2099 00c7 9C       		.byte	0x9c
 2100 00c8 07       		.uleb128 0x7
 2101 00c9 32040000 		.4byte	.LASF19
 2102 00cd 01       		.byte	0x1
 2103 00ce B1       		.byte	0xb1
 2104 00cf 00000000 		.4byte	.LFB3
 2105 00d3 3C000000 		.4byte	.LFE3-.LFB3
 2106 00d7 01       		.uleb128 0x1
 2107 00d8 9C       		.byte	0x9c
 2108 00d9 EC000000 		.4byte	0xec
 2109 00dd 08       		.uleb128 0x8
 2110 00de 8C050000 		.4byte	.LASF21
 2111 00e2 01       		.byte	0x1
 2112 00e3 B3       		.byte	0xb3
 2113 00e4 6B000000 		.4byte	0x6b
 2114 00e8 02       		.uleb128 0x2
 2115 00e9 91       		.byte	0x91
 2116 00ea 6F       		.sleb128 -17
 2117 00eb 00       		.byte	0
 2118 00ec 06       		.uleb128 0x6
 2119 00ed 00000000 		.4byte	.LASF18
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 63


 2120 00f1 01       		.byte	0x1
 2121 00f2 E6       		.byte	0xe6
 2122 00f3 00000000 		.4byte	.LFB4
 2123 00f7 24000000 		.4byte	.LFE4-.LFB4
 2124 00fb 01       		.uleb128 0x1
 2125 00fc 9C       		.byte	0x9c
 2126 00fd 09       		.uleb128 0x9
 2127 00fe BB010000 		.4byte	.LASF20
 2128 0102 01       		.byte	0x1
 2129 0103 0001     		.2byte	0x100
 2130 0105 00000000 		.4byte	.LFB5
 2131 0109 34000000 		.4byte	.LFE5-.LFB5
 2132 010d 01       		.uleb128 0x1
 2133 010e 9C       		.byte	0x9c
 2134 010f 23010000 		.4byte	0x123
 2135 0113 0A       		.uleb128 0xa
 2136 0114 8C050000 		.4byte	.LASF21
 2137 0118 01       		.byte	0x1
 2138 0119 0201     		.2byte	0x102
 2139 011b 6B000000 		.4byte	0x6b
 2140 011f 02       		.uleb128 0x2
 2141 0120 91       		.byte	0x91
 2142 0121 6F       		.sleb128 -17
 2143 0122 00       		.byte	0
 2144 0123 09       		.uleb128 0x9
 2145 0124 8B020000 		.4byte	.LASF22
 2146 0128 01       		.byte	0x1
 2147 0129 2501     		.2byte	0x125
 2148 012b 00000000 		.4byte	.LFB6
 2149 012f 48000000 		.4byte	.LFE6-.LFB6
 2150 0133 01       		.uleb128 0x1
 2151 0134 9C       		.byte	0x9c
 2152 0135 58010000 		.4byte	0x158
 2153 0139 0B       		.uleb128 0xb
 2154 013a E9040000 		.4byte	.LASF24
 2155 013e 01       		.byte	0x1
 2156 013f 2501     		.2byte	0x125
 2157 0141 77000000 		.4byte	0x77
 2158 0145 02       		.uleb128 0x2
 2159 0146 91       		.byte	0x91
 2160 0147 64       		.sleb128 -28
 2161 0148 0A       		.uleb128 0xa
 2162 0149 8C050000 		.4byte	.LASF21
 2163 014d 01       		.byte	0x1
 2164 014e 2701     		.2byte	0x127
 2165 0150 6B000000 		.4byte	0x6b
 2166 0154 02       		.uleb128 0x2
 2167 0155 91       		.byte	0x91
 2168 0156 6F       		.sleb128 -17
 2169 0157 00       		.byte	0
 2170 0158 09       		.uleb128 0x9
 2171 0159 20040000 		.4byte	.LASF23
 2172 015d 01       		.byte	0x1
 2173 015e 4601     		.2byte	0x146
 2174 0160 00000000 		.4byte	.LFB7
 2175 0164 48000000 		.4byte	.LFE7-.LFB7
 2176 0168 01       		.uleb128 0x1
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 64


 2177 0169 9C       		.byte	0x9c
 2178 016a 8D010000 		.4byte	0x18d
 2179 016e 0B       		.uleb128 0xb
 2180 016f 58000000 		.4byte	.LASF25
 2181 0173 01       		.byte	0x1
 2182 0174 4601     		.2byte	0x146
 2183 0176 77000000 		.4byte	0x77
 2184 017a 02       		.uleb128 0x2
 2185 017b 91       		.byte	0x91
 2186 017c 64       		.sleb128 -28
 2187 017d 0A       		.uleb128 0xa
 2188 017e 8C050000 		.4byte	.LASF21
 2189 0182 01       		.byte	0x1
 2190 0183 4801     		.2byte	0x148
 2191 0185 6B000000 		.4byte	0x6b
 2192 0189 02       		.uleb128 0x2
 2193 018a 91       		.byte	0x91
 2194 018b 6F       		.sleb128 -17
 2195 018c 00       		.byte	0
 2196 018d 09       		.uleb128 0x9
 2197 018e B8030000 		.4byte	.LASF26
 2198 0192 01       		.byte	0x1
 2199 0193 6B01     		.2byte	0x16b
 2200 0195 00000000 		.4byte	.LFB8
 2201 0199 48000000 		.4byte	.LFE8-.LFB8
 2202 019d 01       		.uleb128 0x1
 2203 019e 9C       		.byte	0x9c
 2204 019f C2010000 		.4byte	0x1c2
 2205 01a3 0B       		.uleb128 0xb
 2206 01a4 FE030000 		.4byte	.LASF27
 2207 01a8 01       		.byte	0x1
 2208 01a9 6B01     		.2byte	0x16b
 2209 01ab 77000000 		.4byte	0x77
 2210 01af 02       		.uleb128 0x2
 2211 01b0 91       		.byte	0x91
 2212 01b1 64       		.sleb128 -28
 2213 01b2 0A       		.uleb128 0xa
 2214 01b3 8C050000 		.4byte	.LASF21
 2215 01b7 01       		.byte	0x1
 2216 01b8 6D01     		.2byte	0x16d
 2217 01ba 6B000000 		.4byte	0x6b
 2218 01be 02       		.uleb128 0x2
 2219 01bf 91       		.byte	0x91
 2220 01c0 6F       		.sleb128 -17
 2221 01c1 00       		.byte	0
 2222 01c2 09       		.uleb128 0x9
 2223 01c3 6A020000 		.4byte	.LASF28
 2224 01c7 01       		.byte	0x1
 2225 01c8 8B01     		.2byte	0x18b
 2226 01ca 00000000 		.4byte	.LFB9
 2227 01ce 50000000 		.4byte	.LFE9-.LFB9
 2228 01d2 01       		.uleb128 0x1
 2229 01d3 9C       		.byte	0x9c
 2230 01d4 F7010000 		.4byte	0x1f7
 2231 01d8 0B       		.uleb128 0xb
 2232 01d9 7D020000 		.4byte	.LASF29
 2233 01dd 01       		.byte	0x1
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 65


 2234 01de 8B01     		.2byte	0x18b
 2235 01e0 77000000 		.4byte	0x77
 2236 01e4 02       		.uleb128 0x2
 2237 01e5 91       		.byte	0x91
 2238 01e6 64       		.sleb128 -28
 2239 01e7 0A       		.uleb128 0xa
 2240 01e8 8C050000 		.4byte	.LASF21
 2241 01ec 01       		.byte	0x1
 2242 01ed 8D01     		.2byte	0x18d
 2243 01ef 6B000000 		.4byte	0x6b
 2244 01f3 02       		.uleb128 0x2
 2245 01f4 91       		.byte	0x91
 2246 01f5 6F       		.sleb128 -17
 2247 01f6 00       		.byte	0
 2248 01f7 0C       		.uleb128 0xc
 2249 01f8 62050000 		.4byte	.LASF30
 2250 01fc 01       		.byte	0x1
 2251 01fd C101     		.2byte	0x1c1
 2252 01ff 00000000 		.4byte	.LFB10
 2253 0203 20000000 		.4byte	.LFE10-.LFB10
 2254 0207 01       		.uleb128 0x1
 2255 0208 9C       		.byte	0x9c
 2256 0209 1D020000 		.4byte	0x21d
 2257 020d 0B       		.uleb128 0xb
 2258 020e B2010000 		.4byte	.LASF31
 2259 0212 01       		.byte	0x1
 2260 0213 C101     		.2byte	0x1c1
 2261 0215 77000000 		.4byte	0x77
 2262 0219 02       		.uleb128 0x2
 2263 021a 91       		.byte	0x91
 2264 021b 74       		.sleb128 -12
 2265 021c 00       		.byte	0
 2266 021d 09       		.uleb128 0x9
 2267 021e B9040000 		.4byte	.LASF32
 2268 0222 01       		.byte	0x1
 2269 0223 E501     		.2byte	0x1e5
 2270 0225 00000000 		.4byte	.LFB11
 2271 0229 4C000000 		.4byte	.LFE11-.LFB11
 2272 022d 01       		.uleb128 0x1
 2273 022e 9C       		.byte	0x9c
 2274 022f 52020000 		.4byte	0x252
 2275 0233 0B       		.uleb128 0xb
 2276 0234 B2050000 		.4byte	.LASF33
 2277 0238 01       		.byte	0x1
 2278 0239 E501     		.2byte	0x1e5
 2279 023b 77000000 		.4byte	0x77
 2280 023f 02       		.uleb128 0x2
 2281 0240 91       		.byte	0x91
 2282 0241 64       		.sleb128 -28
 2283 0242 0A       		.uleb128 0xa
 2284 0243 8C050000 		.4byte	.LASF21
 2285 0247 01       		.byte	0x1
 2286 0248 E701     		.2byte	0x1e7
 2287 024a 6B000000 		.4byte	0x6b
 2288 024e 02       		.uleb128 0x2
 2289 024f 91       		.byte	0x91
 2290 0250 6F       		.sleb128 -17
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 66


 2291 0251 00       		.byte	0
 2292 0252 09       		.uleb128 0x9
 2293 0253 DA000000 		.4byte	.LASF34
 2294 0257 01       		.byte	0x1
 2295 0258 0702     		.2byte	0x207
 2296 025a 00000000 		.4byte	.LFB12
 2297 025e 4C000000 		.4byte	.LFE12-.LFB12
 2298 0262 01       		.uleb128 0x1
 2299 0263 9C       		.byte	0x9c
 2300 0264 87020000 		.4byte	0x287
 2301 0268 0B       		.uleb128 0xb
 2302 0269 66040000 		.4byte	.LASF35
 2303 026d 01       		.byte	0x1
 2304 026e 0702     		.2byte	0x207
 2305 0270 77000000 		.4byte	0x77
 2306 0274 02       		.uleb128 0x2
 2307 0275 91       		.byte	0x91
 2308 0276 64       		.sleb128 -28
 2309 0277 0A       		.uleb128 0xa
 2310 0278 8C050000 		.4byte	.LASF21
 2311 027c 01       		.byte	0x1
 2312 027d 0902     		.2byte	0x209
 2313 027f 6B000000 		.4byte	0x6b
 2314 0283 02       		.uleb128 0x2
 2315 0284 91       		.byte	0x91
 2316 0285 6F       		.sleb128 -17
 2317 0286 00       		.byte	0
 2318 0287 09       		.uleb128 0x9
 2319 0288 A2040000 		.4byte	.LASF36
 2320 028c 01       		.byte	0x1
 2321 028d 2802     		.2byte	0x228
 2322 028f 00000000 		.4byte	.LFB13
 2323 0293 50000000 		.4byte	.LFE13-.LFB13
 2324 0297 01       		.uleb128 0x1
 2325 0298 9C       		.byte	0x9c
 2326 0299 BC020000 		.4byte	0x2bc
 2327 029d 0B       		.uleb128 0xb
 2328 029e 3D010000 		.4byte	.LASF37
 2329 02a2 01       		.byte	0x1
 2330 02a3 2802     		.2byte	0x228
 2331 02a5 77000000 		.4byte	0x77
 2332 02a9 02       		.uleb128 0x2
 2333 02aa 91       		.byte	0x91
 2334 02ab 64       		.sleb128 -28
 2335 02ac 0A       		.uleb128 0xa
 2336 02ad 8C050000 		.4byte	.LASF21
 2337 02b1 01       		.byte	0x1
 2338 02b2 2A02     		.2byte	0x22a
 2339 02b4 6B000000 		.4byte	0x6b
 2340 02b8 02       		.uleb128 0x2
 2341 02b9 91       		.byte	0x91
 2342 02ba 6F       		.sleb128 -17
 2343 02bb 00       		.byte	0
 2344 02bc 09       		.uleb128 0x9
 2345 02bd C8010000 		.4byte	.LASF38
 2346 02c1 01       		.byte	0x1
 2347 02c2 4902     		.2byte	0x249
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 67


 2348 02c4 00000000 		.4byte	.LFB14
 2349 02c8 48000000 		.4byte	.LFE14-.LFB14
 2350 02cc 01       		.uleb128 0x1
 2351 02cd 9C       		.byte	0x9c
 2352 02ce F1020000 		.4byte	0x2f1
 2353 02d2 0B       		.uleb128 0xb
 2354 02d3 38010000 		.4byte	.LASF39
 2355 02d7 01       		.byte	0x1
 2356 02d8 4902     		.2byte	0x249
 2357 02da 77000000 		.4byte	0x77
 2358 02de 02       		.uleb128 0x2
 2359 02df 91       		.byte	0x91
 2360 02e0 64       		.sleb128 -28
 2361 02e1 0A       		.uleb128 0xa
 2362 02e2 8C050000 		.4byte	.LASF21
 2363 02e6 01       		.byte	0x1
 2364 02e7 4B02     		.2byte	0x24b
 2365 02e9 6B000000 		.4byte	0x6b
 2366 02ed 02       		.uleb128 0x2
 2367 02ee 91       		.byte	0x91
 2368 02ef 6F       		.sleb128 -17
 2369 02f0 00       		.byte	0
 2370 02f1 0C       		.uleb128 0xc
 2371 02f2 C5000000 		.4byte	.LASF40
 2372 02f6 01       		.byte	0x1
 2373 02f7 6702     		.2byte	0x267
 2374 02f9 00000000 		.4byte	.LFB15
 2375 02fd 20000000 		.4byte	.LFE15-.LFB15
 2376 0301 01       		.uleb128 0x1
 2377 0302 9C       		.byte	0x9c
 2378 0303 17030000 		.4byte	0x317
 2379 0307 0B       		.uleb128 0xb
 2380 0308 11010000 		.4byte	.LASF41
 2381 030c 01       		.byte	0x1
 2382 030d 6702     		.2byte	0x267
 2383 030f 77000000 		.4byte	0x77
 2384 0313 02       		.uleb128 0x2
 2385 0314 91       		.byte	0x91
 2386 0315 74       		.sleb128 -12
 2387 0316 00       		.byte	0
 2388 0317 0D       		.uleb128 0xd
 2389 0318 CD030000 		.4byte	.LASF46
 2390 031c 01       		.byte	0x1
 2391 031d 7B02     		.2byte	0x27b
 2392 031f 77000000 		.4byte	0x77
 2393 0323 00000000 		.4byte	.LFB16
 2394 0327 18000000 		.4byte	.LFE16-.LFB16
 2395 032b 01       		.uleb128 0x1
 2396 032c 9C       		.byte	0x9c
 2397 032d 09       		.uleb128 0x9
 2398 032e DD010000 		.4byte	.LASF42
 2399 0332 01       		.byte	0x1
 2400 0333 9802     		.2byte	0x298
 2401 0335 00000000 		.4byte	.LFB17
 2402 0339 48000000 		.4byte	.LFE17-.LFB17
 2403 033d 01       		.uleb128 0x1
 2404 033e 9C       		.byte	0x9c
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 68


 2405 033f 62030000 		.4byte	0x362
 2406 0343 0B       		.uleb128 0xb
 2407 0344 0F050000 		.4byte	.LASF43
 2408 0348 01       		.byte	0x1
 2409 0349 9802     		.2byte	0x298
 2410 034b 77000000 		.4byte	0x77
 2411 034f 02       		.uleb128 0x2
 2412 0350 91       		.byte	0x91
 2413 0351 64       		.sleb128 -28
 2414 0352 0A       		.uleb128 0xa
 2415 0353 8C050000 		.4byte	.LASF21
 2416 0357 01       		.byte	0x1
 2417 0358 9A02     		.2byte	0x29a
 2418 035a 6B000000 		.4byte	0x6b
 2419 035e 02       		.uleb128 0x2
 2420 035f 91       		.byte	0x91
 2421 0360 6F       		.sleb128 -17
 2422 0361 00       		.byte	0
 2423 0362 0C       		.uleb128 0xc
 2424 0363 90000000 		.4byte	.LASF44
 2425 0367 01       		.byte	0x1
 2426 0368 B502     		.2byte	0x2b5
 2427 036a 00000000 		.4byte	.LFB18
 2428 036e 20000000 		.4byte	.LFE18-.LFB18
 2429 0372 01       		.uleb128 0x1
 2430 0373 9C       		.byte	0x9c
 2431 0374 88030000 		.4byte	0x388
 2432 0378 0B       		.uleb128 0xb
 2433 0379 3A000000 		.4byte	.LASF45
 2434 037d 01       		.byte	0x1
 2435 037e B502     		.2byte	0x2b5
 2436 0380 77000000 		.4byte	0x77
 2437 0384 02       		.uleb128 0x2
 2438 0385 91       		.byte	0x91
 2439 0386 74       		.sleb128 -12
 2440 0387 00       		.byte	0
 2441 0388 0D       		.uleb128 0xd
 2442 0389 77040000 		.4byte	.LASF47
 2443 038d 01       		.byte	0x1
 2444 038e C902     		.2byte	0x2c9
 2445 0390 77000000 		.4byte	0x77
 2446 0394 00000000 		.4byte	.LFB19
 2447 0398 18000000 		.4byte	.LFE19-.LFB19
 2448 039c 01       		.uleb128 0x1
 2449 039d 9C       		.byte	0x9c
 2450 039e 09       		.uleb128 0x9
 2451 039f 23000000 		.4byte	.LASF48
 2452 03a3 01       		.byte	0x1
 2453 03a4 E302     		.2byte	0x2e3
 2454 03a6 00000000 		.4byte	.LFB20
 2455 03aa 48000000 		.4byte	.LFE20-.LFB20
 2456 03ae 01       		.uleb128 0x1
 2457 03af 9C       		.byte	0x9c
 2458 03b0 D3030000 		.4byte	0x3d3
 2459 03b4 0B       		.uleb128 0xb
 2460 03b5 C1050000 		.4byte	.LASF49
 2461 03b9 01       		.byte	0x1
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 69


 2462 03ba E302     		.2byte	0x2e3
 2463 03bc 77000000 		.4byte	0x77
 2464 03c0 02       		.uleb128 0x2
 2465 03c1 91       		.byte	0x91
 2466 03c2 64       		.sleb128 -28
 2467 03c3 0A       		.uleb128 0xa
 2468 03c4 8C050000 		.4byte	.LASF21
 2469 03c8 01       		.byte	0x1
 2470 03c9 E502     		.2byte	0x2e5
 2471 03cb 6B000000 		.4byte	0x6b
 2472 03cf 02       		.uleb128 0x2
 2473 03d0 91       		.byte	0x91
 2474 03d1 6F       		.sleb128 -17
 2475 03d2 00       		.byte	0
 2476 03d3 0C       		.uleb128 0xc
 2477 03d4 79000000 		.4byte	.LASF50
 2478 03d8 01       		.byte	0x1
 2479 03d9 FE02     		.2byte	0x2fe
 2480 03db 00000000 		.4byte	.LFB21
 2481 03df 20000000 		.4byte	.LFE21-.LFB21
 2482 03e3 01       		.uleb128 0x1
 2483 03e4 9C       		.byte	0x9c
 2484 03e5 F9030000 		.4byte	0x3f9
 2485 03e9 0B       		.uleb128 0xb
 2486 03ea CC050000 		.4byte	.LASF51
 2487 03ee 01       		.byte	0x1
 2488 03ef FE02     		.2byte	0x2fe
 2489 03f1 77000000 		.4byte	0x77
 2490 03f5 02       		.uleb128 0x2
 2491 03f6 91       		.byte	0x91
 2492 03f7 74       		.sleb128 -12
 2493 03f8 00       		.byte	0
 2494 03f9 0D       		.uleb128 0xd
 2495 03fa 9B020000 		.4byte	.LASF52
 2496 03fe 01       		.byte	0x1
 2497 03ff 1203     		.2byte	0x312
 2498 0401 77000000 		.4byte	0x77
 2499 0405 00000000 		.4byte	.LFB22
 2500 0409 18000000 		.4byte	.LFE22-.LFB22
 2501 040d 01       		.uleb128 0x1
 2502 040e 9C       		.byte	0x9c
 2503 040f 09       		.uleb128 0x9
 2504 0410 9A030000 		.4byte	.LASF53
 2505 0414 01       		.byte	0x1
 2506 0415 2C03     		.2byte	0x32c
 2507 0417 00000000 		.4byte	.LFB23
 2508 041b 4C000000 		.4byte	.LFE23-.LFB23
 2509 041f 01       		.uleb128 0x1
 2510 0420 9C       		.byte	0x9c
 2511 0421 44040000 		.4byte	0x444
 2512 0425 0B       		.uleb128 0xb
 2513 0426 C1050000 		.4byte	.LASF49
 2514 042a 01       		.byte	0x1
 2515 042b 2C03     		.2byte	0x32c
 2516 042d 77000000 		.4byte	0x77
 2517 0431 02       		.uleb128 0x2
 2518 0432 91       		.byte	0x91
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 70


 2519 0433 64       		.sleb128 -28
 2520 0434 0A       		.uleb128 0xa
 2521 0435 8C050000 		.4byte	.LASF21
 2522 0439 01       		.byte	0x1
 2523 043a 2E03     		.2byte	0x32e
 2524 043c 6B000000 		.4byte	0x6b
 2525 0440 02       		.uleb128 0x2
 2526 0441 91       		.byte	0x91
 2527 0442 6F       		.sleb128 -17
 2528 0443 00       		.byte	0
 2529 0444 0C       		.uleb128 0xc
 2530 0445 23010000 		.4byte	.LASF54
 2531 0449 01       		.byte	0x1
 2532 044a 5103     		.2byte	0x351
 2533 044c 00000000 		.4byte	.LFB24
 2534 0450 20000000 		.4byte	.LFE24-.LFB24
 2535 0454 01       		.uleb128 0x1
 2536 0455 9C       		.byte	0x9c
 2537 0456 6A040000 		.4byte	0x46a
 2538 045a 0B       		.uleb128 0xb
 2539 045b B0030000 		.4byte	.LASF55
 2540 045f 01       		.byte	0x1
 2541 0460 5103     		.2byte	0x351
 2542 0462 77000000 		.4byte	0x77
 2543 0466 02       		.uleb128 0x2
 2544 0467 91       		.byte	0x91
 2545 0468 74       		.sleb128 -12
 2546 0469 00       		.byte	0
 2547 046a 0D       		.uleb128 0xd
 2548 046b EE040000 		.4byte	.LASF56
 2549 046f 01       		.byte	0x1
 2550 0470 8403     		.2byte	0x384
 2551 0472 77000000 		.4byte	0x77
 2552 0476 00000000 		.4byte	.LFB25
 2553 047a 18000000 		.4byte	.LFE25-.LFB25
 2554 047e 01       		.uleb128 0x1
 2555 047f 9C       		.byte	0x9c
 2556 0480 0C       		.uleb128 0xc
 2557 0481 08040000 		.4byte	.LASF57
 2558 0485 01       		.byte	0x1
 2559 0486 BA03     		.2byte	0x3ba
 2560 0488 00000000 		.4byte	.LFB26
 2561 048c 20000000 		.4byte	.LFE26-.LFB26
 2562 0490 01       		.uleb128 0x1
 2563 0491 9C       		.byte	0x9c
 2564 0492 A6040000 		.4byte	0x4a6
 2565 0496 0B       		.uleb128 0xb
 2566 0497 AD000000 		.4byte	.LASF58
 2567 049b 01       		.byte	0x1
 2568 049c BA03     		.2byte	0x3ba
 2569 049e 77000000 		.4byte	0x77
 2570 04a2 02       		.uleb128 0x2
 2571 04a3 91       		.byte	0x91
 2572 04a4 74       		.sleb128 -12
 2573 04a5 00       		.byte	0
 2574 04a6 0D       		.uleb128 0xd
 2575 04a7 41040000 		.4byte	.LASF59
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 71


 2576 04ab 01       		.byte	0x1
 2577 04ac E803     		.2byte	0x3e8
 2578 04ae 77000000 		.4byte	0x77
 2579 04b2 00000000 		.4byte	.LFB27
 2580 04b6 18000000 		.4byte	.LFE27-.LFB27
 2581 04ba 01       		.uleb128 0x1
 2582 04bb 9C       		.byte	0x9c
 2583 04bc 0D       		.uleb128 0xd
 2584 04bd 84010000 		.4byte	.LASF60
 2585 04c1 01       		.byte	0x1
 2586 04c2 1604     		.2byte	0x416
 2587 04c4 77000000 		.4byte	0x77
 2588 04c8 00000000 		.4byte	.LFB28
 2589 04cc 18000000 		.4byte	.LFE28-.LFB28
 2590 04d0 01       		.uleb128 0x1
 2591 04d1 9C       		.byte	0x9c
 2592 04d2 0D       		.uleb128 0xd
 2593 04d3 F3000000 		.4byte	.LASF61
 2594 04d7 01       		.byte	0x1
 2595 04d8 2B04     		.2byte	0x42b
 2596 04da 77000000 		.4byte	0x77
 2597 04de 00000000 		.4byte	.LFB29
 2598 04e2 18000000 		.4byte	.LFE29-.LFB29
 2599 04e6 01       		.uleb128 0x1
 2600 04e7 9C       		.byte	0x9c
 2601 04e8 09       		.uleb128 0x9
 2602 04e9 61030000 		.4byte	.LASF62
 2603 04ed 01       		.byte	0x1
 2604 04ee 4604     		.2byte	0x446
 2605 04f0 00000000 		.4byte	.LFB30
 2606 04f4 44000000 		.4byte	.LFE30-.LFB30
 2607 04f8 01       		.uleb128 0x1
 2608 04f9 9C       		.byte	0x9c
 2609 04fa 1D050000 		.4byte	0x51d
 2610 04fe 0B       		.uleb128 0xb
 2611 04ff 17010000 		.4byte	.LASF63
 2612 0503 01       		.byte	0x1
 2613 0504 4604     		.2byte	0x446
 2614 0506 77000000 		.4byte	0x77
 2615 050a 02       		.uleb128 0x2
 2616 050b 91       		.byte	0x91
 2617 050c 64       		.sleb128 -28
 2618 050d 0A       		.uleb128 0xa
 2619 050e 8C050000 		.4byte	.LASF21
 2620 0512 01       		.byte	0x1
 2621 0513 4804     		.2byte	0x448
 2622 0515 6B000000 		.4byte	0x6b
 2623 0519 02       		.uleb128 0x2
 2624 051a 91       		.byte	0x91
 2625 051b 6F       		.sleb128 -17
 2626 051c 00       		.byte	0
 2627 051d 09       		.uleb128 0x9
 2628 051e 84030000 		.4byte	.LASF64
 2629 0522 01       		.byte	0x1
 2630 0523 6704     		.2byte	0x467
 2631 0525 00000000 		.4byte	.LFB31
 2632 0529 48000000 		.4byte	.LFE31-.LFB31
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 72


 2633 052d 01       		.uleb128 0x1
 2634 052e 9C       		.byte	0x9c
 2635 052f 52050000 		.4byte	0x552
 2636 0533 0B       		.uleb128 0xb
 2637 0534 17010000 		.4byte	.LASF63
 2638 0538 01       		.byte	0x1
 2639 0539 6704     		.2byte	0x467
 2640 053b 77000000 		.4byte	0x77
 2641 053f 02       		.uleb128 0x2
 2642 0540 91       		.byte	0x91
 2643 0541 64       		.sleb128 -28
 2644 0542 0A       		.uleb128 0xa
 2645 0543 8C050000 		.4byte	.LASF21
 2646 0547 01       		.byte	0x1
 2647 0548 6904     		.2byte	0x469
 2648 054a 6B000000 		.4byte	0x6b
 2649 054e 02       		.uleb128 0x2
 2650 054f 91       		.byte	0x91
 2651 0550 6F       		.sleb128 -17
 2652 0551 00       		.byte	0
 2653 0552 09       		.uleb128 0x9
 2654 0553 34020000 		.4byte	.LASF65
 2655 0557 01       		.byte	0x1
 2656 0558 8804     		.2byte	0x488
 2657 055a 00000000 		.4byte	.LFB32
 2658 055e 4C000000 		.4byte	.LFE32-.LFB32
 2659 0562 01       		.uleb128 0x1
 2660 0563 9C       		.byte	0x9c
 2661 0564 87050000 		.4byte	0x587
 2662 0568 0B       		.uleb128 0xb
 2663 0569 17010000 		.4byte	.LASF63
 2664 056d 01       		.byte	0x1
 2665 056e 8804     		.2byte	0x488
 2666 0570 77000000 		.4byte	0x77
 2667 0574 02       		.uleb128 0x2
 2668 0575 91       		.byte	0x91
 2669 0576 64       		.sleb128 -28
 2670 0577 0A       		.uleb128 0xa
 2671 0578 8C050000 		.4byte	.LASF21
 2672 057c 01       		.byte	0x1
 2673 057d 8A04     		.2byte	0x48a
 2674 057f 6B000000 		.4byte	0x6b
 2675 0583 02       		.uleb128 0x2
 2676 0584 91       		.byte	0x91
 2677 0585 6F       		.sleb128 -17
 2678 0586 00       		.byte	0
 2679 0587 09       		.uleb128 0x9
 2680 0588 D0040000 		.4byte	.LASF66
 2681 058c 01       		.byte	0x1
 2682 058d A804     		.2byte	0x4a8
 2683 058f 00000000 		.4byte	.LFB33
 2684 0593 48000000 		.4byte	.LFE33-.LFB33
 2685 0597 01       		.uleb128 0x1
 2686 0598 9C       		.byte	0x9c
 2687 0599 BC050000 		.4byte	0x5bc
 2688 059d 0B       		.uleb128 0xb
 2689 059e 17010000 		.4byte	.LASF63
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 73


 2690 05a2 01       		.byte	0x1
 2691 05a3 A804     		.2byte	0x4a8
 2692 05a5 77000000 		.4byte	0x77
 2693 05a9 02       		.uleb128 0x2
 2694 05aa 91       		.byte	0x91
 2695 05ab 64       		.sleb128 -28
 2696 05ac 0A       		.uleb128 0xa
 2697 05ad 8C050000 		.4byte	.LASF21
 2698 05b1 01       		.byte	0x1
 2699 05b2 AA04     		.2byte	0x4aa
 2700 05b4 6B000000 		.4byte	0x6b
 2701 05b8 02       		.uleb128 0x2
 2702 05b9 91       		.byte	0x91
 2703 05ba 6F       		.sleb128 -17
 2704 05bb 00       		.byte	0
 2705 05bc 09       		.uleb128 0x9
 2706 05bd 0E000000 		.4byte	.LASF67
 2707 05c1 01       		.byte	0x1
 2708 05c2 C904     		.2byte	0x4c9
 2709 05c4 00000000 		.4byte	.LFB34
 2710 05c8 48000000 		.4byte	.LFE34-.LFB34
 2711 05cc 01       		.uleb128 0x1
 2712 05cd 9C       		.byte	0x9c
 2713 05ce F1050000 		.4byte	0x5f1
 2714 05d2 0B       		.uleb128 0xb
 2715 05d3 17010000 		.4byte	.LASF63
 2716 05d7 01       		.byte	0x1
 2717 05d8 C904     		.2byte	0x4c9
 2718 05da 77000000 		.4byte	0x77
 2719 05de 02       		.uleb128 0x2
 2720 05df 91       		.byte	0x91
 2721 05e0 64       		.sleb128 -28
 2722 05e1 0A       		.uleb128 0xa
 2723 05e2 8C050000 		.4byte	.LASF21
 2724 05e6 01       		.byte	0x1
 2725 05e7 CB04     		.2byte	0x4cb
 2726 05e9 6B000000 		.4byte	0x6b
 2727 05ed 02       		.uleb128 0x2
 2728 05ee 91       		.byte	0x91
 2729 05ef 6F       		.sleb128 -17
 2730 05f0 00       		.byte	0
 2731 05f1 09       		.uleb128 0x9
 2732 05f2 75050000 		.4byte	.LASF68
 2733 05f6 01       		.byte	0x1
 2734 05f7 F104     		.2byte	0x4f1
 2735 05f9 00000000 		.4byte	.LFB35
 2736 05fd 3C000000 		.4byte	.LFE35-.LFB35
 2737 0601 01       		.uleb128 0x1
 2738 0602 9C       		.byte	0x9c
 2739 0603 35060000 		.4byte	0x635
 2740 0607 0B       		.uleb128 0xb
 2741 0608 38010000 		.4byte	.LASF39
 2742 060c 01       		.byte	0x1
 2743 060d F104     		.2byte	0x4f1
 2744 060f 77000000 		.4byte	0x77
 2745 0613 02       		.uleb128 0x2
 2746 0614 91       		.byte	0x91
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 74


 2747 0615 64       		.sleb128 -28
 2748 0616 0B       		.uleb128 0xb
 2749 0617 98010000 		.4byte	.LASF69
 2750 061b 01       		.byte	0x1
 2751 061c F104     		.2byte	0x4f1
 2752 061e 77000000 		.4byte	0x77
 2753 0622 02       		.uleb128 0x2
 2754 0623 91       		.byte	0x91
 2755 0624 60       		.sleb128 -32
 2756 0625 0A       		.uleb128 0xa
 2757 0626 8C050000 		.4byte	.LASF21
 2758 062a 01       		.byte	0x1
 2759 062b F304     		.2byte	0x4f3
 2760 062d 6B000000 		.4byte	0x6b
 2761 0631 02       		.uleb128 0x2
 2762 0632 91       		.byte	0x91
 2763 0633 6F       		.sleb128 -17
 2764 0634 00       		.byte	0
 2765 0635 0D       		.uleb128 0xd
 2766 0636 3F030000 		.4byte	.LASF70
 2767 063a 01       		.byte	0x1
 2768 063b 0E05     		.2byte	0x50e
 2769 063d 77000000 		.4byte	0x77
 2770 0641 00000000 		.4byte	.LFB36
 2771 0645 20000000 		.4byte	.LFE36-.LFB36
 2772 0649 01       		.uleb128 0x1
 2773 064a 9C       		.byte	0x9c
 2774 064b 0C       		.uleb128 0xc
 2775 064c 36050000 		.4byte	.LASF71
 2776 0650 01       		.byte	0x1
 2777 0651 2705     		.2byte	0x527
 2778 0653 00000000 		.4byte	.LFB37
 2779 0657 1C000000 		.4byte	.LFE37-.LFB37
 2780 065b 01       		.uleb128 0x1
 2781 065c 9C       		.byte	0x9c
 2782 065d 71060000 		.4byte	0x671
 2783 0661 0B       		.uleb128 0xb
 2784 0662 94040000 		.4byte	.LASF72
 2785 0666 01       		.byte	0x1
 2786 0667 2705     		.2byte	0x527
 2787 0669 77000000 		.4byte	0x77
 2788 066d 02       		.uleb128 0x2
 2789 066e 91       		.byte	0x91
 2790 066f 74       		.sleb128 -12
 2791 0670 00       		.byte	0
 2792 0671 0D       		.uleb128 0xd
 2793 0672 49020000 		.4byte	.LASF73
 2794 0676 01       		.byte	0x1
 2795 0677 3E05     		.2byte	0x53e
 2796 0679 77000000 		.4byte	0x77
 2797 067d 00000000 		.4byte	.LFB38
 2798 0681 14000000 		.4byte	.LFE38-.LFB38
 2799 0685 01       		.uleb128 0x1
 2800 0686 9C       		.byte	0x9c
 2801 0687 0D       		.uleb128 0xd
 2802 0688 1B050000 		.4byte	.LASF74
 2803 068c 01       		.byte	0x1
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 75


 2804 068d 5505     		.2byte	0x555
 2805 068f 77000000 		.4byte	0x77
 2806 0693 00000000 		.4byte	.LFB39
 2807 0697 14000000 		.4byte	.LFE39-.LFB39
 2808 069b 01       		.uleb128 0x1
 2809 069c 9C       		.byte	0x9c
 2810 069d 0C       		.uleb128 0xc
 2811 069e E1030000 		.4byte	.LASF75
 2812 06a2 01       		.byte	0x1
 2813 06a3 6C05     		.2byte	0x56c
 2814 06a5 00000000 		.4byte	.LFB40
 2815 06a9 1C000000 		.4byte	.LFE40-.LFB40
 2816 06ad 01       		.uleb128 0x1
 2817 06ae 9C       		.byte	0x9c
 2818 06af C3060000 		.4byte	0x6c3
 2819 06b3 0B       		.uleb128 0xb
 2820 06b4 94040000 		.4byte	.LASF72
 2821 06b8 01       		.byte	0x1
 2822 06b9 6C05     		.2byte	0x56c
 2823 06bb 77000000 		.4byte	0x77
 2824 06bf 02       		.uleb128 0x2
 2825 06c0 91       		.byte	0x91
 2826 06c1 74       		.sleb128 -12
 2827 06c2 00       		.byte	0
 2828 06c3 0C       		.uleb128 0xc
 2829 06c4 9D050000 		.4byte	.LASF76
 2830 06c8 01       		.byte	0x1
 2831 06c9 8305     		.2byte	0x583
 2832 06cb 00000000 		.4byte	.LFB41
 2833 06cf 1C000000 		.4byte	.LFE41-.LFB41
 2834 06d3 01       		.uleb128 0x1
 2835 06d4 9C       		.byte	0x9c
 2836 06d5 E9060000 		.4byte	0x6e9
 2837 06d9 0B       		.uleb128 0xb
 2838 06da 94040000 		.4byte	.LASF72
 2839 06de 01       		.byte	0x1
 2840 06df 8305     		.2byte	0x583
 2841 06e1 77000000 		.4byte	0x77
 2842 06e5 02       		.uleb128 0x2
 2843 06e6 91       		.byte	0x91
 2844 06e7 74       		.sleb128 -12
 2845 06e8 00       		.byte	0
 2846 06e9 0E       		.uleb128 0xe
 2847 06ea 46010000 		.4byte	.LASF80
 2848 06ee 01       		.byte	0x1
 2849 06ef 15       		.byte	0x15
 2850 06f0 6B000000 		.4byte	0x6b
 2851 06f4 05       		.uleb128 0x5
 2852 06f5 03       		.byte	0x3
 2853 06f6 00000000 		.4byte	Timer_1_initVar
 2854 06fa 00       		.byte	0
 2855              		.section	.debug_abbrev,"",%progbits
 2856              	.Ldebug_abbrev0:
 2857 0000 01       		.uleb128 0x1
 2858 0001 11       		.uleb128 0x11
 2859 0002 01       		.byte	0x1
 2860 0003 25       		.uleb128 0x25
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 76


 2861 0004 0E       		.uleb128 0xe
 2862 0005 13       		.uleb128 0x13
 2863 0006 0B       		.uleb128 0xb
 2864 0007 03       		.uleb128 0x3
 2865 0008 0E       		.uleb128 0xe
 2866 0009 1B       		.uleb128 0x1b
 2867 000a 0E       		.uleb128 0xe
 2868 000b 55       		.uleb128 0x55
 2869 000c 17       		.uleb128 0x17
 2870 000d 11       		.uleb128 0x11
 2871 000e 01       		.uleb128 0x1
 2872 000f 10       		.uleb128 0x10
 2873 0010 17       		.uleb128 0x17
 2874 0011 00       		.byte	0
 2875 0012 00       		.byte	0
 2876 0013 02       		.uleb128 0x2
 2877 0014 24       		.uleb128 0x24
 2878 0015 00       		.byte	0
 2879 0016 0B       		.uleb128 0xb
 2880 0017 0B       		.uleb128 0xb
 2881 0018 3E       		.uleb128 0x3e
 2882 0019 0B       		.uleb128 0xb
 2883 001a 03       		.uleb128 0x3
 2884 001b 0E       		.uleb128 0xe
 2885 001c 00       		.byte	0
 2886 001d 00       		.byte	0
 2887 001e 03       		.uleb128 0x3
 2888 001f 24       		.uleb128 0x24
 2889 0020 00       		.byte	0
 2890 0021 0B       		.uleb128 0xb
 2891 0022 0B       		.uleb128 0xb
 2892 0023 3E       		.uleb128 0x3e
 2893 0024 0B       		.uleb128 0xb
 2894 0025 03       		.uleb128 0x3
 2895 0026 08       		.uleb128 0x8
 2896 0027 00       		.byte	0
 2897 0028 00       		.byte	0
 2898 0029 04       		.uleb128 0x4
 2899 002a 16       		.uleb128 0x16
 2900 002b 00       		.byte	0
 2901 002c 03       		.uleb128 0x3
 2902 002d 0E       		.uleb128 0xe
 2903 002e 3A       		.uleb128 0x3a
 2904 002f 0B       		.uleb128 0xb
 2905 0030 3B       		.uleb128 0x3b
 2906 0031 05       		.uleb128 0x5
 2907 0032 49       		.uleb128 0x49
 2908 0033 13       		.uleb128 0x13
 2909 0034 00       		.byte	0
 2910 0035 00       		.byte	0
 2911 0036 05       		.uleb128 0x5
 2912 0037 35       		.uleb128 0x35
 2913 0038 00       		.byte	0
 2914 0039 49       		.uleb128 0x49
 2915 003a 13       		.uleb128 0x13
 2916 003b 00       		.byte	0
 2917 003c 00       		.byte	0
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 77


 2918 003d 06       		.uleb128 0x6
 2919 003e 2E       		.uleb128 0x2e
 2920 003f 00       		.byte	0
 2921 0040 3F       		.uleb128 0x3f
 2922 0041 19       		.uleb128 0x19
 2923 0042 03       		.uleb128 0x3
 2924 0043 0E       		.uleb128 0xe
 2925 0044 3A       		.uleb128 0x3a
 2926 0045 0B       		.uleb128 0xb
 2927 0046 3B       		.uleb128 0x3b
 2928 0047 0B       		.uleb128 0xb
 2929 0048 27       		.uleb128 0x27
 2930 0049 19       		.uleb128 0x19
 2931 004a 11       		.uleb128 0x11
 2932 004b 01       		.uleb128 0x1
 2933 004c 12       		.uleb128 0x12
 2934 004d 06       		.uleb128 0x6
 2935 004e 40       		.uleb128 0x40
 2936 004f 18       		.uleb128 0x18
 2937 0050 9642     		.uleb128 0x2116
 2938 0052 19       		.uleb128 0x19
 2939 0053 00       		.byte	0
 2940 0054 00       		.byte	0
 2941 0055 07       		.uleb128 0x7
 2942 0056 2E       		.uleb128 0x2e
 2943 0057 01       		.byte	0x1
 2944 0058 3F       		.uleb128 0x3f
 2945 0059 19       		.uleb128 0x19
 2946 005a 03       		.uleb128 0x3
 2947 005b 0E       		.uleb128 0xe
 2948 005c 3A       		.uleb128 0x3a
 2949 005d 0B       		.uleb128 0xb
 2950 005e 3B       		.uleb128 0x3b
 2951 005f 0B       		.uleb128 0xb
 2952 0060 27       		.uleb128 0x27
 2953 0061 19       		.uleb128 0x19
 2954 0062 11       		.uleb128 0x11
 2955 0063 01       		.uleb128 0x1
 2956 0064 12       		.uleb128 0x12
 2957 0065 06       		.uleb128 0x6
 2958 0066 40       		.uleb128 0x40
 2959 0067 18       		.uleb128 0x18
 2960 0068 9642     		.uleb128 0x2116
 2961 006a 19       		.uleb128 0x19
 2962 006b 01       		.uleb128 0x1
 2963 006c 13       		.uleb128 0x13
 2964 006d 00       		.byte	0
 2965 006e 00       		.byte	0
 2966 006f 08       		.uleb128 0x8
 2967 0070 34       		.uleb128 0x34
 2968 0071 00       		.byte	0
 2969 0072 03       		.uleb128 0x3
 2970 0073 0E       		.uleb128 0xe
 2971 0074 3A       		.uleb128 0x3a
 2972 0075 0B       		.uleb128 0xb
 2973 0076 3B       		.uleb128 0x3b
 2974 0077 0B       		.uleb128 0xb
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 78


 2975 0078 49       		.uleb128 0x49
 2976 0079 13       		.uleb128 0x13
 2977 007a 02       		.uleb128 0x2
 2978 007b 18       		.uleb128 0x18
 2979 007c 00       		.byte	0
 2980 007d 00       		.byte	0
 2981 007e 09       		.uleb128 0x9
 2982 007f 2E       		.uleb128 0x2e
 2983 0080 01       		.byte	0x1
 2984 0081 3F       		.uleb128 0x3f
 2985 0082 19       		.uleb128 0x19
 2986 0083 03       		.uleb128 0x3
 2987 0084 0E       		.uleb128 0xe
 2988 0085 3A       		.uleb128 0x3a
 2989 0086 0B       		.uleb128 0xb
 2990 0087 3B       		.uleb128 0x3b
 2991 0088 05       		.uleb128 0x5
 2992 0089 27       		.uleb128 0x27
 2993 008a 19       		.uleb128 0x19
 2994 008b 11       		.uleb128 0x11
 2995 008c 01       		.uleb128 0x1
 2996 008d 12       		.uleb128 0x12
 2997 008e 06       		.uleb128 0x6
 2998 008f 40       		.uleb128 0x40
 2999 0090 18       		.uleb128 0x18
 3000 0091 9642     		.uleb128 0x2116
 3001 0093 19       		.uleb128 0x19
 3002 0094 01       		.uleb128 0x1
 3003 0095 13       		.uleb128 0x13
 3004 0096 00       		.byte	0
 3005 0097 00       		.byte	0
 3006 0098 0A       		.uleb128 0xa
 3007 0099 34       		.uleb128 0x34
 3008 009a 00       		.byte	0
 3009 009b 03       		.uleb128 0x3
 3010 009c 0E       		.uleb128 0xe
 3011 009d 3A       		.uleb128 0x3a
 3012 009e 0B       		.uleb128 0xb
 3013 009f 3B       		.uleb128 0x3b
 3014 00a0 05       		.uleb128 0x5
 3015 00a1 49       		.uleb128 0x49
 3016 00a2 13       		.uleb128 0x13
 3017 00a3 02       		.uleb128 0x2
 3018 00a4 18       		.uleb128 0x18
 3019 00a5 00       		.byte	0
 3020 00a6 00       		.byte	0
 3021 00a7 0B       		.uleb128 0xb
 3022 00a8 05       		.uleb128 0x5
 3023 00a9 00       		.byte	0
 3024 00aa 03       		.uleb128 0x3
 3025 00ab 0E       		.uleb128 0xe
 3026 00ac 3A       		.uleb128 0x3a
 3027 00ad 0B       		.uleb128 0xb
 3028 00ae 3B       		.uleb128 0x3b
 3029 00af 05       		.uleb128 0x5
 3030 00b0 49       		.uleb128 0x49
 3031 00b1 13       		.uleb128 0x13
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 79


 3032 00b2 02       		.uleb128 0x2
 3033 00b3 18       		.uleb128 0x18
 3034 00b4 00       		.byte	0
 3035 00b5 00       		.byte	0
 3036 00b6 0C       		.uleb128 0xc
 3037 00b7 2E       		.uleb128 0x2e
 3038 00b8 01       		.byte	0x1
 3039 00b9 3F       		.uleb128 0x3f
 3040 00ba 19       		.uleb128 0x19
 3041 00bb 03       		.uleb128 0x3
 3042 00bc 0E       		.uleb128 0xe
 3043 00bd 3A       		.uleb128 0x3a
 3044 00be 0B       		.uleb128 0xb
 3045 00bf 3B       		.uleb128 0x3b
 3046 00c0 05       		.uleb128 0x5
 3047 00c1 27       		.uleb128 0x27
 3048 00c2 19       		.uleb128 0x19
 3049 00c3 11       		.uleb128 0x11
 3050 00c4 01       		.uleb128 0x1
 3051 00c5 12       		.uleb128 0x12
 3052 00c6 06       		.uleb128 0x6
 3053 00c7 40       		.uleb128 0x40
 3054 00c8 18       		.uleb128 0x18
 3055 00c9 9742     		.uleb128 0x2117
 3056 00cb 19       		.uleb128 0x19
 3057 00cc 01       		.uleb128 0x1
 3058 00cd 13       		.uleb128 0x13
 3059 00ce 00       		.byte	0
 3060 00cf 00       		.byte	0
 3061 00d0 0D       		.uleb128 0xd
 3062 00d1 2E       		.uleb128 0x2e
 3063 00d2 00       		.byte	0
 3064 00d3 3F       		.uleb128 0x3f
 3065 00d4 19       		.uleb128 0x19
 3066 00d5 03       		.uleb128 0x3
 3067 00d6 0E       		.uleb128 0xe
 3068 00d7 3A       		.uleb128 0x3a
 3069 00d8 0B       		.uleb128 0xb
 3070 00d9 3B       		.uleb128 0x3b
 3071 00da 05       		.uleb128 0x5
 3072 00db 27       		.uleb128 0x27
 3073 00dc 19       		.uleb128 0x19
 3074 00dd 49       		.uleb128 0x49
 3075 00de 13       		.uleb128 0x13
 3076 00df 11       		.uleb128 0x11
 3077 00e0 01       		.uleb128 0x1
 3078 00e1 12       		.uleb128 0x12
 3079 00e2 06       		.uleb128 0x6
 3080 00e3 40       		.uleb128 0x40
 3081 00e4 18       		.uleb128 0x18
 3082 00e5 9742     		.uleb128 0x2117
 3083 00e7 19       		.uleb128 0x19
 3084 00e8 00       		.byte	0
 3085 00e9 00       		.byte	0
 3086 00ea 0E       		.uleb128 0xe
 3087 00eb 34       		.uleb128 0x34
 3088 00ec 00       		.byte	0
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 80


 3089 00ed 03       		.uleb128 0x3
 3090 00ee 0E       		.uleb128 0xe
 3091 00ef 3A       		.uleb128 0x3a
 3092 00f0 0B       		.uleb128 0xb
 3093 00f1 3B       		.uleb128 0x3b
 3094 00f2 0B       		.uleb128 0xb
 3095 00f3 49       		.uleb128 0x49
 3096 00f4 13       		.uleb128 0x13
 3097 00f5 3F       		.uleb128 0x3f
 3098 00f6 19       		.uleb128 0x19
 3099 00f7 02       		.uleb128 0x2
 3100 00f8 18       		.uleb128 0x18
 3101 00f9 00       		.byte	0
 3102 00fa 00       		.byte	0
 3103 00fb 00       		.byte	0
 3104              		.section	.debug_aranges,"",%progbits
 3105 0000 54010000 		.4byte	0x154
 3106 0004 0200     		.2byte	0x2
 3107 0006 00000000 		.4byte	.Ldebug_info0
 3108 000a 04       		.byte	0x4
 3109 000b 00       		.byte	0
 3110 000c 0000     		.2byte	0
 3111 000e 0000     		.2byte	0
 3112 0010 00000000 		.4byte	.LFB2
 3113 0014 40000000 		.4byte	.LFE2-.LFB2
 3114 0018 00000000 		.4byte	.LFB3
 3115 001c 3C000000 		.4byte	.LFE3-.LFB3
 3116 0020 00000000 		.4byte	.LFB4
 3117 0024 24000000 		.4byte	.LFE4-.LFB4
 3118 0028 00000000 		.4byte	.LFB5
 3119 002c 34000000 		.4byte	.LFE5-.LFB5
 3120 0030 00000000 		.4byte	.LFB6
 3121 0034 48000000 		.4byte	.LFE6-.LFB6
 3122 0038 00000000 		.4byte	.LFB7
 3123 003c 48000000 		.4byte	.LFE7-.LFB7
 3124 0040 00000000 		.4byte	.LFB8
 3125 0044 48000000 		.4byte	.LFE8-.LFB8
 3126 0048 00000000 		.4byte	.LFB9
 3127 004c 50000000 		.4byte	.LFE9-.LFB9
 3128 0050 00000000 		.4byte	.LFB10
 3129 0054 20000000 		.4byte	.LFE10-.LFB10
 3130 0058 00000000 		.4byte	.LFB11
 3131 005c 4C000000 		.4byte	.LFE11-.LFB11
 3132 0060 00000000 		.4byte	.LFB12
 3133 0064 4C000000 		.4byte	.LFE12-.LFB12
 3134 0068 00000000 		.4byte	.LFB13
 3135 006c 50000000 		.4byte	.LFE13-.LFB13
 3136 0070 00000000 		.4byte	.LFB14
 3137 0074 48000000 		.4byte	.LFE14-.LFB14
 3138 0078 00000000 		.4byte	.LFB15
 3139 007c 20000000 		.4byte	.LFE15-.LFB15
 3140 0080 00000000 		.4byte	.LFB16
 3141 0084 18000000 		.4byte	.LFE16-.LFB16
 3142 0088 00000000 		.4byte	.LFB17
 3143 008c 48000000 		.4byte	.LFE17-.LFB17
 3144 0090 00000000 		.4byte	.LFB18
 3145 0094 20000000 		.4byte	.LFE18-.LFB18
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 81


 3146 0098 00000000 		.4byte	.LFB19
 3147 009c 18000000 		.4byte	.LFE19-.LFB19
 3148 00a0 00000000 		.4byte	.LFB20
 3149 00a4 48000000 		.4byte	.LFE20-.LFB20
 3150 00a8 00000000 		.4byte	.LFB21
 3151 00ac 20000000 		.4byte	.LFE21-.LFB21
 3152 00b0 00000000 		.4byte	.LFB22
 3153 00b4 18000000 		.4byte	.LFE22-.LFB22
 3154 00b8 00000000 		.4byte	.LFB23
 3155 00bc 4C000000 		.4byte	.LFE23-.LFB23
 3156 00c0 00000000 		.4byte	.LFB24
 3157 00c4 20000000 		.4byte	.LFE24-.LFB24
 3158 00c8 00000000 		.4byte	.LFB25
 3159 00cc 18000000 		.4byte	.LFE25-.LFB25
 3160 00d0 00000000 		.4byte	.LFB26
 3161 00d4 20000000 		.4byte	.LFE26-.LFB26
 3162 00d8 00000000 		.4byte	.LFB27
 3163 00dc 18000000 		.4byte	.LFE27-.LFB27
 3164 00e0 00000000 		.4byte	.LFB28
 3165 00e4 18000000 		.4byte	.LFE28-.LFB28
 3166 00e8 00000000 		.4byte	.LFB29
 3167 00ec 18000000 		.4byte	.LFE29-.LFB29
 3168 00f0 00000000 		.4byte	.LFB30
 3169 00f4 44000000 		.4byte	.LFE30-.LFB30
 3170 00f8 00000000 		.4byte	.LFB31
 3171 00fc 48000000 		.4byte	.LFE31-.LFB31
 3172 0100 00000000 		.4byte	.LFB32
 3173 0104 4C000000 		.4byte	.LFE32-.LFB32
 3174 0108 00000000 		.4byte	.LFB33
 3175 010c 48000000 		.4byte	.LFE33-.LFB33
 3176 0110 00000000 		.4byte	.LFB34
 3177 0114 48000000 		.4byte	.LFE34-.LFB34
 3178 0118 00000000 		.4byte	.LFB35
 3179 011c 3C000000 		.4byte	.LFE35-.LFB35
 3180 0120 00000000 		.4byte	.LFB36
 3181 0124 20000000 		.4byte	.LFE36-.LFB36
 3182 0128 00000000 		.4byte	.LFB37
 3183 012c 1C000000 		.4byte	.LFE37-.LFB37
 3184 0130 00000000 		.4byte	.LFB38
 3185 0134 14000000 		.4byte	.LFE38-.LFB38
 3186 0138 00000000 		.4byte	.LFB39
 3187 013c 14000000 		.4byte	.LFE39-.LFB39
 3188 0140 00000000 		.4byte	.LFB40
 3189 0144 1C000000 		.4byte	.LFE40-.LFB40
 3190 0148 00000000 		.4byte	.LFB41
 3191 014c 1C000000 		.4byte	.LFE41-.LFB41
 3192 0150 00000000 		.4byte	0
 3193 0154 00000000 		.4byte	0
 3194              		.section	.debug_ranges,"",%progbits
 3195              	.Ldebug_ranges0:
 3196 0000 00000000 		.4byte	.LFB2
 3197 0004 40000000 		.4byte	.LFE2
 3198 0008 00000000 		.4byte	.LFB3
 3199 000c 3C000000 		.4byte	.LFE3
 3200 0010 00000000 		.4byte	.LFB4
 3201 0014 24000000 		.4byte	.LFE4
 3202 0018 00000000 		.4byte	.LFB5
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 82


 3203 001c 34000000 		.4byte	.LFE5
 3204 0020 00000000 		.4byte	.LFB6
 3205 0024 48000000 		.4byte	.LFE6
 3206 0028 00000000 		.4byte	.LFB7
 3207 002c 48000000 		.4byte	.LFE7
 3208 0030 00000000 		.4byte	.LFB8
 3209 0034 48000000 		.4byte	.LFE8
 3210 0038 00000000 		.4byte	.LFB9
 3211 003c 50000000 		.4byte	.LFE9
 3212 0040 00000000 		.4byte	.LFB10
 3213 0044 20000000 		.4byte	.LFE10
 3214 0048 00000000 		.4byte	.LFB11
 3215 004c 4C000000 		.4byte	.LFE11
 3216 0050 00000000 		.4byte	.LFB12
 3217 0054 4C000000 		.4byte	.LFE12
 3218 0058 00000000 		.4byte	.LFB13
 3219 005c 50000000 		.4byte	.LFE13
 3220 0060 00000000 		.4byte	.LFB14
 3221 0064 48000000 		.4byte	.LFE14
 3222 0068 00000000 		.4byte	.LFB15
 3223 006c 20000000 		.4byte	.LFE15
 3224 0070 00000000 		.4byte	.LFB16
 3225 0074 18000000 		.4byte	.LFE16
 3226 0078 00000000 		.4byte	.LFB17
 3227 007c 48000000 		.4byte	.LFE17
 3228 0080 00000000 		.4byte	.LFB18
 3229 0084 20000000 		.4byte	.LFE18
 3230 0088 00000000 		.4byte	.LFB19
 3231 008c 18000000 		.4byte	.LFE19
 3232 0090 00000000 		.4byte	.LFB20
 3233 0094 48000000 		.4byte	.LFE20
 3234 0098 00000000 		.4byte	.LFB21
 3235 009c 20000000 		.4byte	.LFE21
 3236 00a0 00000000 		.4byte	.LFB22
 3237 00a4 18000000 		.4byte	.LFE22
 3238 00a8 00000000 		.4byte	.LFB23
 3239 00ac 4C000000 		.4byte	.LFE23
 3240 00b0 00000000 		.4byte	.LFB24
 3241 00b4 20000000 		.4byte	.LFE24
 3242 00b8 00000000 		.4byte	.LFB25
 3243 00bc 18000000 		.4byte	.LFE25
 3244 00c0 00000000 		.4byte	.LFB26
 3245 00c4 20000000 		.4byte	.LFE26
 3246 00c8 00000000 		.4byte	.LFB27
 3247 00cc 18000000 		.4byte	.LFE27
 3248 00d0 00000000 		.4byte	.LFB28
 3249 00d4 18000000 		.4byte	.LFE28
 3250 00d8 00000000 		.4byte	.LFB29
 3251 00dc 18000000 		.4byte	.LFE29
 3252 00e0 00000000 		.4byte	.LFB30
 3253 00e4 44000000 		.4byte	.LFE30
 3254 00e8 00000000 		.4byte	.LFB31
 3255 00ec 48000000 		.4byte	.LFE31
 3256 00f0 00000000 		.4byte	.LFB32
 3257 00f4 4C000000 		.4byte	.LFE32
 3258 00f8 00000000 		.4byte	.LFB33
 3259 00fc 48000000 		.4byte	.LFE33
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 83


 3260 0100 00000000 		.4byte	.LFB34
 3261 0104 48000000 		.4byte	.LFE34
 3262 0108 00000000 		.4byte	.LFB35
 3263 010c 3C000000 		.4byte	.LFE35
 3264 0110 00000000 		.4byte	.LFB36
 3265 0114 20000000 		.4byte	.LFE36
 3266 0118 00000000 		.4byte	.LFB37
 3267 011c 1C000000 		.4byte	.LFE37
 3268 0120 00000000 		.4byte	.LFB38
 3269 0124 14000000 		.4byte	.LFE38
 3270 0128 00000000 		.4byte	.LFB39
 3271 012c 14000000 		.4byte	.LFE39
 3272 0130 00000000 		.4byte	.LFB40
 3273 0134 1C000000 		.4byte	.LFE40
 3274 0138 00000000 		.4byte	.LFB41
 3275 013c 1C000000 		.4byte	.LFE41
 3276 0140 00000000 		.4byte	0
 3277 0144 00000000 		.4byte	0
 3278              		.section	.debug_line,"",%progbits
 3279              	.Ldebug_line0:
 3280 0000 6D030000 		.section	.debug_str,"MS",%progbits,1
 3280      02004400 
 3280      00000201 
 3280      FB0E0D00 
 3280      01010101 
 3281              	.LASF18:
 3282 0000 54696D65 		.ascii	"Timer_1_Start\000"
 3282      725F315F 
 3282      53746172 
 3282      7400
 3283              	.LASF67:
 3284 000e 54696D65 		.ascii	"Timer_1_SetCountMode\000"
 3284      725F315F 
 3284      53657443 
 3284      6F756E74 
 3284      4D6F6465 
 3285              	.LASF48:
 3286 0023 54696D65 		.ascii	"Timer_1_SetCompareSwap\000"
 3286      725F315F 
 3286      53657443 
 3286      6F6D7061 
 3286      72655377 
 3287              	.LASF45:
 3288 003a 70657269 		.ascii	"period\000"
 3288      6F6400
 3289              	.LASF7:
 3290 0041 6C6F6E67 		.ascii	"long long unsigned int\000"
 3290      206C6F6E 
 3290      6720756E 
 3290      7369676E 
 3290      65642069 
 3291              	.LASF25:
 3292 0058 71644D6F 		.ascii	"qdMode\000"
 3292      646500
 3293              	.LASF6:
 3294 005f 6C6F6E67 		.ascii	"long long int\000"
 3294      206C6F6E 
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 84


 3294      6720696E 
 3294      7400
 3295              	.LASF0:
 3296 006d 7369676E 		.ascii	"signed char\000"
 3296      65642063 
 3296      68617200 
 3297              	.LASF50:
 3298 0079 54696D65 		.ascii	"Timer_1_WritePeriodBuf\000"
 3298      725F315F 
 3298      57726974 
 3298      65506572 
 3298      696F6442 
 3299              	.LASF44:
 3300 0090 54696D65 		.ascii	"Timer_1_WritePeriod\000"
 3300      725F315F 
 3300      57726974 
 3300      65506572 
 3300      696F6400 
 3301              	.LASF4:
 3302 00a4 6C6F6E67 		.ascii	"long int\000"
 3302      20696E74 
 3302      00
 3303              	.LASF58:
 3304 00ad 636F6D70 		.ascii	"compareBuf\000"
 3304      61726542 
 3304      756600
 3305              	.LASF9:
 3306 00b8 75696E74 		.ascii	"uint8\000"
 3306      3800
 3307              	.LASF12:
 3308 00be 646F7562 		.ascii	"double\000"
 3308      6C6500
 3309              	.LASF40:
 3310 00c5 54696D65 		.ascii	"Timer_1_WriteCounter\000"
 3310      725F315F 
 3310      57726974 
 3310      65436F75 
 3310      6E746572 
 3311              	.LASF34:
 3312 00da 54696D65 		.ascii	"Timer_1_SetPWMStopOnKill\000"
 3312      725F315F 
 3312      53657450 
 3312      574D5374 
 3312      6F704F6E 
 3313              	.LASF61:
 3314 00f3 54696D65 		.ascii	"Timer_1_ReadCaptureBuf\000"
 3314      725F315F 
 3314      52656164 
 3314      43617074 
 3314      75726542 
 3315              	.LASF10:
 3316 010a 75696E74 		.ascii	"uint32\000"
 3316      333200
 3317              	.LASF41:
 3318 0111 636F756E 		.ascii	"count\000"
 3318      7400
 3319              	.LASF63:
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 85


 3320 0117 74726967 		.ascii	"triggerMode\000"
 3320      6765724D 
 3320      6F646500 
 3321              	.LASF54:
 3322 0123 54696D65 		.ascii	"Timer_1_WriteCompare\000"
 3322      725F315F 
 3322      57726974 
 3322      65436F6D 
 3322      70617265 
 3323              	.LASF39:
 3324 0138 6D61736B 		.ascii	"mask\000"
 3324      00
 3325              	.LASF37:
 3326 013d 64656164 		.ascii	"deadTime\000"
 3326      54696D65 
 3326      00
 3327              	.LASF80:
 3328 0146 54696D65 		.ascii	"Timer_1_initVar\000"
 3328      725F315F 
 3328      696E6974 
 3328      56617200 
 3329              	.LASF8:
 3330 0156 756E7369 		.ascii	"unsigned int\000"
 3330      676E6564 
 3330      20696E74 
 3330      00
 3331              	.LASF78:
 3332 0163 47656E65 		.ascii	"Generated_Source\\PSoC4\\Timer_1.c\000"
 3332      72617465 
 3332      645F536F 
 3332      75726365 
 3332      5C50536F 
 3333              	.LASF60:
 3334 0184 54696D65 		.ascii	"Timer_1_ReadCapture\000"
 3334      725F315F 
 3334      52656164 
 3334      43617074 
 3334      75726500 
 3335              	.LASF69:
 3336 0198 636F6D6D 		.ascii	"command\000"
 3336      616E6400 
 3337              	.LASF5:
 3338 01a0 6C6F6E67 		.ascii	"long unsigned int\000"
 3338      20756E73 
 3338      69676E65 
 3338      6420696E 
 3338      7400
 3339              	.LASF31:
 3340 01b2 6D6F6465 		.ascii	"modeMask\000"
 3340      4D61736B 
 3340      00
 3341              	.LASF20:
 3342 01bb 54696D65 		.ascii	"Timer_1_Stop\000"
 3342      725F315F 
 3342      53746F70 
 3342      00
 3343              	.LASF38:
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 86


 3344 01c8 54696D65 		.ascii	"Timer_1_SetPWMInvert\000"
 3344      725F315F 
 3344      53657450 
 3344      574D496E 
 3344      76657274 
 3345              	.LASF42:
 3346 01dd 54696D65 		.ascii	"Timer_1_SetCounterMode\000"
 3346      725F315F 
 3346      53657443 
 3346      6F756E74 
 3346      65724D6F 
 3347              	.LASF79:
 3348 01f4 433A5C55 		.ascii	"C:\\Users\\ROUSSMA\\Documents\\PSoC Creator\\RGB_OL"
 3348      73657273 
 3348      5C524F55 
 3348      53534D41 
 3348      5C446F63 
 3349 0222 45445C52 		.ascii	"ED\\RGB_OLED.cydsn\000"
 3349      47425F4F 
 3349      4C45442E 
 3349      63796473 
 3349      6E00
 3350              	.LASF65:
 3351 0234 54696D65 		.ascii	"Timer_1_SetStartMode\000"
 3351      725F315F 
 3351      53657453 
 3351      74617274 
 3351      4D6F6465 
 3352              	.LASF73:
 3353 0249 54696D65 		.ascii	"Timer_1_GetInterruptSourceMasked\000"
 3353      725F315F 
 3353      47657449 
 3353      6E746572 
 3353      72757074 
 3354              	.LASF28:
 3355 026a 54696D65 		.ascii	"Timer_1_SetOneShot\000"
 3355      725F315F 
 3355      5365744F 
 3355      6E655368 
 3355      6F7400
 3356              	.LASF29:
 3357 027d 6F6E6553 		.ascii	"oneShotEnable\000"
 3357      686F7445 
 3357      6E61626C 
 3357      6500
 3358              	.LASF22:
 3359 028b 54696D65 		.ascii	"Timer_1_SetMode\000"
 3359      725F315F 
 3359      5365744D 
 3359      6F646500 
 3360              	.LASF52:
 3361 029b 54696D65 		.ascii	"Timer_1_ReadPeriodBuf\000"
 3361      725F315F 
 3361      52656164 
 3361      50657269 
 3361      6F644275 
 3362              	.LASF77:
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 87


 3363 02b1 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3363      43313120 
 3363      352E342E 
 3363      31203230 
 3363      31363036 
 3364 02e4 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 3364      20726576 
 3364      6973696F 
 3364      6E203233 
 3364      37373135 
 3365 0317 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3365      66756E63 
 3365      74696F6E 
 3365      2D736563 
 3365      74696F6E 
 3366              	.LASF70:
 3367 033f 54696D65 		.ascii	"Timer_1_ReadStatus\000"
 3367      725F315F 
 3367      52656164 
 3367      53746174 
 3367      757300
 3368              	.LASF14:
 3369 0352 72656733 		.ascii	"reg32\000"
 3369      3200
 3370              	.LASF16:
 3371 0358 73697A65 		.ascii	"sizetype\000"
 3371      74797065 
 3371      00
 3372              	.LASF62:
 3373 0361 54696D65 		.ascii	"Timer_1_SetCaptureMode\000"
 3373      725F315F 
 3373      53657443 
 3373      61707475 
 3373      72654D6F 
 3374              	.LASF15:
 3375 0378 6C6F6E67 		.ascii	"long double\000"
 3375      20646F75 
 3375      626C6500 
 3376              	.LASF64:
 3377 0384 54696D65 		.ascii	"Timer_1_SetReloadMode\000"
 3377      725F315F 
 3377      53657452 
 3377      656C6F61 
 3377      644D6F64 
 3378              	.LASF53:
 3379 039a 54696D65 		.ascii	"Timer_1_SetPeriodSwap\000"
 3379      725F315F 
 3379      53657450 
 3379      6572696F 
 3379      64537761 
 3380              	.LASF55:
 3381 03b0 636F6D70 		.ascii	"compare\000"
 3381      61726500 
 3382              	.LASF26:
 3383 03b8 54696D65 		.ascii	"Timer_1_SetPrescaler\000"
 3383      725F315F 
 3383      53657450 
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 88


 3383      72657363 
 3383      616C6572 
 3384              	.LASF46:
 3385 03cd 54696D65 		.ascii	"Timer_1_ReadCounter\000"
 3385      725F315F 
 3385      52656164 
 3385      436F756E 
 3385      74657200 
 3386              	.LASF75:
 3387 03e1 54696D65 		.ascii	"Timer_1_ClearInterrupt\000"
 3387      725F315F 
 3387      436C6561 
 3387      72496E74 
 3387      65727275 
 3388              	.LASF11:
 3389 03f8 666C6F61 		.ascii	"float\000"
 3389      7400
 3390              	.LASF27:
 3391 03fe 70726573 		.ascii	"prescaler\000"
 3391      63616C65 
 3391      7200
 3392              	.LASF57:
 3393 0408 54696D65 		.ascii	"Timer_1_WriteCompareBuf\000"
 3393      725F315F 
 3393      57726974 
 3393      65436F6D 
 3393      70617265 
 3394              	.LASF23:
 3395 0420 54696D65 		.ascii	"Timer_1_SetQDMode\000"
 3395      725F315F 
 3395      53657451 
 3395      444D6F64 
 3395      6500
 3396              	.LASF19:
 3397 0432 54696D65 		.ascii	"Timer_1_Enable\000"
 3397      725F315F 
 3397      456E6162 
 3397      6C6500
 3398              	.LASF59:
 3399 0441 54696D65 		.ascii	"Timer_1_ReadCompareBuf\000"
 3399      725F315F 
 3399      52656164 
 3399      436F6D70 
 3399      61726542 
 3400              	.LASF1:
 3401 0458 756E7369 		.ascii	"unsigned char\000"
 3401      676E6564 
 3401      20636861 
 3401      7200
 3402              	.LASF35:
 3403 0466 73746F70 		.ascii	"stopOnKillEnable\000"
 3403      4F6E4B69 
 3403      6C6C456E 
 3403      61626C65 
 3403      00
 3404              	.LASF47:
 3405 0477 54696D65 		.ascii	"Timer_1_ReadPeriod\000"
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 89


 3405      725F315F 
 3405      52656164 
 3405      50657269 
 3405      6F6400
 3406              	.LASF2:
 3407 048a 73686F72 		.ascii	"short int\000"
 3407      7420696E 
 3407      7400
 3408              	.LASF72:
 3409 0494 696E7465 		.ascii	"interruptMask\000"
 3409      72727570 
 3409      744D6173 
 3409      6B00
 3410              	.LASF36:
 3411 04a2 54696D65 		.ascii	"Timer_1_SetPWMDeadTime\000"
 3411      725F315F 
 3411      53657450 
 3411      574D4465 
 3411      61645469 
 3412              	.LASF32:
 3413 04b9 54696D65 		.ascii	"Timer_1_SetPWMSyncKill\000"
 3413      725F315F 
 3413      53657450 
 3413      574D5379 
 3413      6E634B69 
 3414              	.LASF66:
 3415 04d0 54696D65 		.ascii	"Timer_1_SetStopMode\000"
 3415      725F315F 
 3415      53657453 
 3415      746F704D 
 3415      6F646500 
 3416              	.LASF13:
 3417 04e4 63686172 		.ascii	"char\000"
 3417      00
 3418              	.LASF24:
 3419 04e9 6D6F6465 		.ascii	"mode\000"
 3419      00
 3420              	.LASF56:
 3421 04ee 54696D65 		.ascii	"Timer_1_ReadCompare\000"
 3421      725F315F 
 3421      52656164 
 3421      436F6D70 
 3421      61726500 
 3422              	.LASF17:
 3423 0502 54696D65 		.ascii	"Timer_1_Init\000"
 3423      725F315F 
 3423      496E6974 
 3423      00
 3424              	.LASF43:
 3425 050f 636F756E 		.ascii	"counterMode\000"
 3425      7465724D 
 3425      6F646500 
 3426              	.LASF74:
 3427 051b 54696D65 		.ascii	"Timer_1_GetInterruptSource\000"
 3427      725F315F 
 3427      47657449 
 3427      6E746572 
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccPJwjIh.s 			page 90


 3427      72757074 
 3428              	.LASF71:
 3429 0536 54696D65 		.ascii	"Timer_1_SetInterruptMode\000"
 3429      725F315F 
 3429      53657449 
 3429      6E746572 
 3429      72757074 
 3430              	.LASF3:
 3431 054f 73686F72 		.ascii	"short unsigned int\000"
 3431      7420756E 
 3431      7369676E 
 3431      65642069 
 3431      6E7400
 3432              	.LASF30:
 3433 0562 54696D65 		.ascii	"Timer_1_SetPWMMode\000"
 3433      725F315F 
 3433      53657450 
 3433      574D4D6F 
 3433      646500
 3434              	.LASF68:
 3435 0575 54696D65 		.ascii	"Timer_1_TriggerCommand\000"
 3435      725F315F 
 3435      54726967 
 3435      67657243 
 3435      6F6D6D61 
 3436              	.LASF21:
 3437 058c 656E6162 		.ascii	"enableInterrupts\000"
 3437      6C65496E 
 3437      74657272 
 3437      75707473 
 3437      00
 3438              	.LASF76:
 3439 059d 54696D65 		.ascii	"Timer_1_SetInterrupt\000"
 3439      725F315F 
 3439      53657449 
 3439      6E746572 
 3439      72757074 
 3440              	.LASF33:
 3441 05b2 73796E63 		.ascii	"syncKillEnable\000"
 3441      4B696C6C 
 3441      456E6162 
 3441      6C6500
 3442              	.LASF49:
 3443 05c1 73776170 		.ascii	"swapEnable\000"
 3443      456E6162 
 3443      6C6500
 3444              	.LASF51:
 3445 05cc 70657269 		.ascii	"periodBuf\000"
 3445      6F644275 
 3445      6600
 3446              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
