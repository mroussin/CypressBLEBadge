ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyLib.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CySysClkImoStart,"ax",%progbits
  18              		.align	2
  19              		.global	CySysClkImoStart
  20              		.code	16
  21              		.thumb_func
  22              		.type	CySysClkImoStart, %function
  23              	CySysClkImoStart:
  24              	.LFB2:
  25              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.50
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 2


  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:Generated_Source\PSoC4/CyLib.c **** 
  85:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  87:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  88:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  89:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 3


  90:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  91:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  92:Generated_Source\PSoC4/CyLib.c **** 
  93:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  94:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  95:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  98:Generated_Source\PSoC4/CyLib.c **** *
  99:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 100:Generated_Source\PSoC4/CyLib.c **** * this function will also enable WCO lock if selected in the Design Wide
 101:Generated_Source\PSoC4/CyLib.c **** * Resources tab.
 102:Generated_Source\PSoC4/CyLib.c **** *
 103:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L / devices, this function will also enable USB lock if selected
 104:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 105:Generated_Source\PSoC4/CyLib.c **** *
 106:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 107:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 108:Generated_Source\PSoC4/CyLib.c **** {
  26              		.loc 1 108 0
  27              		.cfi_startproc
 109:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  28              		.loc 1 109 0
  29 0000 034A     		ldr	r2, .L2
  30 0002 1368     		ldr	r3, [r2]
  31 0004 8021     		mov	r1, #128
  32 0006 0906     		lsl	r1, r1, #24
  33 0008 0B43     		orr	r3, r1
  34 000a 1360     		str	r3, [r2]
 110:Generated_Source\PSoC4/CyLib.c **** 
 111:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 112:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 113:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 114:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 115:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 119:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 120:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 121:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 122:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** }
  35              		.loc 1 124 0
  36              		@ sp needed
  37 000c 7047     		bx	lr
  38              	.L3:
  39 000e C046     		.align	2
  40              	.L2:
  41 0010 08010B40 		.word	1074462984
  42              		.cfi_endproc
  43              	.LFE2:
  44              		.size	CySysClkImoStart, .-CySysClkImoStart
  45              		.section	.text.CySysClkImoStop,"ax",%progbits
  46              		.align	2
  47              		.global	CySysClkImoStop
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 4


  48              		.code	16
  49              		.thumb_func
  50              		.type	CySysClkImoStop, %function
  51              	CySysClkImoStop:
  52              	.LFB3:
 125:Generated_Source\PSoC4/CyLib.c **** 
 126:Generated_Source\PSoC4/CyLib.c **** 
 127:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 128:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 129:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 130:Generated_Source\PSoC4/CyLib.c **** *
 131:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 132:Generated_Source\PSoC4/CyLib.c **** *
 133:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 134:Generated_Source\PSoC4/CyLib.c **** * this function will also disable WCO lock.
 135:Generated_Source\PSoC4/CyLib.c **** *
 136:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 137:Generated_Source\PSoC4/CyLib.c **** *
 138:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 139:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 140:Generated_Source\PSoC4/CyLib.c **** {
  53              		.loc 1 140 0
  54              		.cfi_startproc
 141:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 142:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 143:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 144:Generated_Source\PSoC4/CyLib.c **** 
 145:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 146:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 147:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 148:Generated_Source\PSoC4/CyLib.c **** 
 149:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
  55              		.loc 1 149 0
  56 0000 024A     		ldr	r2, .L5
  57 0002 1368     		ldr	r3, [r2]
  58 0004 5B00     		lsl	r3, r3, #1
  59 0006 5B08     		lsr	r3, r3, #1
  60 0008 1360     		str	r3, [r2]
 150:Generated_Source\PSoC4/CyLib.c **** }
  61              		.loc 1 150 0
  62              		@ sp needed
  63 000a 7047     		bx	lr
  64              	.L6:
  65              		.align	2
  66              	.L5:
  67 000c 08010B40 		.word	1074462984
  68              		.cfi_endproc
  69              	.LFE3:
  70              		.size	CySysClkImoStop, .-CySysClkImoStop
  71              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
  72              		.align	2
  73              		.global	CySysClkWriteHfclkDirect
  74              		.code	16
  75              		.thumb_func
  76              		.type	CySysClkWriteHfclkDirect, %function
  77              	CySysClkWriteHfclkDirect:
  78              	.LFB4:
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 5


 151:Generated_Source\PSoC4/CyLib.c **** 
 152:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 153:Generated_Source\PSoC4/CyLib.c **** 
 154:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 155:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 156:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 157:Generated_Source\PSoC4/CyLib.c ****     *
 158:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 159:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 160:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 161:Generated_Source\PSoC4/CyLib.c ****     *
 162:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 163:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 164:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 165:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 166:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 167:Generated_Source\PSoC4/CyLib.c ****     *
 168:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 169:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 170:Generated_Source\PSoC4/CyLib.c ****     *
 171:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 172:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 173:Generated_Source\PSoC4/CyLib.c ****     *
 174:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 175:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 176:Generated_Source\PSoC4/CyLib.c ****     {
 177:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 178:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 179:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 180:Generated_Source\PSoC4/CyLib.c **** 
 181:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 182:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 183:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 184:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 185:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 186:Generated_Source\PSoC4/CyLib.c **** 
 187:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 188:Generated_Source\PSoC4/CyLib.c ****         {
 189:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 190:Generated_Source\PSoC4/CyLib.c **** 
 191:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 192:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 193:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 194:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 195:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 196:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 197:Generated_Source\PSoC4/CyLib.c **** 
 198:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 199:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 200:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 201:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 202:Generated_Source\PSoC4/CyLib.c ****                 {
 203:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 204:Generated_Source\PSoC4/CyLib.c ****                     {
 205:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 206:Generated_Source\PSoC4/CyLib.c ****                         break;
 207:Generated_Source\PSoC4/CyLib.c ****                     }
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 6


 208:Generated_Source\PSoC4/CyLib.c ****                 }
 209:Generated_Source\PSoC4/CyLib.c ****             #else
 210:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 211:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 212:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 213:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 214:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 215:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 216:Generated_Source\PSoC4/CyLib.c ****                 #else
 217:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 218:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 219:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 220:Generated_Source\PSoC4/CyLib.c **** 
 221:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 222:Generated_Source\PSoC4/CyLib.c **** 
 223:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 224:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 225:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 226:Generated_Source\PSoC4/CyLib.c ****                 {
 227:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 228:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 229:Generated_Source\PSoC4/CyLib.c ****                 }
 230:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 231:Generated_Source\PSoC4/CyLib.c **** 
 232:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 233:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 236:Generated_Source\PSoC4/CyLib.c **** 
 237:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 238:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 239:Generated_Source\PSoC4/CyLib.c **** 
 240:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 241:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 242:Generated_Source\PSoC4/CyLib.c **** 
 243:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 244:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 245:Generated_Source\PSoC4/CyLib.c ****             {
 246:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 247:Generated_Source\PSoC4/CyLib.c ****             }
 248:Generated_Source\PSoC4/CyLib.c ****             else
 249:Generated_Source\PSoC4/CyLib.c ****             {
 250:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 251:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 252:Generated_Source\PSoC4/CyLib.c **** 
 253:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 254:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 255:Generated_Source\PSoC4/CyLib.c **** 
 256:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 257:Generated_Source\PSoC4/CyLib.c ****             }
 258:Generated_Source\PSoC4/CyLib.c **** 
 259:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 260:Generated_Source\PSoC4/CyLib.c **** 
 261:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 262:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 263:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 264:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 7


 265:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 266:Generated_Source\PSoC4/CyLib.c **** 
 267:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 268:Generated_Source\PSoC4/CyLib.c ****         }
 269:Generated_Source\PSoC4/CyLib.c ****     }
 270:Generated_Source\PSoC4/CyLib.c **** 
 271:Generated_Source\PSoC4/CyLib.c **** 
 272:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 273:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 274:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 275:Generated_Source\PSoC4/CyLib.c ****     *
 276:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 277:Generated_Source\PSoC4/CyLib.c ****     *
 278:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 279:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 280:Generated_Source\PSoC4/CyLib.c ****     *
 281:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 282:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 283:Generated_Source\PSoC4/CyLib.c ****     *
 284:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 285:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 286:Generated_Source\PSoC4/CyLib.c ****     {
 287:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 288:Generated_Source\PSoC4/CyLib.c ****     }
 289:Generated_Source\PSoC4/CyLib.c **** 
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 292:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 293:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 294:Generated_Source\PSoC4/CyLib.c ****     *
 295:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 296:Generated_Source\PSoC4/CyLib.c ****     *
 297:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 298:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 299:Generated_Source\PSoC4/CyLib.c ****     *
 300:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 301:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 302:Generated_Source\PSoC4/CyLib.c ****     *
 303:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 304:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 305:Generated_Source\PSoC4/CyLib.c ****     {
 306:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 307:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 308:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 309:Generated_Source\PSoC4/CyLib.c ****     }
 310:Generated_Source\PSoC4/CyLib.c **** 
 311:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 312:Generated_Source\PSoC4/CyLib.c **** 
 313:Generated_Source\PSoC4/CyLib.c **** 
 314:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 315:Generated_Source\PSoC4/CyLib.c **** 
 316:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 317:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 318:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 319:Generated_Source\PSoC4/CyLib.c ****     *
 320:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 321:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 8


 322:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 325:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 328:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 331:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 332:Generated_Source\PSoC4/CyLib.c ****     {
 333:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 334:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 335:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 336:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 337:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 338:Generated_Source\PSoC4/CyLib.c **** 
 339:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 340:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 341:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 342:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 343:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 344:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 347:Generated_Source\PSoC4/CyLib.c ****     }
 348:Generated_Source\PSoC4/CyLib.c **** 
 349:Generated_Source\PSoC4/CyLib.c **** 
 350:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 351:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 352:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 353:Generated_Source\PSoC4/CyLib.c ****     *
 354:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 355:Generated_Source\PSoC4/CyLib.c ****     *
 356:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 357:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 360:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 361:Generated_Source\PSoC4/CyLib.c ****     *
 362:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 363:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 364:Generated_Source\PSoC4/CyLib.c ****     {
 365:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 366:Generated_Source\PSoC4/CyLib.c **** 
 367:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 368:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 369:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 370:Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 371:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 372:Generated_Source\PSoC4/CyLib.c ****     }
 373:Generated_Source\PSoC4/CyLib.c **** 
 374:Generated_Source\PSoC4/CyLib.c **** 
 375:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 376:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 377:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 378:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 9


 379:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 380:Generated_Source\PSoC4/CyLib.c ****     *
 381:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 382:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 383:Generated_Source\PSoC4/CyLib.c ****     *
 384:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 385:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 386:Generated_Source\PSoC4/CyLib.c ****     *
 387:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 388:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 389:Generated_Source\PSoC4/CyLib.c ****     {
 390:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 391:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 392:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 393:Generated_Source\PSoC4/CyLib.c ****     }
 394:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 395:Generated_Source\PSoC4/CyLib.c **** 
 396:Generated_Source\PSoC4/CyLib.c **** 
 397:Generated_Source\PSoC4/CyLib.c **** 
 398:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 399:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 400:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 401:Generated_Source\PSoC4/CyLib.c **** *
 402:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 403:Generated_Source\PSoC4/CyLib.c **** *
 404:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 405:Generated_Source\PSoC4/CyLib.c **** *
 406:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 407:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 408:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 409:Generated_Source\PSoC4/CyLib.c **** *
 410:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 411:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 412:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 413:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 414:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 415:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 416:Generated_Source\PSoC4/CyLib.c **** *
 417:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 418:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 419:Generated_Source\PSoC4/CyLib.c **** *
 420:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 421:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 422:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 423:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 424:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L.
 425:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L.
 426:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 427:Generated_Source\PSoC4/CyLib.c **** *
 428:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 429:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 430:Generated_Source\PSoC4/CyLib.c **** {
  79              		.loc 1 430 0
  80              		.cfi_startproc
  81              	.LVL0:
  82 0000 10B5     		push	{r4, lr}
  83              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 10


  84              		.cfi_offset 4, -8
  85              		.cfi_offset 14, -4
  86 0002 041C     		mov	r4, r0
 431:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 432:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
  87              		.loc 1 434 0
  88 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  89              	.LVL1:
 435:Generated_Source\PSoC4/CyLib.c **** 
 436:Generated_Source\PSoC4/CyLib.c **** 
 437:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
  90              		.loc 1 437 0
  91 0008 0449     		ldr	r1, .L8
  92 000a 0A68     		ldr	r2, [r1]
  93 000c 0723     		mov	r3, #7
  94 000e 9A43     		bic	r2, r3
  95              	.LVL2:
 438:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 439:Generated_Source\PSoC4/CyLib.c **** 
 440:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 441:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 442:Generated_Source\PSoC4/CyLib.c ****     {
 443:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 444:Generated_Source\PSoC4/CyLib.c ****     }
 445:Generated_Source\PSoC4/CyLib.c ****     else
 446:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 447:Generated_Source\PSoC4/CyLib.c ****     {
 448:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
  96              		.loc 1 448 0
  97 0010 2340     		and	r3, r4
  98 0012 1343     		orr	r3, r2
  99              	.LVL3:
 449:Generated_Source\PSoC4/CyLib.c ****     }
 450:Generated_Source\PSoC4/CyLib.c **** 
 451:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 100              		.loc 1 451 0
 101 0014 0B60     		str	r3, [r1]
 452:Generated_Source\PSoC4/CyLib.c **** 
 453:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 102              		.loc 1 453 0
 103 0016 FFF7FEFF 		bl	CyExitCriticalSection
 104              	.LVL4:
 454:Generated_Source\PSoC4/CyLib.c **** }
 105              		.loc 1 454 0
 106              		@ sp needed
 107              	.LVL5:
 108 001a 10BD     		pop	{r4, pc}
 109              	.L9:
 110              		.align	2
 111              	.L8:
 112 001c 00010B40 		.word	1074462976
 113              		.cfi_endproc
 114              	.LFE4:
 115              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 116              		.section	.text.CySysEnablePumpClock,"ax",%progbits
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 11


 117              		.align	2
 118              		.global	CySysEnablePumpClock
 119              		.code	16
 120              		.thumb_func
 121              		.type	CySysEnablePumpClock, %function
 122              	CySysEnablePumpClock:
 123              	.LFB5:
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c **** 
 457:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 458:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 459:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 460:Generated_Source\PSoC4/CyLib.c **** *
 461:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 462:Generated_Source\PSoC4/CyLib.c **** *
 463:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 464:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 465:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 466:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 467:Generated_Source\PSoC4/CyLib.c **** *
 468:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 469:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 470:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 471:Generated_Source\PSoC4/CyLib.c **** *
 472:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 473:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 474:Generated_Source\PSoC4/CyLib.c **** {
 124              		.loc 1 474 0
 125              		.cfi_startproc
 126              	.LVL6:
 475:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 476:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 127              		.loc 1 476 0
 128 0000 C307     		lsl	r3, r0, #31
 129 0002 07D5     		bpl	.L11
 477:Generated_Source\PSoC4/CyLib.c ****         {
 478:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 130              		.loc 1 478 0
 131 0004 094A     		ldr	r2, .L13
 132 0006 1168     		ldr	r1, [r2]
 133 0008 094B     		ldr	r3, .L13+4
 134 000a 1B68     		ldr	r3, [r3]
 135 000c 5B06     		lsl	r3, r3, #25
 136 000e 0B43     		orr	r3, r1
 137 0010 1360     		str	r3, [r2]
 138 0012 09E0     		b	.L10
 139              	.L11:
 479:Generated_Source\PSoC4/CyLib.c ****         }
 480:Generated_Source\PSoC4/CyLib.c ****         else
 481:Generated_Source\PSoC4/CyLib.c ****         {
 482:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 140              		.loc 1 482 0
 141 0014 054A     		ldr	r2, .L13
 142 0016 1368     		ldr	r3, [r2]
 143 0018 1B01     		lsl	r3, r3, #4
 144 001a 5B0F     		lsr	r3, r3, #29
 145 001c 0449     		ldr	r1, .L13+4
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 12


 146 001e 0B60     		str	r3, [r1]
 483:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 484:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 147              		.loc 1 484 0
 148 0020 1168     		ldr	r1, [r2]
 149 0022 044B     		ldr	r3, .L13+8
 150 0024 0B40     		and	r3, r1
 151 0026 1360     		str	r3, [r2]
 152              	.L10:
 485:Generated_Source\PSoC4/CyLib.c ****         }
 486:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 487:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 488:Generated_Source\PSoC4/CyLib.c ****         {
 489:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 490:Generated_Source\PSoC4/CyLib.c ****         }
 491:Generated_Source\PSoC4/CyLib.c ****         else
 492:Generated_Source\PSoC4/CyLib.c ****         {
 493:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 494:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 495:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 496:Generated_Source\PSoC4/CyLib.c ****         }
 497:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 498:Generated_Source\PSoC4/CyLib.c **** }
 153              		.loc 1 498 0
 154              		@ sp needed
 155 0028 7047     		bx	lr
 156              	.L14:
 157 002a C046     		.align	2
 158              	.L13:
 159 002c 08010B40 		.word	1074462984
 160 0030 00000000 		.word	.LANCHOR0
 161 0034 FFFFFFF1 		.word	-234881025
 162              		.cfi_endproc
 163              	.LFE5:
 164              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 165              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 166              		.align	2
 167              		.global	CySysClkGetSysclkSource
 168              		.code	16
 169              		.thumb_func
 170              		.type	CySysClkGetSysclkSource, %function
 171              	CySysClkGetSysclkSource:
 172              	.LFB6:
 499:Generated_Source\PSoC4/CyLib.c **** 
 500:Generated_Source\PSoC4/CyLib.c **** 
 501:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 502:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 503:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 504:Generated_Source\PSoC4/CyLib.c **** *
 505:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 506:Generated_Source\PSoC4/CyLib.c **** *
 507:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 508:Generated_Source\PSoC4/CyLib.c **** *
 509:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 510:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 511:Generated_Source\PSoC4/CyLib.c **** {
 173              		.loc 1 511 0
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 13


 174              		.cfi_startproc
 175 0000 10B5     		push	{r4, lr}
 176              		.cfi_def_cfa_offset 8
 177              		.cfi_offset 4, -8
 178              		.cfi_offset 14, -4
 512:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 513:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 514:Generated_Source\PSoC4/CyLib.c **** 
 515:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 179              		.loc 1 515 0
 180 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 181              	.LVL7:
 516:Generated_Source\PSoC4/CyLib.c **** 
 517:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 518:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 519:Generated_Source\PSoC4/CyLib.c ****     {
 520:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 521:Generated_Source\PSoC4/CyLib.c ****     }
 522:Generated_Source\PSoC4/CyLib.c ****     else
 523:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 524:Generated_Source\PSoC4/CyLib.c ****     {
 525:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 182              		.loc 1 525 0
 183 0006 044B     		ldr	r3, .L16
 184 0008 1B68     		ldr	r3, [r3]
 185 000a 0724     		mov	r4, #7
 186 000c 1C40     		and	r4, r3
 187              	.LVL8:
 526:Generated_Source\PSoC4/CyLib.c ****     }
 527:Generated_Source\PSoC4/CyLib.c **** 
 528:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 188              		.loc 1 528 0
 189 000e FFF7FEFF 		bl	CyExitCriticalSection
 190              	.LVL9:
 529:Generated_Source\PSoC4/CyLib.c **** 
 530:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 531:Generated_Source\PSoC4/CyLib.c **** }
 191              		.loc 1 531 0
 192 0012 201C     		mov	r0, r4
 193              		@ sp needed
 194              	.LVL10:
 195 0014 10BD     		pop	{r4, pc}
 196              	.L17:
 197 0016 C046     		.align	2
 198              	.L16:
 199 0018 00010B40 		.word	1074462976
 200              		.cfi_endproc
 201              	.LFE6:
 202              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 203              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 204              		.align	2
 205              		.global	CySysClkWriteSysclkDiv
 206              		.code	16
 207              		.thumb_func
 208              		.type	CySysClkWriteSysclkDiv, %function
 209              	CySysClkWriteSysclkDiv:
 210              	.LFB7:
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 14


 532:Generated_Source\PSoC4/CyLib.c **** 
 533:Generated_Source\PSoC4/CyLib.c **** 
 534:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 535:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 536:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 537:Generated_Source\PSoC4/CyLib.c **** *
 538:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 539:Generated_Source\PSoC4/CyLib.c **** *
 540:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 541:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 542:Generated_Source\PSoC4/CyLib.c **** *
 543:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 544:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 545:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 546:Generated_Source\PSoC4/CyLib.c **** *
 547:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 548:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 549:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 550:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 551:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 552:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 553:Generated_Source\PSoC4/CyLib.c **** *
 554:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 555:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 556:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 557:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 558:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 559:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 560:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 561:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 562:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 563:Generated_Source\PSoC4/CyLib.c **** *
 564:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 565:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 566:Generated_Source\PSoC4/CyLib.c **** {
 211              		.loc 1 566 0
 212              		.cfi_startproc
 213              	.LVL11:
 214 0000 10B5     		push	{r4, lr}
 215              		.cfi_def_cfa_offset 8
 216              		.cfi_offset 4, -8
 217              		.cfi_offset 14, -4
 218 0002 041C     		mov	r4, r0
 567:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 568:Generated_Source\PSoC4/CyLib.c **** 
 569:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 219              		.loc 1 569 0
 220 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 221              	.LVL12:
 570:Generated_Source\PSoC4/CyLib.c **** 
 571:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 222              		.loc 1 571 0
 223 0008 0723     		mov	r3, #7
 224 000a 1C40     		and	r4, r3
 225              	.LVL13:
 226 000c E404     		lsl	r4, r4, #19
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 15


 573:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 227              		.loc 1 573 0
 228 000e 0449     		ldr	r1, .L19
 229 0010 0B68     		ldr	r3, [r1]
 230 0012 044A     		ldr	r2, .L19+4
 231 0014 1340     		and	r3, r2
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 232              		.loc 1 572 0
 233 0016 2343     		orr	r3, r4
 571:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 234              		.loc 1 571 0
 235 0018 0B60     		str	r3, [r1]
 574:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 575:Generated_Source\PSoC4/CyLib.c **** 
 576:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 236              		.loc 1 576 0
 237 001a FFF7FEFF 		bl	CyExitCriticalSection
 238              	.LVL14:
 577:Generated_Source\PSoC4/CyLib.c **** }
 239              		.loc 1 577 0
 240              		@ sp needed
 241 001e 10BD     		pop	{r4, pc}
 242              	.L20:
 243              		.align	2
 244              	.L19:
 245 0020 00010B40 		.word	1074462976
 246 0024 FFFFC7FF 		.word	-3670017
 247              		.cfi_endproc
 248              	.LFE7:
 249              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 250              		.section	.text.CySysClkEcoStop,"ax",%progbits
 251              		.align	2
 252              		.global	CySysClkEcoStop
 253              		.code	16
 254              		.thumb_func
 255              		.type	CySysClkEcoStop, %function
 256              	CySysClkEcoStop:
 257              	.LFB10:
 578:Generated_Source\PSoC4/CyLib.c **** 
 579:Generated_Source\PSoC4/CyLib.c **** 
 580:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 581:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 582:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 583:Generated_Source\PSoC4/CyLib.c **** *
 584:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 585:Generated_Source\PSoC4/CyLib.c **** *
 586:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 587:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 588:Generated_Source\PSoC4/CyLib.c **** *
 589:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 590:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 591:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 592:Generated_Source\PSoC4/CyLib.c **** *
 593:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 594:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 595:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 596:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 16


 597:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 598:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 599:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 600:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 601:Generated_Source\PSoC4/CyLib.c **** *
 602:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 603:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 604:Generated_Source\PSoC4/CyLib.c **** *
 605:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 606:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 607:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 608:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 609:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 610:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 611:Generated_Source\PSoC4/CyLib.c **** *
 612:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 613:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 614:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 615:Generated_Source\PSoC4/CyLib.c **** *
 616:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 617:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 618:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC 4400: Valid range [24-48] with step size equals
 619:Generated_Source\PSoC4/CyLib.c **** * 4.
 620:Generated_Source\PSoC4/CyLib.c **** *
 621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 622:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 623:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 624:Generated_Source\PSoC4/CyLib.c ****     {
 625:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 626:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 627:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 628:Generated_Source\PSoC4/CyLib.c ****         #else
 629:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 630:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 631:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 632:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 633:Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 634:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 635:Generated_Source\PSoC4/CyLib.c **** 
 636:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 637:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 638:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 639:Generated_Source\PSoC4/CyLib.c **** 
 640:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 641:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 642:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 645:Generated_Source\PSoC4/CyLib.c **** 
 646:Generated_Source\PSoC4/CyLib.c **** 
 647:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 648:Generated_Source\PSoC4/CyLib.c **** 
 649:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 650:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 651:Generated_Source\PSoC4/CyLib.c ****             {
 652:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 653:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 17


 654:Generated_Source\PSoC4/CyLib.c ****             }
 655:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 656:Generated_Source\PSoC4/CyLib.c **** 
 657:Generated_Source\PSoC4/CyLib.c **** 
 658:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 659:Generated_Source\PSoC4/CyLib.c **** 
 660:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 661:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 662:Generated_Source\PSoC4/CyLib.c ****                 {
 663:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 664:Generated_Source\PSoC4/CyLib.c **** 
 665:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 666:Generated_Source\PSoC4/CyLib.c ****                 {
 667:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 668:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 669:Generated_Source\PSoC4/CyLib.c ****                 }
 670:Generated_Source\PSoC4/CyLib.c **** 
 671:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 672:Generated_Source\PSoC4/CyLib.c ****                 }
 673:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 674:Generated_Source\PSoC4/CyLib.c **** 
 675:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 676:Generated_Source\PSoC4/CyLib.c **** 
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 679:Generated_Source\PSoC4/CyLib.c **** 
 680:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 681:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 682:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 683:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 684:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 685:Generated_Source\PSoC4/CyLib.c **** 
 686:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 687:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 688:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 689:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 690:Generated_Source\PSoC4/CyLib.c **** 
 691:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 692:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 693:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 694:Generated_Source\PSoC4/CyLib.c **** 
 695:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 696:Generated_Source\PSoC4/CyLib.c **** 
 697:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 698:Generated_Source\PSoC4/CyLib.c ****         {
 699:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 700:Generated_Source\PSoC4/CyLib.c ****             {
 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 702:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 703:Generated_Source\PSoC4/CyLib.c ****             }
 704:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 705:Generated_Source\PSoC4/CyLib.c ****             {
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 707:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 708:Generated_Source\PSoC4/CyLib.c ****             }
 709:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 710:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 18


 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 712:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 713:Generated_Source\PSoC4/CyLib.c ****             }
 714:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 715:Generated_Source\PSoC4/CyLib.c ****             {
 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 717:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 718:Generated_Source\PSoC4/CyLib.c ****             }
 719:Generated_Source\PSoC4/CyLib.c ****             else
 720:Generated_Source\PSoC4/CyLib.c ****             {
 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 722:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 723:Generated_Source\PSoC4/CyLib.c ****             }
 724:Generated_Source\PSoC4/CyLib.c **** 
 725:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 726:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c **** 
 729:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 730:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 731:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 732:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 733:Generated_Source\PSoC4/CyLib.c ****             *
 734:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 735:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 736:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 737:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 738:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 739:Generated_Source\PSoC4/CyLib.c ****             {
 740:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 741:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 742:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 743:Generated_Source\PSoC4/CyLib.c **** 
 744:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 745:Generated_Source\PSoC4/CyLib.c **** 
 746:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 747:Generated_Source\PSoC4/CyLib.c ****             }
 748:Generated_Source\PSoC4/CyLib.c ****             else
 749:Generated_Source\PSoC4/CyLib.c ****             {
 750:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 751:Generated_Source\PSoC4/CyLib.c ****             }
 752:Generated_Source\PSoC4/CyLib.c **** 
 753:Generated_Source\PSoC4/CyLib.c **** 
 754:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 755:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 756:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 757:Generated_Source\PSoC4/CyLib.c ****             *
 758:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 759:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 760:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 761:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 762:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 763:Generated_Source\PSoC4/CyLib.c ****             {
 764:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 765:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 766:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 767:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 19


 768:Generated_Source\PSoC4/CyLib.c **** 
 769:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 770:Generated_Source\PSoC4/CyLib.c **** 
 771:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 772:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 773:Generated_Source\PSoC4/CyLib.c ****                 {
 774:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 775:Generated_Source\PSoC4/CyLib.c ****                 }
 776:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 777:Generated_Source\PSoC4/CyLib.c ****                 {
 778:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 779:Generated_Source\PSoC4/CyLib.c ****                 }
 780:Generated_Source\PSoC4/CyLib.c ****                 else
 781:Generated_Source\PSoC4/CyLib.c ****                 {
 782:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 783:Generated_Source\PSoC4/CyLib.c ****                 }
 784:Generated_Source\PSoC4/CyLib.c ****             #else
 785:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 786:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c **** 
 789:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 791:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 792:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 793:Generated_Source\PSoC4/CyLib.c **** 
 794:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 795:Generated_Source\PSoC4/CyLib.c ****             {
 796:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 797:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 798:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 799:Generated_Source\PSoC4/CyLib.c ****             }
 800:Generated_Source\PSoC4/CyLib.c ****         }
 801:Generated_Source\PSoC4/CyLib.c ****         else
 802:Generated_Source\PSoC4/CyLib.c ****         {
 803:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 804:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 805:Generated_Source\PSoC4/CyLib.c ****         }
 806:Generated_Source\PSoC4/CyLib.c **** 
 807:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 808:Generated_Source\PSoC4/CyLib.c **** 
 809:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 810:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 811:Generated_Source\PSoC4/CyLib.c ****             {
 812:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 813:Generated_Source\PSoC4/CyLib.c ****             }
 814:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 815:Generated_Source\PSoC4/CyLib.c **** 
 816:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 817:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 818:Generated_Source\PSoC4/CyLib.c ****             {
 819:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 820:Generated_Source\PSoC4/CyLib.c ****             }
 821:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 822:Generated_Source\PSoC4/CyLib.c **** 
 823:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 824:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 20


 825:Generated_Source\PSoC4/CyLib.c **** 
 826:Generated_Source\PSoC4/CyLib.c **** #else
 827:Generated_Source\PSoC4/CyLib.c **** 
 828:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 829:Generated_Source\PSoC4/CyLib.c ****     {
 830:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 831:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 832:Generated_Source\PSoC4/CyLib.c **** 
 833:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 834:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 835:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 836:Generated_Source\PSoC4/CyLib.c ****         
 837:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 838:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 839:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 840:Generated_Source\PSoC4/CyLib.c **** 
 841:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 842:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 843:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 844:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 845:Generated_Source\PSoC4/CyLib.c ****         #else
 846:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 847:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 848:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 849:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 850:Generated_Source\PSoC4/CyLib.c ****         {
 851:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 852:Generated_Source\PSoC4/CyLib.c **** 
 853:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 854:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 855:Generated_Source\PSoC4/CyLib.c ****                 {
 856:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 857:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 858:Generated_Source\PSoC4/CyLib.c ****                 }
 859:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 860:Generated_Source\PSoC4/CyLib.c **** 
 861:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 862:Generated_Source\PSoC4/CyLib.c **** 
 863:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 864:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 865:Generated_Source\PSoC4/CyLib.c ****                     {
 866:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 869:Generated_Source\PSoC4/CyLib.c ****                     {
 870:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 871:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 872:Generated_Source\PSoC4/CyLib.c ****                     }
 873:Generated_Source\PSoC4/CyLib.c **** 
 874:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 875:Generated_Source\PSoC4/CyLib.c ****                     }
 876:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 877:Generated_Source\PSoC4/CyLib.c **** 
 878:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 879:Generated_Source\PSoC4/CyLib.c **** 
 880:Generated_Source\PSoC4/CyLib.c **** 
 881:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 21


 882:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 883:Generated_Source\PSoC4/CyLib.c **** 
 884:Generated_Source\PSoC4/CyLib.c **** 
 885:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 886:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 887:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 888:Generated_Source\PSoC4/CyLib.c ****                 {
 889:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 890:Generated_Source\PSoC4/CyLib.c ****                 }
 891:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 892:Generated_Source\PSoC4/CyLib.c ****                 {
 893:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 894:Generated_Source\PSoC4/CyLib.c ****                 }
 895:Generated_Source\PSoC4/CyLib.c ****                 else
 896:Generated_Source\PSoC4/CyLib.c ****                 {
 897:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 898:Generated_Source\PSoC4/CyLib.c ****                 }
 899:Generated_Source\PSoC4/CyLib.c ****             #else
 900:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 901:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 902:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 903:Generated_Source\PSoC4/CyLib.c **** 
 904:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 905:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 906:Generated_Source\PSoC4/CyLib.c **** 
 907:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 908:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 909:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 910:Generated_Source\PSoC4/CyLib.c **** 
 911:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 912:Generated_Source\PSoC4/CyLib.c **** 
 913:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 914:Generated_Source\PSoC4/CyLib.c ****             {
 915:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 916:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 917:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 918:Generated_Source\PSoC4/CyLib.c **** 
 919:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 922:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 923:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 924:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 925:Generated_Source\PSoC4/CyLib.c ****             }
 926:Generated_Source\PSoC4/CyLib.c **** 
 927:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 928:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
 929:Generated_Source\PSoC4/CyLib.c ****                 {
 930:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
 931:Generated_Source\PSoC4/CyLib.c ****                 }
 932:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 933:Generated_Source\PSoC4/CyLib.c ****         
 934:Generated_Source\PSoC4/CyLib.c ****         
 935:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 936:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
 937:Generated_Source\PSoC4/CyLib.c ****                 {
 938:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 22


 939:Generated_Source\PSoC4/CyLib.c ****                 }
 940:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 941:Generated_Source\PSoC4/CyLib.c **** 
 942:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 943:Generated_Source\PSoC4/CyLib.c ****         }
 944:Generated_Source\PSoC4/CyLib.c ****         else
 945:Generated_Source\PSoC4/CyLib.c ****         {
 946:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 947:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 948:Generated_Source\PSoC4/CyLib.c ****         }
 949:Generated_Source\PSoC4/CyLib.c ****     }
 950:Generated_Source\PSoC4/CyLib.c **** 
 951:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 952:Generated_Source\PSoC4/CyLib.c **** 
 953:Generated_Source\PSoC4/CyLib.c **** 
 954:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 955:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 956:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 957:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 958:Generated_Source\PSoC4/CyLib.c ****     *
 959:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
 960:Generated_Source\PSoC4/CyLib.c ****     *
 961:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
 962:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 963:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
 964:Generated_Source\PSoC4/CyLib.c ****     *
 965:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 966:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 967:Generated_Source\PSoC4/CyLib.c ****     *
 968:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
 969:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 970:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
 971:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
 972:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 973:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
 974:Generated_Source\PSoC4/CyLib.c ****     *
 975:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 976:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 977:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 978:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 979:Generated_Source\PSoC4/CyLib.c ****     *
 980:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 981:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 982:Generated_Source\PSoC4/CyLib.c ****     {
 983:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 984:Generated_Source\PSoC4/CyLib.c **** 
 985:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 986:Generated_Source\PSoC4/CyLib.c **** 
 987:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 988:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 989:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 990:Generated_Source\PSoC4/CyLib.c **** 
 991:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 992:Generated_Source\PSoC4/CyLib.c ****     }
 993:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 994:Generated_Source\PSoC4/CyLib.c **** 
 995:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 23


 996:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 997:Generated_Source\PSoC4/CyLib.c **** 
 998:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 999:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1000:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1001:Generated_Source\PSoC4/CyLib.c ****     *
1002:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1003:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1004:Generated_Source\PSoC4/CyLib.c ****     *
1005:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1006:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1007:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1008:Generated_Source\PSoC4/CyLib.c ****     * called.
1009:Generated_Source\PSoC4/CyLib.c ****     *
1010:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1011:Generated_Source\PSoC4/CyLib.c ****     *
1012:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1013:Generated_Source\PSoC4/CyLib.c ****     *
1014:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1015:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1016:Generated_Source\PSoC4/CyLib.c ****     *
1017:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1018:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1019:Generated_Source\PSoC4/CyLib.c ****     *
1020:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1021:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1022:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1023:Generated_Source\PSoC4/CyLib.c ****     *
1024:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1025:Generated_Source\PSoC4/CyLib.c ****     *
1026:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1028:Generated_Source\PSoC4/CyLib.c ****     {
1029:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1030:Generated_Source\PSoC4/CyLib.c **** 
1031:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1032:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1033:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1036:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1037:Generated_Source\PSoC4/CyLib.c **** 
1038:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1039:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1040:Generated_Source\PSoC4/CyLib.c ****         
1041:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1042:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1043:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1044:Generated_Source\PSoC4/CyLib.c ****             
1045:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1046:Generated_Source\PSoC4/CyLib.c ****             {
1047:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1048:Generated_Source\PSoC4/CyLib.c ****             }
1049:Generated_Source\PSoC4/CyLib.c ****             else
1050:Generated_Source\PSoC4/CyLib.c ****             {
1051:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1052:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 24


1053:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1054:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1055:Generated_Source\PSoC4/CyLib.c ****             
1056:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1057:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1058:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1059:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1060:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1061:Generated_Source\PSoC4/CyLib.c ****                 
1062:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1063:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1064:Generated_Source\PSoC4/CyLib.c ****                 {
1065:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1066:Generated_Source\PSoC4/CyLib.c ****                 }
1067:Generated_Source\PSoC4/CyLib.c ****                 
1068:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1069:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1070:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1071:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1072:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1073:Generated_Source\PSoC4/CyLib.c **** 
1074:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1075:Generated_Source\PSoC4/CyLib.c ****                 {
1076:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1077:Generated_Source\PSoC4/CyLib.c ****                 }
1078:Generated_Source\PSoC4/CyLib.c **** 
1079:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1080:Generated_Source\PSoC4/CyLib.c ****                 {
1081:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1082:Generated_Source\PSoC4/CyLib.c ****                 }
1083:Generated_Source\PSoC4/CyLib.c ****                 
1084:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1085:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1086:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1087:Generated_Source\PSoC4/CyLib.c ****                 
1088:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1089:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1090:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1091:Generated_Source\PSoC4/CyLib.c ****                 #else
1092:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1093:Generated_Source\PSoC4/CyLib.c ****                 #endif
1094:Generated_Source\PSoC4/CyLib.c ****                 
1095:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1096:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1097:Generated_Source\PSoC4/CyLib.c ****                 {
1098:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1099:Generated_Source\PSoC4/CyLib.c ****                 }
1100:Generated_Source\PSoC4/CyLib.c ****                 
1101:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1102:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1103:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1104:Generated_Source\PSoC4/CyLib.c ****                                             
1105:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1106:Generated_Source\PSoC4/CyLib.c ****                 {
1107:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1108:Generated_Source\PSoC4/CyLib.c ****                 }
1109:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 25


1110:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1111:Generated_Source\PSoC4/CyLib.c ****                 
1112:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1113:Generated_Source\PSoC4/CyLib.c ****                 
1114:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1115:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1116:Generated_Source\PSoC4/CyLib.c ****                 
1117:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1118:Generated_Source\PSoC4/CyLib.c ****                 {
1119:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1120:Generated_Source\PSoC4/CyLib.c ****                 }
1121:Generated_Source\PSoC4/CyLib.c ****                 
1122:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1123:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1124:Generated_Source\PSoC4/CyLib.c ****                 
1125:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1126:Generated_Source\PSoC4/CyLib.c ****                 {
1127:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1128:Generated_Source\PSoC4/CyLib.c ****                 }
1129:Generated_Source\PSoC4/CyLib.c ****                 
1130:Generated_Source\PSoC4/CyLib.c ****             }
1131:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 */
1132:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1133:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1134:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1135:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1136:Generated_Source\PSoC4/CyLib.c **** 
1137:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1138:Generated_Source\PSoC4/CyLib.c ****         {
1139:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1140:Generated_Source\PSoC4/CyLib.c **** 
1141:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1142:Generated_Source\PSoC4/CyLib.c ****             {
1143:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1144:Generated_Source\PSoC4/CyLib.c **** 
1145:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1146:Generated_Source\PSoC4/CyLib.c ****                 {
1147:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1148:Generated_Source\PSoC4/CyLib.c ****                     break;
1149:Generated_Source\PSoC4/CyLib.c ****                 }
1150:Generated_Source\PSoC4/CyLib.c ****             }
1151:Generated_Source\PSoC4/CyLib.c **** 
1152:Generated_Source\PSoC4/CyLib.c ****         }
1153:Generated_Source\PSoC4/CyLib.c **** 
1154:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1155:Generated_Source\PSoC4/CyLib.c ****     }
1156:Generated_Source\PSoC4/CyLib.c **** 
1157:Generated_Source\PSoC4/CyLib.c **** 
1158:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1159:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1160:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1161:Generated_Source\PSoC4/CyLib.c ****     *
1162:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1163:Generated_Source\PSoC4/CyLib.c ****     *
1164:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1165:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1166:Generated_Source\PSoC4/CyLib.c ****     * functioning.
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 26


1167:Generated_Source\PSoC4/CyLib.c ****     *
1168:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1169:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1170:Generated_Source\PSoC4/CyLib.c ****     {
 258              		.loc 1 1170 0
 259              		.cfi_startproc
1171:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1172:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1173:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 260              		.loc 1 1173 0
 261 0000 054A     		ldr	r2, .L22
 262 0002 1368     		ldr	r3, [r2]
 263 0004 0121     		mov	r1, #1
 264 0006 8B43     		bic	r3, r1
 265 0008 1360     		str	r3, [r2]
1174:Generated_Source\PSoC4/CyLib.c **** 
1175:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1176:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 266              		.loc 1 1176 0
 267 000a 044A     		ldr	r2, .L22+4
 268 000c 1168     		ldr	r1, [r2]
 269 000e 044B     		ldr	r3, .L22+8
 270 0010 0B40     		and	r3, r1
 271 0012 1360     		str	r3, [r2]
1177:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1178:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1179:Generated_Source\PSoC4/CyLib.c ****         #else
1180:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1181:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1182:Generated_Source\PSoC4/CyLib.c ****     }
 272              		.loc 1 1182 0
 273              		@ sp needed
 274 0014 7047     		bx	lr
 275              	.L23:
 276 0016 C046     		.align	2
 277              	.L22:
 278 0018 60F02E40 		.word	1076818016
 279 001c 10002E40 		.word	1076756496
 280 0020 FF7FFFFF 		.word	-32769
 281              		.cfi_endproc
 282              	.LFE10:
 283              		.size	CySysClkEcoStop, .-CySysClkEcoStop
 284              		.section	.text.CySysClkEcoReadStatus,"ax",%progbits
 285              		.align	2
 286              		.global	CySysClkEcoReadStatus
 287              		.code	16
 288              		.thumb_func
 289              		.type	CySysClkEcoReadStatus, %function
 290              	CySysClkEcoReadStatus:
 291              	.LFB11:
1183:Generated_Source\PSoC4/CyLib.c **** 
1184:Generated_Source\PSoC4/CyLib.c **** 
1185:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1186:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1187:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1188:Generated_Source\PSoC4/CyLib.c ****     *
1189:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 27


1190:Generated_Source\PSoC4/CyLib.c ****     *
1191:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1192:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1193:Generated_Source\PSoC4/CyLib.c ****     *
1194:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1195:Generated_Source\PSoC4/CyLib.c ****     * ECO_STATUS register.
1196:Generated_Source\PSoC4/CyLib.c ****     *
1197:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1198:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1199:Generated_Source\PSoC4/CyLib.c ****     *
1200:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L: Non-zero indicates that ECO is running.
1201:Generated_Source\PSoC4/CyLib.c ****     *
1202:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1203:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1204:Generated_Source\PSoC4/CyLib.c ****     {
 292              		.loc 1 1204 0
 293              		.cfi_startproc
1205:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1206:Generated_Source\PSoC4/CyLib.c **** 
1207:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1208:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
 294              		.loc 1 1208 0
 295 0000 024B     		ldr	r3, .L25
 296 0002 1B68     		ldr	r3, [r3]
 297 0004 0120     		mov	r0, #1
 298 0006 1840     		and	r0, r3
 299              	.LVL15:
1209:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1210:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1211:Generated_Source\PSoC4/CyLib.c **** 
1212:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1213:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1214:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1215:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1216:Generated_Source\PSoC4/CyLib.c ****         #else
1217:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1218:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1219:Generated_Source\PSoC4/CyLib.c **** 
1220:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1221:Generated_Source\PSoC4/CyLib.c ****     }
 300              		.loc 1 1221 0
 301              		@ sp needed
 302 0008 7047     		bx	lr
 303              	.L26:
 304 000a C046     		.align	2
 305              	.L25:
 306 000c 0C002E40 		.word	1076756492
 307              		.cfi_endproc
 308              	.LFE11:
 309              		.size	CySysClkEcoReadStatus, .-CySysClkEcoReadStatus
 310              		.section	.text.CySysLvdDisable,"ax",%progbits
 311              		.align	2
 312              		.global	CySysLvdDisable
 313              		.code	16
 314              		.thumb_func
 315              		.type	CySysLvdDisable, %function
 316              	CySysLvdDisable:
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 28


 317              	.LFB14:
1222:Generated_Source\PSoC4/CyLib.c **** 
1223:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1224:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1225:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1226:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1227:Generated_Source\PSoC4/CyLib.c ****         *
1228:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1229:Generated_Source\PSoC4/CyLib.c ****         *
1230:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1231:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1232:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1233:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1234:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1235:Generated_Source\PSoC4/CyLib.c ****         *
1236:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1237:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1238:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1239:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1240:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1241:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1242:Generated_Source\PSoC4/CyLib.c ****         *
1243:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1244:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1245:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1246:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1247:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1248:Generated_Source\PSoC4/CyLib.c ****         *
1249:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1250:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1251:Generated_Source\PSoC4/CyLib.c ****         {
1252:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1253:Generated_Source\PSoC4/CyLib.c **** 
1254:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1255:Generated_Source\PSoC4/CyLib.c ****             {
1256:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1257:Generated_Source\PSoC4/CyLib.c **** 
1258:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1259:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1260:Generated_Source\PSoC4/CyLib.c **** 
1261:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1262:Generated_Source\PSoC4/CyLib.c ****             }
1263:Generated_Source\PSoC4/CyLib.c ****             else
1264:Generated_Source\PSoC4/CyLib.c ****             {
1265:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1266:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1267:Generated_Source\PSoC4/CyLib.c ****             }
1268:Generated_Source\PSoC4/CyLib.c ****         }
1269:Generated_Source\PSoC4/CyLib.c **** 
1270:Generated_Source\PSoC4/CyLib.c ****     #else
1271:Generated_Source\PSoC4/CyLib.c **** 
1272:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1273:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1274:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1275:Generated_Source\PSoC4/CyLib.c ****         *
1276:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1277:Generated_Source\PSoC4/CyLib.c ****         * 4200L devices only.
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 29


1278:Generated_Source\PSoC4/CyLib.c ****         *
1279:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1280:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1281:Generated_Source\PSoC4/CyLib.c ****         *
1282:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1283:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1284:Generated_Source\PSoC4/CyLib.c ****         *
1285:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1286:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1287:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1288:Generated_Source\PSoC4/CyLib.c ****         *
1289:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1290:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1291:Generated_Source\PSoC4/CyLib.c ****         *
1292:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1293:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1294:Generated_Source\PSoC4/CyLib.c ****         *
1295:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1296:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1297:Generated_Source\PSoC4/CyLib.c ****         *
1298:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1299:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1300:Generated_Source\PSoC4/CyLib.c ****         *
1301:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1302:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1303:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1304:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1305:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1306:Generated_Source\PSoC4/CyLib.c ****         *
1307:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1308:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1309:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1310:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1311:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1312:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1313:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1314:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1315:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1316:Generated_Source\PSoC4/CyLib.c ****         *
1317:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1318:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1319:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1320:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1321:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1322:Generated_Source\PSoC4/CyLib.c ****         *
1323:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1324:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1325:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1326:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1327:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1328:Generated_Source\PSoC4/CyLib.c ****         *
1329:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1330:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1331:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1332:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1333:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1334:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 30


1335:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1336:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1337:Generated_Source\PSoC4/CyLib.c ****         *
1338:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1339:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1340:Generated_Source\PSoC4/CyLib.c ****         {
1341:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1342:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1343:Generated_Source\PSoC4/CyLib.c **** 
1344:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1345:Generated_Source\PSoC4/CyLib.c **** 
1346:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1347:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1348:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1349:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1350:Generated_Source\PSoC4/CyLib.c **** 
1351:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1352:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1353:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1354:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1355:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1356:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1357:Generated_Source\PSoC4/CyLib.c **** 
1358:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1359:Generated_Source\PSoC4/CyLib.c **** 
1360:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1361:Generated_Source\PSoC4/CyLib.c ****         }
1362:Generated_Source\PSoC4/CyLib.c **** 
1363:Generated_Source\PSoC4/CyLib.c **** 
1364:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1365:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1366:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1367:Generated_Source\PSoC4/CyLib.c ****         *
1368:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1369:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1370:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1371:Generated_Source\PSoC4/CyLib.c ****         *
1372:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L devices only.
1373:Generated_Source\PSoC4/CyLib.c ****         *
1374:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1375:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1376:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1377:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1378:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1379:Generated_Source\PSoC4/CyLib.c ****         *
1380:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1381:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1382:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1383:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1384:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1385:Generated_Source\PSoC4/CyLib.c ****         *
1386:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1387:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1388:Generated_Source\PSoC4/CyLib.c ****         *
1389:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1390:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1391:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 31


1392:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1393:Generated_Source\PSoC4/CyLib.c **** 
1394:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1395:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1396:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1397:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1398:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1399:Generated_Source\PSoC4/CyLib.c **** 
1400:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1401:Generated_Source\PSoC4/CyLib.c **** 
1402:Generated_Source\PSoC4/CyLib.c **** 
1403:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1404:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1405:Generated_Source\PSoC4/CyLib.c ****             {
1406:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1407:Generated_Source\PSoC4/CyLib.c ****             }
1408:Generated_Source\PSoC4/CyLib.c ****             else
1409:Generated_Source\PSoC4/CyLib.c ****             {
1410:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1411:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1412:Generated_Source\PSoC4/CyLib.c **** 
1413:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1414:Generated_Source\PSoC4/CyLib.c ****                 {
1415:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1416:Generated_Source\PSoC4/CyLib.c ****                 }
1417:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1418:Generated_Source\PSoC4/CyLib.c ****                 {
1419:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1420:Generated_Source\PSoC4/CyLib.c ****                 }
1421:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1422:Generated_Source\PSoC4/CyLib.c ****                 {
1423:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1424:Generated_Source\PSoC4/CyLib.c ****                 }
1425:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1426:Generated_Source\PSoC4/CyLib.c ****                 {
1427:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1428:Generated_Source\PSoC4/CyLib.c ****                 }
1429:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1430:Generated_Source\PSoC4/CyLib.c ****                 {
1431:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1432:Generated_Source\PSoC4/CyLib.c ****                 }
1433:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1434:Generated_Source\PSoC4/CyLib.c ****                 {
1435:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1436:Generated_Source\PSoC4/CyLib.c ****                 }
1437:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1438:Generated_Source\PSoC4/CyLib.c ****                 {
1439:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1440:Generated_Source\PSoC4/CyLib.c ****                 }
1441:Generated_Source\PSoC4/CyLib.c ****                 else
1442:Generated_Source\PSoC4/CyLib.c ****                 {
1443:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1444:Generated_Source\PSoC4/CyLib.c ****                 }
1445:Generated_Source\PSoC4/CyLib.c **** 
1446:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1447:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1448:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 32


1449:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1450:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1451:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1452:Generated_Source\PSoC4/CyLib.c ****                 {
1453:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1454:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1455:Generated_Source\PSoC4/CyLib.c ****                 }
1456:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1457:Generated_Source\PSoC4/CyLib.c ****                 {
1458:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1459:Generated_Source\PSoC4/CyLib.c ****                 }
1460:Generated_Source\PSoC4/CyLib.c ****                 else
1461:Generated_Source\PSoC4/CyLib.c ****                 {
1462:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1463:Generated_Source\PSoC4/CyLib.c ****                 }
1464:Generated_Source\PSoC4/CyLib.c **** 
1465:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1466:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1467:Generated_Source\PSoC4/CyLib.c ****                 {
1468:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1469:Generated_Source\PSoC4/CyLib.c ****                 }
1470:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1471:Generated_Source\PSoC4/CyLib.c ****                 {
1472:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1473:Generated_Source\PSoC4/CyLib.c ****                 }
1474:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1475:Generated_Source\PSoC4/CyLib.c ****                 {
1476:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1477:Generated_Source\PSoC4/CyLib.c ****                 }
1478:Generated_Source\PSoC4/CyLib.c ****                 else
1479:Generated_Source\PSoC4/CyLib.c ****                 {
1480:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1481:Generated_Source\PSoC4/CyLib.c ****                 }
1482:Generated_Source\PSoC4/CyLib.c **** 
1483:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1484:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1485:Generated_Source\PSoC4/CyLib.c **** 
1486:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1487:Generated_Source\PSoC4/CyLib.c **** 
1488:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1489:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1490:Generated_Source\PSoC4/CyLib.c ****                 {
1491:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1492:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1493:Generated_Source\PSoC4/CyLib.c ****                 }
1494:Generated_Source\PSoC4/CyLib.c ****                 else
1495:Generated_Source\PSoC4/CyLib.c ****                 {
1496:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1497:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1498:Generated_Source\PSoC4/CyLib.c ****                     */
1499:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1500:Generated_Source\PSoC4/CyLib.c ****                 }
1501:Generated_Source\PSoC4/CyLib.c ****             }
1502:Generated_Source\PSoC4/CyLib.c **** 
1503:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1504:Generated_Source\PSoC4/CyLib.c ****         }
1505:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 33


1506:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1507:Generated_Source\PSoC4/CyLib.c **** 
1508:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1509:Generated_Source\PSoC4/CyLib.c **** 
1510:Generated_Source\PSoC4/CyLib.c **** 
1511:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1512:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1513:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1514:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1515:Generated_Source\PSoC4/CyLib.c ****     *
1516:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1517:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1518:Generated_Source\PSoC4/CyLib.c ****     *
1519:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1520:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1521:Generated_Source\PSoC4/CyLib.c ****     *
1522:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1523:Generated_Source\PSoC4/CyLib.c ****     *
1524:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1525:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1526:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1
1527:Generated_Source\PSoC4/CyLib.c ****     *
1528:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1529:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1530:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1531:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1532:Generated_Source\PSoC4/CyLib.c ****     *
1533:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1534:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1535:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1536:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1537:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1538:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1539:Generated_Source\PSoC4/CyLib.c ****     *
1540:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1541:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1542:Generated_Source\PSoC4/CyLib.c ****     {
1543:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1544:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1545:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1546:Generated_Source\PSoC4/CyLib.c **** 
1547:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1548:Generated_Source\PSoC4/CyLib.c ****         {
1549:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1550:Generated_Source\PSoC4/CyLib.c **** 
1551:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1552:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1553:Generated_Source\PSoC4/CyLib.c **** 
1554:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1555:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1556:Generated_Source\PSoC4/CyLib.c **** 
1557:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1558:Generated_Source\PSoC4/CyLib.c **** 
1559:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1560:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1561:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1562:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 34


1563:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1564:Generated_Source\PSoC4/CyLib.c **** 
1565:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1566:Generated_Source\PSoC4/CyLib.c ****             {
1567:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1568:Generated_Source\PSoC4/CyLib.c **** 
1569:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1570:Generated_Source\PSoC4/CyLib.c ****                 {
1571:Generated_Source\PSoC4/CyLib.c **** 
1572:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1573:Generated_Source\PSoC4/CyLib.c ****                     {
1574:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1575:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1576:Generated_Source\PSoC4/CyLib.c ****                         break;
1577:Generated_Source\PSoC4/CyLib.c ****                     }
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1580:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1581:Generated_Source\PSoC4/CyLib.c ****                 }
1582:Generated_Source\PSoC4/CyLib.c ****             }
1583:Generated_Source\PSoC4/CyLib.c ****         }
1584:Generated_Source\PSoC4/CyLib.c ****         else
1585:Generated_Source\PSoC4/CyLib.c ****         {
1586:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1587:Generated_Source\PSoC4/CyLib.c ****         }
1588:Generated_Source\PSoC4/CyLib.c **** 
1589:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1590:Generated_Source\PSoC4/CyLib.c ****     }
1591:Generated_Source\PSoC4/CyLib.c **** 
1592:Generated_Source\PSoC4/CyLib.c **** 
1593:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1594:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1595:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1596:Generated_Source\PSoC4/CyLib.c ****     *
1597:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1598:Generated_Source\PSoC4/CyLib.c ****     *
1599:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1600:Generated_Source\PSoC4/CyLib.c ****     *
1601:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1602:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1603:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1604:Generated_Source\PSoC4/CyLib.c ****     *
1605:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1606:Generated_Source\PSoC4/CyLib.c ****     *
1607:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1608:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1609:Generated_Source\PSoC4/CyLib.c ****     {
1610:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1611:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1612:Generated_Source\PSoC4/CyLib.c **** 
1613:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1614:Generated_Source\PSoC4/CyLib.c **** 
1615:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1616:Generated_Source\PSoC4/CyLib.c **** 
1617:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1618:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1619:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 35


1620:Generated_Source\PSoC4/CyLib.c ****         {
1621:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1622:Generated_Source\PSoC4/CyLib.c ****         }
1623:Generated_Source\PSoC4/CyLib.c **** 
1624:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1625:Generated_Source\PSoC4/CyLib.c **** 
1626:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1627:Generated_Source\PSoC4/CyLib.c ****     }
1628:Generated_Source\PSoC4/CyLib.c **** 
1629:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1630:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1631:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1632:Generated_Source\PSoC4/CyLib.c ****     *
1633:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1634:Generated_Source\PSoC4/CyLib.c ****     *
1635:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1636:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1637:Generated_Source\PSoC4/CyLib.c ****     *
1638:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1639:Generated_Source\PSoC4/CyLib.c ****     *
1640:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1641:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1642:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1643:Generated_Source\PSoC4/CyLib.c ****     *
1644:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1645:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1646:Generated_Source\PSoC4/CyLib.c ****     {
1647:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1648:Generated_Source\PSoC4/CyLib.c **** 
1649:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1650:Generated_Source\PSoC4/CyLib.c ****         {
1651:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1652:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1653:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1654:Generated_Source\PSoC4/CyLib.c ****         }
1655:Generated_Source\PSoC4/CyLib.c ****     }
1656:Generated_Source\PSoC4/CyLib.c **** 
1657:Generated_Source\PSoC4/CyLib.c **** 
1658:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1659:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1660:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1661:Generated_Source\PSoC4/CyLib.c ****     *
1662:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1663:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1664:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1665:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1666:Generated_Source\PSoC4/CyLib.c ****     *
1667:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1668:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1669:Generated_Source\PSoC4/CyLib.c ****     *
1670:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1671:Generated_Source\PSoC4/CyLib.c ****     *
1672:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1673:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1674:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1675:Generated_Source\PSoC4/CyLib.c ****     *
1676:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 36


1677:Generated_Source\PSoC4/CyLib.c ****     * divider.
1678:Generated_Source\PSoC4/CyLib.c ****     *
1679:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1680:Generated_Source\PSoC4/CyLib.c ****     *
1681:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1682:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1683:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1684:Generated_Source\PSoC4/CyLib.c ****     *
1685:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1686:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1687:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1688:Generated_Source\PSoC4/CyLib.c ****     *
1689:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1690:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1691:Generated_Source\PSoC4/CyLib.c ****     {
1692:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1693:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1694:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1695:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1696:Generated_Source\PSoC4/CyLib.c **** 
1697:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1698:Generated_Source\PSoC4/CyLib.c **** 
1699:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1700:Generated_Source\PSoC4/CyLib.c **** 
1701:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1702:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1703:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1704:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1705:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1706:Generated_Source\PSoC4/CyLib.c ****         {
1707:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1708:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1709:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1710:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1711:Generated_Source\PSoC4/CyLib.c **** 
1712:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1713:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1714:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1715:Generated_Source\PSoC4/CyLib.c **** 
1716:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1717:Generated_Source\PSoC4/CyLib.c **** 
1718:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1719:Generated_Source\PSoC4/CyLib.c ****         }
1720:Generated_Source\PSoC4/CyLib.c **** 
1721:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1722:Generated_Source\PSoC4/CyLib.c **** 
1723:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1724:Generated_Source\PSoC4/CyLib.c ****     }
1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c **** 
1727:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1728:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1729:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1732:Generated_Source\PSoC4/CyLib.c ****     *
1733:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 37


1734:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1735:Generated_Source\PSoC4/CyLib.c ****     *
1736:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1737:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1738:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1739:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1740:Generated_Source\PSoC4/CyLib.c ****     *
1741:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1742:Generated_Source\PSoC4/CyLib.c ****     *
1743:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1744:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1745:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1746:Generated_Source\PSoC4/CyLib.c ****     *
1747:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1748:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1749:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1750:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1751:Generated_Source\PSoC4/CyLib.c ****     *
1752:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1753:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1754:Generated_Source\PSoC4/CyLib.c ****     *
1755:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1756:Generated_Source\PSoC4/CyLib.c ****     *
1757:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1758:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1759:Generated_Source\PSoC4/CyLib.c ****     {
1760:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1761:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1762:Generated_Source\PSoC4/CyLib.c **** 
1763:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1764:Generated_Source\PSoC4/CyLib.c **** 
1765:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1766:Generated_Source\PSoC4/CyLib.c ****         {
1767:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1768:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1769:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1770:Generated_Source\PSoC4/CyLib.c ****         }
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1773:Generated_Source\PSoC4/CyLib.c ****     }
1774:Generated_Source\PSoC4/CyLib.c **** 
1775:Generated_Source\PSoC4/CyLib.c **** 
1776:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1777:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1778:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1779:Generated_Source\PSoC4/CyLib.c ****     *
1780:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1781:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1782:Generated_Source\PSoC4/CyLib.c ****     *
1783:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1784:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1785:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1786:Generated_Source\PSoC4/CyLib.c ****     *
1787:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1788:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1789:Generated_Source\PSoC4/CyLib.c ****     *
1790:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 38


1791:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1792:Generated_Source\PSoC4/CyLib.c ****     {
1793:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1794:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1797:Generated_Source\PSoC4/CyLib.c **** 
1798:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1799:Generated_Source\PSoC4/CyLib.c **** 
1800:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1801:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1802:Generated_Source\PSoC4/CyLib.c **** 
1803:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1804:Generated_Source\PSoC4/CyLib.c **** 
1805:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1806:Generated_Source\PSoC4/CyLib.c ****     }
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c **** 
1809:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1810:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1811:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1812:Generated_Source\PSoC4/CyLib.c ****     *
1813:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1814:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1815:Generated_Source\PSoC4/CyLib.c ****     *
1816:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1817:Generated_Source\PSoC4/CyLib.c ****     *
1818:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1819:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1820:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1821:Generated_Source\PSoC4/CyLib.c ****     *
1822:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1823:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1824:Generated_Source\PSoC4/CyLib.c ****     *
1825:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1826:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1827:Generated_Source\PSoC4/CyLib.c ****     {
1828:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1829:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1830:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1831:Generated_Source\PSoC4/CyLib.c **** 
1832:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1833:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1834:Generated_Source\PSoC4/CyLib.c **** 
1835:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1836:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1837:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1838:Generated_Source\PSoC4/CyLib.c ****         {
1839:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1840:Generated_Source\PSoC4/CyLib.c ****         }
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1843:Generated_Source\PSoC4/CyLib.c ****     }
1844:Generated_Source\PSoC4/CyLib.c **** 
1845:Generated_Source\PSoC4/CyLib.c **** 
1846:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1847:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 39


1848:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1849:Generated_Source\PSoC4/CyLib.c ****     *
1850:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1851:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1852:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1853:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1856:Generated_Source\PSoC4/CyLib.c ****     *
1857:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1858:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1859:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1860:Generated_Source\PSoC4/CyLib.c ****     *
1861:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1862:Generated_Source\PSoC4/CyLib.c ****     *
1863:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1864:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1865:Generated_Source\PSoC4/CyLib.c ****     {
1866:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1867:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1868:Generated_Source\PSoC4/CyLib.c **** 
1869:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1870:Generated_Source\PSoC4/CyLib.c **** 
1871:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1872:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1873:Generated_Source\PSoC4/CyLib.c **** 
1874:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1875:Generated_Source\PSoC4/CyLib.c **** 
1876:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1877:Generated_Source\PSoC4/CyLib.c ****     }
1878:Generated_Source\PSoC4/CyLib.c **** 
1879:Generated_Source\PSoC4/CyLib.c **** 
1880:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1881:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1882:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1883:Generated_Source\PSoC4/CyLib.c ****     *
1884:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1885:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1886:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1887:Generated_Source\PSoC4/CyLib.c ****     *
1888:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1889:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1890:Generated_Source\PSoC4/CyLib.c ****     *
1891:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1892:Generated_Source\PSoC4/CyLib.c ****     *
1893:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1894:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1895:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1896:Generated_Source\PSoC4/CyLib.c ****     *
1897:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1898:Generated_Source\PSoC4/CyLib.c ****     *
1899:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1900:Generated_Source\PSoC4/CyLib.c ****     *
1901:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
1902:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1903:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1904:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 40


1905:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1906:Generated_Source\PSoC4/CyLib.c ****     *
1907:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
1908:Generated_Source\PSoC4/CyLib.c ****     *
1909:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1910:Generated_Source\PSoC4/CyLib.c ****     * frequency.
1911:Generated_Source\PSoC4/CyLib.c ****     *
1912:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
1913:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1916:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1917:Generated_Source\PSoC4/CyLib.c ****     {
1918:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1919:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1920:Generated_Source\PSoC4/CyLib.c **** 
1921:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1922:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1925:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1926:Generated_Source\PSoC4/CyLib.c **** 
1927:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1928:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1929:Generated_Source\PSoC4/CyLib.c **** 
1930:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1931:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c **** 
1934:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1935:Generated_Source\PSoC4/CyLib.c **** 
1936:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1937:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1938:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1939:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1940:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1941:Generated_Source\PSoC4/CyLib.c ****         {
1942:Generated_Source\PSoC4/CyLib.c **** 
1943:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1944:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1945:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1946:Generated_Source\PSoC4/CyLib.c **** 
1947:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1948:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1949:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1952:Generated_Source\PSoC4/CyLib.c ****             {
1953:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1954:Generated_Source\PSoC4/CyLib.c ****                 {
1955:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1956:Generated_Source\PSoC4/CyLib.c **** 
1957:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1958:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1959:Generated_Source\PSoC4/CyLib.c **** 
1960:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1961:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 41


1962:Generated_Source\PSoC4/CyLib.c **** 
1963:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1964:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1965:Generated_Source\PSoC4/CyLib.c **** 
1966:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1967:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1968:Generated_Source\PSoC4/CyLib.c ****                     {
1969:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1970:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1971:Generated_Source\PSoC4/CyLib.c ****                         break;
1972:Generated_Source\PSoC4/CyLib.c ****                     }
1973:Generated_Source\PSoC4/CyLib.c ****                 }
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c **** 
1976:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1977:Generated_Source\PSoC4/CyLib.c ****                 {
1978:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1979:Generated_Source\PSoC4/CyLib.c ****                     {
1980:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1981:Generated_Source\PSoC4/CyLib.c ****                     }
1982:Generated_Source\PSoC4/CyLib.c ****                 }
1983:Generated_Source\PSoC4/CyLib.c ****             }
1984:Generated_Source\PSoC4/CyLib.c **** 
1985:Generated_Source\PSoC4/CyLib.c ****         }
1986:Generated_Source\PSoC4/CyLib.c **** 
1987:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1988:Generated_Source\PSoC4/CyLib.c ****     }
1989:Generated_Source\PSoC4/CyLib.c **** 
1990:Generated_Source\PSoC4/CyLib.c **** 
1991:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1993:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLib.c ****     *
1995:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
1996:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2001:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2002:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
2003:Generated_Source\PSoC4/CyLib.c ****     *
2004:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2005:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2006:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
2007:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2008:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
2009:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
2010:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
2011:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
2012:Generated_Source\PSoC4/CyLib.c ****     *
2013:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2014:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2015:Generated_Source\PSoC4/CyLib.c ****     {
2016:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2017:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2018:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 42


2019:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2020:Generated_Source\PSoC4/CyLib.c **** 
2021:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2022:Generated_Source\PSoC4/CyLib.c ****         {
2023:Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2024:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
2025:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
2026:Generated_Source\PSoC4/CyLib.c ****         }
2027:Generated_Source\PSoC4/CyLib.c **** 
2028:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2029:Generated_Source\PSoC4/CyLib.c ****     }
2030:Generated_Source\PSoC4/CyLib.c **** 
2031:Generated_Source\PSoC4/CyLib.c **** 
2032:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2033:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2034:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2035:Generated_Source\PSoC4/CyLib.c ****     *
2036:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2037:Generated_Source\PSoC4/CyLib.c ****     *
2038:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2039:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
2042:Generated_Source\PSoC4/CyLib.c ****     *
2043:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2044:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2045:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
2046:Generated_Source\PSoC4/CyLib.c ****     *
2047:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2048:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2049:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2050:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2051:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2052:Generated_Source\PSoC4/CyLib.c ****     *
2053:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2054:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2055:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2056:Generated_Source\PSoC4/CyLib.c ****     *
2057:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2058:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2059:Generated_Source\PSoC4/CyLib.c ****     {
2060:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2061:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2062:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2063:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2064:Generated_Source\PSoC4/CyLib.c **** 
2065:Generated_Source\PSoC4/CyLib.c **** 
2066:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2067:Generated_Source\PSoC4/CyLib.c **** 
2068:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2069:Generated_Source\PSoC4/CyLib.c **** 
2070:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2071:Generated_Source\PSoC4/CyLib.c ****         {
2072:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2073:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2074:Generated_Source\PSoC4/CyLib.c **** 
2075:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 43


2076:Generated_Source\PSoC4/CyLib.c **** 
2077:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2078:Generated_Source\PSoC4/CyLib.c ****         }
2079:Generated_Source\PSoC4/CyLib.c **** 
2080:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2081:Generated_Source\PSoC4/CyLib.c **** 
2082:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2083:Generated_Source\PSoC4/CyLib.c ****     }
2084:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c **** 
2087:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2088:Generated_Source\PSoC4/CyLib.c **** 
2089:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2090:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2091:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2092:Generated_Source\PSoC4/CyLib.c ****     *
2093:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2094:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2095:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2096:Generated_Source\PSoC4/CyLib.c ****     *
2097:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2098:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2099:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2100:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2101:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2102:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2103:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2104:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2105:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2106:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2107:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2108:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2109:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2110:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2111:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2112:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2113:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2114:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2115:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2116:Generated_Source\PSoC4/CyLib.c ****     *
2117:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2118:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2119:Generated_Source\PSoC4/CyLib.c ****     {
2120:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2121:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2122:Generated_Source\PSoC4/CyLib.c **** 
2123:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2124:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2125:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2126:Generated_Source\PSoC4/CyLib.c **** 
2127:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2128:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2129:Generated_Source\PSoC4/CyLib.c **** 
2130:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2131:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2132:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 44


2133:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2134:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2135:Generated_Source\PSoC4/CyLib.c **** 
2136:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2137:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2138:Generated_Source\PSoC4/CyLib.c ****     }
2139:Generated_Source\PSoC4/CyLib.c **** 
2140:Generated_Source\PSoC4/CyLib.c **** 
2141:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2142:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2143:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2144:Generated_Source\PSoC4/CyLib.c ****     *
2145:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2146:Generated_Source\PSoC4/CyLib.c ****     *
2147:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2149:Generated_Source\PSoC4/CyLib.c ****     {
 318              		.loc 1 2149 0
 319              		.cfi_startproc
2150:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 320              		.loc 1 2150 0
 321 0000 054A     		ldr	r2, .L28
 322 0002 1368     		ldr	r3, [r2]
 323 0004 0221     		mov	r1, #2
 324 0006 8B43     		bic	r3, r1
 325 0008 1360     		str	r3, [r2]
2151:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 326              		.loc 1 2151 0
 327 000a 044A     		ldr	r2, .L28+4
 328 000c 1368     		ldr	r3, [r2]
 329 000e 0139     		sub	r1, r1, #1
 330 0010 8B43     		bic	r3, r1
 331 0012 1360     		str	r3, [r2]
2152:Generated_Source\PSoC4/CyLib.c ****     }
 332              		.loc 1 2152 0
 333              		@ sp needed
 334 0014 7047     		bx	lr
 335              	.L29:
 336 0016 C046     		.align	2
 337              	.L28:
 338 0018 08000B40 		.word	1074462728
 339 001c 18000B40 		.word	1074462744
 340              		.cfi_endproc
 341              	.LFE14:
 342              		.size	CySysLvdDisable, .-CySysLvdDisable
 343              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 344              		.align	2
 345              		.global	CySysLvdGetInterruptSource
 346              		.code	16
 347              		.thumb_func
 348              		.type	CySysLvdGetInterruptSource, %function
 349              	CySysLvdGetInterruptSource:
 350              	.LFB15:
2153:Generated_Source\PSoC4/CyLib.c **** 
2154:Generated_Source\PSoC4/CyLib.c **** 
2155:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2156:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 45


2157:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2158:Generated_Source\PSoC4/CyLib.c ****     *
2159:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2160:Generated_Source\PSoC4/CyLib.c ****     *
2161:Generated_Source\PSoC4/CyLib.c ****     * \return
2162:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2163:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2164:Generated_Source\PSoC4/CyLib.c ****     *
2165:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2166:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2167:Generated_Source\PSoC4/CyLib.c ****     {
 351              		.loc 1 2167 0
 352              		.cfi_startproc
2168:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 353              		.loc 1 2168 0
 354 0000 024B     		ldr	r3, .L31
 355 0002 1B68     		ldr	r3, [r3]
 356 0004 0220     		mov	r0, #2
 357 0006 1840     		and	r0, r3
2169:Generated_Source\PSoC4/CyLib.c ****     }
 358              		.loc 1 2169 0
 359              		@ sp needed
 360 0008 7047     		bx	lr
 361              	.L32:
 362 000a C046     		.align	2
 363              	.L31:
 364 000c 04000B40 		.word	1074462724
 365              		.cfi_endproc
 366              	.LFE15:
 367              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 368              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 369              		.align	2
 370              		.global	CySysLvdClearInterrupt
 371              		.code	16
 372              		.thumb_func
 373              		.type	CySysLvdClearInterrupt, %function
 374              	CySysLvdClearInterrupt:
 375              	.LFB16:
2170:Generated_Source\PSoC4/CyLib.c **** 
2171:Generated_Source\PSoC4/CyLib.c **** 
2172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2175:Generated_Source\PSoC4/CyLib.c ****     *
2176:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2177:Generated_Source\PSoC4/CyLib.c ****     *
2178:Generated_Source\PSoC4/CyLib.c ****     * \return
2179:Generated_Source\PSoC4/CyLib.c ****     *  None
2180:Generated_Source\PSoC4/CyLib.c ****     *
2181:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2182:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2183:Generated_Source\PSoC4/CyLib.c ****     {
 376              		.loc 1 2183 0
 377              		.cfi_startproc
2184:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 378              		.loc 1 2184 0
 379 0000 0222     		mov	r2, #2
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 46


 380 0002 014B     		ldr	r3, .L34
 381 0004 1A60     		str	r2, [r3]
2185:Generated_Source\PSoC4/CyLib.c ****     }
 382              		.loc 1 2185 0
 383              		@ sp needed
 384 0006 7047     		bx	lr
 385              	.L35:
 386              		.align	2
 387              	.L34:
 388 0008 04000B40 		.word	1074462724
 389              		.cfi_endproc
 390              	.LFE16:
 391              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 392              		.section	.text.CySysGetResetReason,"ax",%progbits
 393              		.align	2
 394              		.global	CySysGetResetReason
 395              		.code	16
 396              		.thumb_func
 397              		.type	CySysGetResetReason, %function
 398              	CySysGetResetReason:
 399              	.LFB17:
2186:Generated_Source\PSoC4/CyLib.c **** 
2187:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2188:Generated_Source\PSoC4/CyLib.c **** 
2189:Generated_Source\PSoC4/CyLib.c **** 
2190:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2191:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2192:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2193:Generated_Source\PSoC4/CyLib.c **** *
2194:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2195:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2196:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2197:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2198:Generated_Source\PSoC4/CyLib.c **** *
2199:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2200:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2201:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2202:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2203:Generated_Source\PSoC4/CyLib.c **** *
2204:Generated_Source\PSoC4/CyLib.c **** * \return
2205:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2206:Generated_Source\PSoC4/CyLib.c **** *
2207:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2208:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2209:Generated_Source\PSoC4/CyLib.c **** {
 400              		.loc 1 2209 0
 401              		.cfi_startproc
 402              	.LVL16:
 403 0000 021C     		mov	r2, r0
2210:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2211:Generated_Source\PSoC4/CyLib.c **** 
2212:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 404              		.loc 1 2212 0
 405 0002 1920     		mov	r0, #25
 406              	.LVL17:
 407 0004 0240     		and	r2, r0
 408              	.LVL18:
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 47


2213:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 409              		.loc 1 2213 0
 410 0006 0249     		ldr	r1, .L37
 411 0008 0B68     		ldr	r3, [r1]
 412 000a 1840     		and	r0, r3
 413              	.LVL19:
2214:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2215:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 414              		.loc 1 2215 0
 415 000c 0A60     		str	r2, [r1]
2216:Generated_Source\PSoC4/CyLib.c **** 
2217:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2218:Generated_Source\PSoC4/CyLib.c **** }
 416              		.loc 1 2218 0
 417              		@ sp needed
 418 000e 7047     		bx	lr
 419              	.L38:
 420              		.align	2
 421              	.L37:
 422 0010 00030B40 		.word	1074463488
 423              		.cfi_endproc
 424              	.LFE17:
 425              		.size	CySysGetResetReason, .-CySysGetResetReason
 426              		.section	.text.CyDisableInts,"ax",%progbits
 427              		.align	2
 428              		.global	CyDisableInts
 429              		.code	16
 430              		.thumb_func
 431              		.type	CyDisableInts, %function
 432              	CyDisableInts:
 433              	.LFB18:
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c **** 
2221:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2222:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2223:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2224:Generated_Source\PSoC4/CyLib.c **** *
2225:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2226:Generated_Source\PSoC4/CyLib.c **** *
2227:Generated_Source\PSoC4/CyLib.c **** * \return
2228:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2229:Generated_Source\PSoC4/CyLib.c **** *
2230:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2231:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2232:Generated_Source\PSoC4/CyLib.c **** {
 434              		.loc 1 2232 0
 435              		.cfi_startproc
2233:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2236:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 436              		.loc 1 2236 0
 437 0000 024B     		ldr	r3, .L40
 438 0002 1868     		ldr	r0, [r3]
 439              	.LVL20:
2237:Generated_Source\PSoC4/CyLib.c **** 
2238:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 48


2239:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 440              		.loc 1 2239 0
 441 0004 0122     		mov	r2, #1
 442 0006 5242     		neg	r2, r2
 443 0008 1A60     		str	r2, [r3]
2240:Generated_Source\PSoC4/CyLib.c **** 
2241:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2242:Generated_Source\PSoC4/CyLib.c **** }
 444              		.loc 1 2242 0
 445              		@ sp needed
 446 000a 7047     		bx	lr
 447              	.L41:
 448              		.align	2
 449              	.L40:
 450 000c 80E100E0 		.word	-536813184
 451              		.cfi_endproc
 452              	.LFE18:
 453              		.size	CyDisableInts, .-CyDisableInts
 454              		.section	.text.CyEnableInts,"ax",%progbits
 455              		.align	2
 456              		.global	CyEnableInts
 457              		.code	16
 458              		.thumb_func
 459              		.type	CyEnableInts, %function
 460              	CyEnableInts:
 461              	.LFB19:
2243:Generated_Source\PSoC4/CyLib.c **** 
2244:Generated_Source\PSoC4/CyLib.c **** 
2245:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2246:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2247:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2248:Generated_Source\PSoC4/CyLib.c **** *
2249:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2250:Generated_Source\PSoC4/CyLib.c **** *
2251:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2252:Generated_Source\PSoC4/CyLib.c **** *
2253:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2254:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2255:Generated_Source\PSoC4/CyLib.c **** {
 462              		.loc 1 2255 0
 463              		.cfi_startproc
 464              	.LVL21:
2256:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 465              		.loc 1 2256 0
 466 0000 014B     		ldr	r3, .L43
 467 0002 1860     		str	r0, [r3]
2257:Generated_Source\PSoC4/CyLib.c **** }
 468              		.loc 1 2257 0
 469              		@ sp needed
 470 0004 7047     		bx	lr
 471              	.L44:
 472 0006 C046     		.align	2
 473              	.L43:
 474 0008 00E100E0 		.word	-536813312
 475              		.cfi_endproc
 476              	.LFE19:
 477              		.size	CyEnableInts, .-CyEnableInts
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 49


 478              		.section	.text.CyIntEnable,"ax",%progbits
 479              		.align	2
 480              		.global	CyIntEnable
 481              		.code	16
 482              		.thumb_func
 483              		.type	CyIntEnable, %function
 484              	CyIntEnable:
 485              	.LFB26:
2258:Generated_Source\PSoC4/CyLib.c **** 
2259:Generated_Source\PSoC4/CyLib.c **** 
2260:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2261:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2262:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2263:Generated_Source\PSoC4/CyLib.c **** *
2264:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2265:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2266:Generated_Source\PSoC4/CyLib.c **** *
2267:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2268:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2269:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2270:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2271:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2272:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2273:Generated_Source\PSoC4/CyLib.c **** *
2274:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2275:Generated_Source\PSoC4/CyLib.c **** *
2276:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2277:Generated_Source\PSoC4/CyLib.c **** *
2278:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2279:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2280:Generated_Source\PSoC4/CyLib.c **** {
2281:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2282:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2285:Generated_Source\PSoC4/CyLib.c **** 
2286:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2287:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2290:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2291:Generated_Source\PSoC4/CyLib.c **** 
2292:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2293:Generated_Source\PSoC4/CyLib.c **** }
2294:Generated_Source\PSoC4/CyLib.c **** 
2295:Generated_Source\PSoC4/CyLib.c **** 
2296:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2297:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2298:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2299:Generated_Source\PSoC4/CyLib.c **** *
2300:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2301:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2302:Generated_Source\PSoC4/CyLib.c **** *
2303:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2304:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2305:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2306:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 50


2307:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2308:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2309:Generated_Source\PSoC4/CyLib.c **** *
2310:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2311:Generated_Source\PSoC4/CyLib.c **** *
2312:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2313:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2314:Generated_Source\PSoC4/CyLib.c **** {
2315:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2316:Generated_Source\PSoC4/CyLib.c **** 
2317:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2318:Generated_Source\PSoC4/CyLib.c **** 
2319:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2320:Generated_Source\PSoC4/CyLib.c **** }
2321:Generated_Source\PSoC4/CyLib.c **** 
2322:Generated_Source\PSoC4/CyLib.c **** 
2323:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2324:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2325:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2326:Generated_Source\PSoC4/CyLib.c **** *
2327:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2328:Generated_Source\PSoC4/CyLib.c **** *
2329:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2330:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2331:Generated_Source\PSoC4/CyLib.c **** *
2332:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2333:Generated_Source\PSoC4/CyLib.c **** *
2334:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2335:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2336:Generated_Source\PSoC4/CyLib.c **** {
2337:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2338:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2339:Generated_Source\PSoC4/CyLib.c **** 
2340:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2343:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
2344:Generated_Source\PSoC4/CyLib.c **** 
2345:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2346:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2347:Generated_Source\PSoC4/CyLib.c **** 
2348:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2349:Generated_Source\PSoC4/CyLib.c **** }
2350:Generated_Source\PSoC4/CyLib.c **** 
2351:Generated_Source\PSoC4/CyLib.c **** 
2352:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2353:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2354:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2355:Generated_Source\PSoC4/CyLib.c **** *
2356:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2357:Generated_Source\PSoC4/CyLib.c **** *
2358:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2359:Generated_Source\PSoC4/CyLib.c **** *
2360:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2361:Generated_Source\PSoC4/CyLib.c **** *
2362:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2363:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 51


2364:Generated_Source\PSoC4/CyLib.c **** {
2365:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2366:Generated_Source\PSoC4/CyLib.c **** 
2367:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2368:Generated_Source\PSoC4/CyLib.c **** 
2369:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2370:Generated_Source\PSoC4/CyLib.c **** }
2371:Generated_Source\PSoC4/CyLib.c **** 
2372:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2373:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2374:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2375:Generated_Source\PSoC4/CyLib.c **** *
2376:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2377:Generated_Source\PSoC4/CyLib.c **** *
2378:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2379:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2380:Generated_Source\PSoC4/CyLib.c **** *
2381:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2382:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2383:Generated_Source\PSoC4/CyLib.c **** {
2384:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2385:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2386:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2387:Generated_Source\PSoC4/CyLib.c **** 
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2389:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2390:Generated_Source\PSoC4/CyLib.c **** 
2391:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2392:Generated_Source\PSoC4/CyLib.c **** 
2393:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2396:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
2397:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
2398:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2399:Generated_Source\PSoC4/CyLib.c **** 
2400:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2401:Generated_Source\PSoC4/CyLib.c **** }
2402:Generated_Source\PSoC4/CyLib.c **** 
2403:Generated_Source\PSoC4/CyLib.c **** 
2404:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2405:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2406:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2407:Generated_Source\PSoC4/CyLib.c **** *
2408:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2409:Generated_Source\PSoC4/CyLib.c **** *
2410:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2411:Generated_Source\PSoC4/CyLib.c **** *
2412:Generated_Source\PSoC4/CyLib.c **** * \return
2413:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2414:Generated_Source\PSoC4/CyLib.c **** *
2415:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2416:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2417:Generated_Source\PSoC4/CyLib.c **** {
2418:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2419:Generated_Source\PSoC4/CyLib.c **** 
2420:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 52


2421:Generated_Source\PSoC4/CyLib.c **** 
2422:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2423:Generated_Source\PSoC4/CyLib.c **** 
2424:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2425:Generated_Source\PSoC4/CyLib.c **** }
2426:Generated_Source\PSoC4/CyLib.c **** 
2427:Generated_Source\PSoC4/CyLib.c **** 
2428:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2429:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2430:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2431:Generated_Source\PSoC4/CyLib.c **** *
2432:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2433:Generated_Source\PSoC4/CyLib.c **** *
2434:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2435:Generated_Source\PSoC4/CyLib.c **** *
2436:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2437:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2438:Generated_Source\PSoC4/CyLib.c **** {
 486              		.loc 1 2438 0
 487              		.cfi_startproc
 488              	.LVL22:
2439:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 489              		.loc 1 2439 0
 490 0000 1F23     		mov	r3, #31
 491 0002 1840     		and	r0, r3
 492              	.LVL23:
 493 0004 1E3B     		sub	r3, r3, #30
 494 0006 8340     		lsl	r3, r3, r0
 495 0008 181C     		mov	r0, r3
 496 000a 014B     		ldr	r3, .L46
 497 000c 1860     		str	r0, [r3]
2440:Generated_Source\PSoC4/CyLib.c **** }
 498              		.loc 1 2440 0
 499              		@ sp needed
 500 000e 7047     		bx	lr
 501              	.L47:
 502              		.align	2
 503              	.L46:
 504 0010 00E100E0 		.word	-536813312
 505              		.cfi_endproc
 506              	.LFE26:
 507              		.size	CyIntEnable, .-CyIntEnable
 508              		.section	.text.CyIntGetState,"ax",%progbits
 509              		.align	2
 510              		.global	CyIntGetState
 511              		.code	16
 512              		.thumb_func
 513              		.type	CyIntGetState, %function
 514              	CyIntGetState:
 515              	.LFB27:
2441:Generated_Source\PSoC4/CyLib.c **** 
2442:Generated_Source\PSoC4/CyLib.c **** 
2443:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2444:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2445:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2446:Generated_Source\PSoC4/CyLib.c **** *
2447:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 53


2448:Generated_Source\PSoC4/CyLib.c **** *
2449:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** * \return
2452:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2453:Generated_Source\PSoC4/CyLib.c **** *
2454:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2455:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2456:Generated_Source\PSoC4/CyLib.c **** {
 516              		.loc 1 2456 0
 517              		.cfi_startproc
 518              	.LVL24:
2457:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2458:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 519              		.loc 1 2458 0
 520 0000 044B     		ldr	r3, .L49
 521 0002 1B68     		ldr	r3, [r3]
 522 0004 1F22     		mov	r2, #31
 523 0006 1040     		and	r0, r2
 524              	.LVL25:
 525 0008 C340     		lsr	r3, r3, r0
 526 000a 181C     		mov	r0, r3
 527 000c 0123     		mov	r3, #1
 528 000e 1840     		and	r0, r3
2459:Generated_Source\PSoC4/CyLib.c **** }
 529              		.loc 1 2459 0
 530              		@ sp needed
 531 0010 7047     		bx	lr
 532              	.L50:
 533 0012 C046     		.align	2
 534              	.L49:
 535 0014 00E100E0 		.word	-536813312
 536              		.cfi_endproc
 537              	.LFE27:
 538              		.size	CyIntGetState, .-CyIntGetState
 539              		.section	.text.CyIntDisable,"ax",%progbits
 540              		.align	2
 541              		.global	CyIntDisable
 542              		.code	16
 543              		.thumb_func
 544              		.type	CyIntDisable, %function
 545              	CyIntDisable:
 546              	.LFB28:
2460:Generated_Source\PSoC4/CyLib.c **** 
2461:Generated_Source\PSoC4/CyLib.c **** 
2462:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2463:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2464:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2465:Generated_Source\PSoC4/CyLib.c **** *
2466:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2467:Generated_Source\PSoC4/CyLib.c **** *
2468:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2469:Generated_Source\PSoC4/CyLib.c **** *
2470:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2471:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2472:Generated_Source\PSoC4/CyLib.c **** {
 547              		.loc 1 2472 0
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 54


 548              		.cfi_startproc
 549              	.LVL26:
2473:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 550              		.loc 1 2473 0
 551 0000 1F23     		mov	r3, #31
 552 0002 1840     		and	r0, r3
 553              	.LVL27:
 554 0004 1E3B     		sub	r3, r3, #30
 555 0006 8340     		lsl	r3, r3, r0
 556 0008 181C     		mov	r0, r3
 557 000a 014B     		ldr	r3, .L52
 558 000c 1860     		str	r0, [r3]
2474:Generated_Source\PSoC4/CyLib.c **** }
 559              		.loc 1 2474 0
 560              		@ sp needed
 561 000e 7047     		bx	lr
 562              	.L53:
 563              		.align	2
 564              	.L52:
 565 0010 80E100E0 		.word	-536813184
 566              		.cfi_endproc
 567              	.LFE28:
 568              		.size	CyIntDisable, .-CyIntDisable
 569              		.section	.text.CyIntSetPending,"ax",%progbits
 570              		.align	2
 571              		.global	CyIntSetPending
 572              		.code	16
 573              		.thumb_func
 574              		.type	CyIntSetPending, %function
 575              	CyIntSetPending:
 576              	.LFB29:
2475:Generated_Source\PSoC4/CyLib.c **** 
2476:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2477:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2478:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2483:Generated_Source\PSoC4/CyLib.c **** *
2484:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2485:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2486:Generated_Source\PSoC4/CyLib.c **** {
 577              		.loc 1 2486 0
 578              		.cfi_startproc
 579              	.LVL28:
2487:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 580              		.loc 1 2487 0
 581 0000 1F23     		mov	r3, #31
 582 0002 1840     		and	r0, r3
 583              	.LVL29:
 584 0004 1E3B     		sub	r3, r3, #30
 585 0006 8340     		lsl	r3, r3, r0
 586 0008 181C     		mov	r0, r3
 587 000a 014B     		ldr	r3, .L55
 588 000c 1860     		str	r0, [r3]
2488:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 55


 589              		.loc 1 2488 0
 590              		@ sp needed
 591 000e 7047     		bx	lr
 592              	.L56:
 593              		.align	2
 594              	.L55:
 595 0010 00E200E0 		.word	-536813056
 596              		.cfi_endproc
 597              	.LFE29:
 598              		.size	CyIntSetPending, .-CyIntSetPending
 599              		.section	.text.CyIntClearPending,"ax",%progbits
 600              		.align	2
 601              		.global	CyIntClearPending
 602              		.code	16
 603              		.thumb_func
 604              		.type	CyIntClearPending, %function
 605              	CyIntClearPending:
 606              	.LFB30:
2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c **** 
2491:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2492:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2493:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2494:Generated_Source\PSoC4/CyLib.c **** *
2495:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2496:Generated_Source\PSoC4/CyLib.c **** *
2497:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2498:Generated_Source\PSoC4/CyLib.c **** *
2499:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2500:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2501:Generated_Source\PSoC4/CyLib.c **** {
 607              		.loc 1 2501 0
 608              		.cfi_startproc
 609              	.LVL30:
2502:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 610              		.loc 1 2502 0
 611 0000 1F23     		mov	r3, #31
 612 0002 1840     		and	r0, r3
 613              	.LVL31:
 614 0004 1E3B     		sub	r3, r3, #30
 615 0006 8340     		lsl	r3, r3, r0
 616 0008 181C     		mov	r0, r3
 617 000a 014B     		ldr	r3, .L58
 618 000c 1860     		str	r0, [r3]
2503:Generated_Source\PSoC4/CyLib.c **** }
 619              		.loc 1 2503 0
 620              		@ sp needed
 621 000e 7047     		bx	lr
 622              	.L59:
 623              		.align	2
 624              	.L58:
 625 0010 80E200E0 		.word	-536812928
 626              		.cfi_endproc
 627              	.LFE30:
 628              		.size	CyIntClearPending, .-CyIntClearPending
 629              		.section	.text.CyHalt,"ax",%progbits
 630              		.align	2
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 56


 631              		.global	CyHalt
 632              		.code	16
 633              		.thumb_func
 634              		.type	CyHalt, %function
 635              	CyHalt:
 636              	.LFB31:
2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c **** 
2506:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2507:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2508:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2509:Generated_Source\PSoC4/CyLib.c **** *
2510:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2511:Generated_Source\PSoC4/CyLib.c **** *
2512:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2513:Generated_Source\PSoC4/CyLib.c **** *
2514:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2515:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2516:Generated_Source\PSoC4/CyLib.c **** {
 637              		.loc 1 2516 0
 638              		.cfi_startproc
 639              	.LVL32:
2517:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2518:Generated_Source\PSoC4/CyLib.c ****     {
2519:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2520:Generated_Source\PSoC4/CyLib.c ****     }
2521:Generated_Source\PSoC4/CyLib.c **** 
2522:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2523:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2524:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2525:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 640              		.loc 1 2525 0
 641              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 642 0000 01BE     		    bkpt    1
 643              	@ 0 "" 2
2526:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2527:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2528:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2529:Generated_Source\PSoC4/CyLib.c **** }
 644              		.loc 1 2529 0
 645              		.code	16
 646              		@ sp needed
 647 0002 7047     		bx	lr
 648              		.cfi_endproc
 649              	.LFE31:
 650              		.size	CyHalt, .-CyHalt
 651              		.section	.text.CySysClkWriteEcoDiv,"ax",%progbits
 652              		.align	2
 653              		.global	CySysClkWriteEcoDiv
 654              		.code	16
 655              		.thumb_func
 656              		.type	CySysClkWriteEcoDiv, %function
 657              	CySysClkWriteEcoDiv:
 658              	.LFB12:
1251:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
 659              		.loc 1 1251 0
 660              		.cfi_startproc
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 57


 661              	.LVL33:
 662 0000 10B5     		push	{r4, lr}
 663              		.cfi_def_cfa_offset 8
 664              		.cfi_offset 4, -8
 665              		.cfi_offset 14, -4
 666 0002 041C     		mov	r4, r0
1254:Generated_Source\PSoC4/CyLib.c ****             {
 667              		.loc 1 1254 0
 668 0004 0A4B     		ldr	r3, .L64
 669 0006 1B68     		ldr	r3, [r3]
 670 0008 0722     		mov	r2, #7
 671 000a 1340     		and	r3, r2
 672 000c 022B     		cmp	r3, #2
 673 000e 0BD0     		beq	.L62
1256:Generated_Source\PSoC4/CyLib.c **** 
 674              		.loc 1 1256 0
 675 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 676              	.LVL34:
1258:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 677              		.loc 1 1258 0
 678 0014 0321     		mov	r1, #3
 679 0016 0C40     		and	r4, r1
 680              	.LVL35:
1259:Generated_Source\PSoC4/CyLib.c **** 
 681              		.loc 1 1259 0
 682 0018 064A     		ldr	r2, .L64+4
 683 001a 1368     		ldr	r3, [r2]
 684 001c 8B43     		bic	r3, r1
1258:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 685              		.loc 1 1258 0
 686 001e 2343     		orr	r3, r4
 687 0020 1360     		str	r3, [r2]
1261:Generated_Source\PSoC4/CyLib.c ****             }
 688              		.loc 1 1261 0
 689 0022 FFF7FEFF 		bl	CyExitCriticalSection
 690              	.LVL36:
 691 0026 02E0     		b	.L61
 692              	.LVL37:
 693              	.L62:
1266:Generated_Source\PSoC4/CyLib.c ****             }
 694              		.loc 1 1266 0 discriminator 1
 695 0028 0020     		mov	r0, #0
 696              	.LVL38:
 697 002a FFF7FEFF 		bl	CyHalt
 698              	.LVL39:
 699              	.L61:
1268:Generated_Source\PSoC4/CyLib.c **** 
 700              		.loc 1 1268 0
 701              		@ sp needed
 702 002e 10BD     		pop	{r4, pc}
 703              	.L65:
 704              		.align	2
 705              	.L64:
 706 0030 00010B40 		.word	1074462976
 707 0034 64F02E40 		.word	1076818020
 708              		.cfi_endproc
 709              	.LFE12:
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 58


 710              		.size	CySysClkWriteEcoDiv, .-CySysClkWriteEcoDiv
 711              		.section	.text.CyIntSetSysVector,"ax",%progbits
 712              		.align	2
 713              		.global	CyIntSetSysVector
 714              		.code	16
 715              		.thumb_func
 716              		.type	CyIntSetSysVector, %function
 717              	CyIntSetSysVector:
 718              	.LFB20:
2280:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 719              		.loc 1 2280 0
 720              		.cfi_startproc
 721              	.LVL40:
 722 0000 38B5     		push	{r3, r4, r5, lr}
 723              		.cfi_def_cfa_offset 16
 724              		.cfi_offset 3, -16
 725              		.cfi_offset 4, -12
 726              		.cfi_offset 5, -8
 727              		.cfi_offset 14, -4
 728 0002 041C     		mov	r4, r0
 729 0004 0D1C     		mov	r5, r1
 730              	.LVL41:
2284:Generated_Source\PSoC4/CyLib.c **** 
 731              		.loc 1 2284 0
 732 0006 0F28     		cmp	r0, #15
 733 0008 02D9     		bls	.L67
2284:Generated_Source\PSoC4/CyLib.c **** 
 734              		.loc 1 2284 0 is_stmt 0 discriminator 1
 735 000a 0020     		mov	r0, #0
 736              	.LVL42:
 737 000c FFF7FEFF 		bl	CyHalt
 738              	.LVL43:
 739              	.L67:
2287:Generated_Source\PSoC4/CyLib.c **** 
 740              		.loc 1 2287 0 is_stmt 1
 741 0010 A400     		lsl	r4, r4, #2
 742 0012 8023     		mov	r3, #128
 743 0014 9B05     		lsl	r3, r3, #22
 744 0016 9C46     		mov	ip, r3
 745 0018 6444     		add	r4, r4, ip
 746 001a 2068     		ldr	r0, [r4]
 747              	.LVL44:
2290:Generated_Source\PSoC4/CyLib.c **** 
 748              		.loc 1 2290 0
 749 001c 2560     		str	r5, [r4]
2293:Generated_Source\PSoC4/CyLib.c **** 
 750              		.loc 1 2293 0
 751              		@ sp needed
 752              	.LVL45:
 753 001e 38BD     		pop	{r3, r4, r5, pc}
 754              		.cfi_endproc
 755              	.LFE20:
 756              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 757              		.section	.text.CyIntGetSysVector,"ax",%progbits
 758              		.align	2
 759              		.global	CyIntGetSysVector
 760              		.code	16
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 59


 761              		.thumb_func
 762              		.type	CyIntGetSysVector, %function
 763              	CyIntGetSysVector:
 764              	.LFB21:
2314:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 765              		.loc 1 2314 0
 766              		.cfi_startproc
 767              	.LVL46:
 768 0000 10B5     		push	{r4, lr}
 769              		.cfi_def_cfa_offset 8
 770              		.cfi_offset 4, -8
 771              		.cfi_offset 14, -4
 772 0002 041E     		sub	r4, r0, #0
 773              	.LVL47:
2317:Generated_Source\PSoC4/CyLib.c **** 
 774              		.loc 1 2317 0
 775 0004 0F2C     		cmp	r4, #15
 776 0006 02D9     		bls	.L69
2317:Generated_Source\PSoC4/CyLib.c **** 
 777              		.loc 1 2317 0 is_stmt 0 discriminator 1
 778 0008 0020     		mov	r0, #0
 779              	.LVL48:
 780 000a FFF7FEFF 		bl	CyHalt
 781              	.LVL49:
 782              	.L69:
2319:Generated_Source\PSoC4/CyLib.c **** }
 783              		.loc 1 2319 0 is_stmt 1
 784 000e A400     		lsl	r4, r4, #2
 785 0010 8023     		mov	r3, #128
 786 0012 9B05     		lsl	r3, r3, #22
 787 0014 9C46     		mov	ip, r3
 788 0016 6444     		add	r4, r4, ip
 789 0018 2068     		ldr	r0, [r4]
2320:Generated_Source\PSoC4/CyLib.c **** 
 790              		.loc 1 2320 0
 791              		@ sp needed
 792 001a 10BD     		pop	{r4, pc}
 793              		.cfi_endproc
 794              	.LFE21:
 795              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 796              		.section	.text.CyIntSetVector,"ax",%progbits
 797              		.align	2
 798              		.global	CyIntSetVector
 799              		.code	16
 800              		.thumb_func
 801              		.type	CyIntSetVector, %function
 802              	CyIntSetVector:
 803              	.LFB22:
2336:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 804              		.loc 1 2336 0
 805              		.cfi_startproc
 806              	.LVL50:
 807 0000 38B5     		push	{r3, r4, r5, lr}
 808              		.cfi_def_cfa_offset 16
 809              		.cfi_offset 3, -16
 810              		.cfi_offset 4, -12
 811              		.cfi_offset 5, -8
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 60


 812              		.cfi_offset 14, -4
 813 0002 041C     		mov	r4, r0
 814 0004 0D1C     		mov	r5, r1
 815              	.LVL51:
2340:Generated_Source\PSoC4/CyLib.c **** 
 816              		.loc 1 2340 0
 817 0006 1F28     		cmp	r0, #31
 818 0008 02D9     		bls	.L71
2340:Generated_Source\PSoC4/CyLib.c **** 
 819              		.loc 1 2340 0 is_stmt 0 discriminator 1
 820 000a 0020     		mov	r0, #0
 821              	.LVL52:
 822 000c FFF7FEFF 		bl	CyHalt
 823              	.LVL53:
 824              	.L71:
2343:Generated_Source\PSoC4/CyLib.c **** 
 825              		.loc 1 2343 0 is_stmt 1
 826 0010 A400     		lsl	r4, r4, #2
 827 0012 034B     		ldr	r3, .L72
 828 0014 9C46     		mov	ip, r3
 829 0016 6444     		add	r4, r4, ip
 830 0018 2068     		ldr	r0, [r4]
 831              	.LVL54:
2346:Generated_Source\PSoC4/CyLib.c **** 
 832              		.loc 1 2346 0
 833 001a 2560     		str	r5, [r4]
2349:Generated_Source\PSoC4/CyLib.c **** 
 834              		.loc 1 2349 0
 835              		@ sp needed
 836              	.LVL55:
 837 001c 38BD     		pop	{r3, r4, r5, pc}
 838              	.L73:
 839 001e C046     		.align	2
 840              	.L72:
 841 0020 40000020 		.word	536870976
 842              		.cfi_endproc
 843              	.LFE22:
 844              		.size	CyIntSetVector, .-CyIntSetVector
 845              		.section	.text.CyIntGetVector,"ax",%progbits
 846              		.align	2
 847              		.global	CyIntGetVector
 848              		.code	16
 849              		.thumb_func
 850              		.type	CyIntGetVector, %function
 851              	CyIntGetVector:
 852              	.LFB23:
2364:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 853              		.loc 1 2364 0
 854              		.cfi_startproc
 855              	.LVL56:
 856 0000 10B5     		push	{r4, lr}
 857              		.cfi_def_cfa_offset 8
 858              		.cfi_offset 4, -8
 859              		.cfi_offset 14, -4
 860 0002 041E     		sub	r4, r0, #0
 861              	.LVL57:
2367:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 61


 862              		.loc 1 2367 0
 863 0004 1F2C     		cmp	r4, #31
 864 0006 02D9     		bls	.L75
2367:Generated_Source\PSoC4/CyLib.c **** 
 865              		.loc 1 2367 0 is_stmt 0 discriminator 1
 866 0008 0020     		mov	r0, #0
 867              	.LVL58:
 868 000a FFF7FEFF 		bl	CyHalt
 869              	.LVL59:
 870              	.L75:
2369:Generated_Source\PSoC4/CyLib.c **** }
 871              		.loc 1 2369 0 is_stmt 1
 872 000e A400     		lsl	r4, r4, #2
 873 0010 024B     		ldr	r3, .L76
 874 0012 9C46     		mov	ip, r3
 875 0014 6444     		add	r4, r4, ip
 876 0016 2068     		ldr	r0, [r4]
2370:Generated_Source\PSoC4/CyLib.c **** 
 877              		.loc 1 2370 0
 878              		@ sp needed
 879 0018 10BD     		pop	{r4, pc}
 880              	.L77:
 881 001a C046     		.align	2
 882              	.L76:
 883 001c 40000020 		.word	536870976
 884              		.cfi_endproc
 885              	.LFE23:
 886              		.size	CyIntGetVector, .-CyIntGetVector
 887              		.section	.text.CyIntSetPriority,"ax",%progbits
 888              		.align	2
 889              		.global	CyIntSetPriority
 890              		.code	16
 891              		.thumb_func
 892              		.type	CyIntSetPriority, %function
 893              	CyIntSetPriority:
 894              	.LFB24:
2383:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 895              		.loc 1 2383 0
 896              		.cfi_startproc
 897              	.LVL60:
 898 0000 70B5     		push	{r4, r5, r6, lr}
 899              		.cfi_def_cfa_offset 16
 900              		.cfi_offset 4, -16
 901              		.cfi_offset 5, -12
 902              		.cfi_offset 6, -8
 903              		.cfi_offset 14, -4
 904 0002 041C     		mov	r4, r0
 905 0004 0E1E     		sub	r6, r1, #0
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 906              		.loc 1 2388 0
 907 0006 032E     		cmp	r6, #3
 908 0008 02D9     		bls	.L79
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 909              		.loc 1 2388 0 is_stmt 0 discriminator 1
 910 000a 0020     		mov	r0, #0
 911              	.LVL61:
 912 000c FFF7FEFF 		bl	CyHalt
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 62


 913              	.LVL62:
 914              	.L79:
2389:Generated_Source\PSoC4/CyLib.c **** 
 915              		.loc 1 2389 0 is_stmt 1
 916 0010 1F2C     		cmp	r4, #31
 917 0012 02D9     		bls	.L80
2389:Generated_Source\PSoC4/CyLib.c **** 
 918              		.loc 1 2389 0 is_stmt 0 discriminator 1
 919 0014 0020     		mov	r0, #0
 920 0016 FFF7FEFF 		bl	CyHalt
 921              	.LVL63:
 922              	.L80:
2391:Generated_Source\PSoC4/CyLib.c **** 
 923              		.loc 1 2391 0 is_stmt 1
 924 001a 0325     		mov	r5, #3
 925 001c 2540     		and	r5, r4
 926 001e ED00     		lsl	r5, r5, #3
 927 0020 0635     		add	r5, r5, #6
 928              	.LVL64:
2393:Generated_Source\PSoC4/CyLib.c **** 
 929              		.loc 1 2393 0
 930 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 931              	.LVL65:
2395:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 932              		.loc 1 2395 0
 933 0026 A408     		lsr	r4, r4, #2
 934 0028 A400     		lsl	r4, r4, #2
 935 002a 074B     		ldr	r3, .L81
 936 002c 9C46     		mov	ip, r3
 937 002e 6444     		add	r4, r4, ip
 938 0030 2368     		ldr	r3, [r4]
 939              	.LVL66:
2396:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 940              		.loc 1 2396 0
 941 0032 0322     		mov	r2, #3
 942 0034 AA40     		lsl	r2, r2, r5
 943 0036 9343     		bic	r3, r2
 944              	.LVL67:
2397:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 945              		.loc 1 2397 0
 946 0038 AE40     		lsl	r6, r6, r5
 947 003a 351C     		mov	r5, r6
 948              	.LVL68:
 949 003c 1D43     		orr	r5, r3
 950              	.LVL69:
2398:Generated_Source\PSoC4/CyLib.c **** 
 951              		.loc 1 2398 0
 952 003e 2560     		str	r5, [r4]
2400:Generated_Source\PSoC4/CyLib.c **** }
 953              		.loc 1 2400 0
 954 0040 FFF7FEFF 		bl	CyExitCriticalSection
 955              	.LVL70:
2401:Generated_Source\PSoC4/CyLib.c **** 
 956              		.loc 1 2401 0
 957              		@ sp needed
 958              	.LVL71:
 959 0044 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 63


 960              	.L82:
 961 0046 C046     		.align	2
 962              	.L81:
 963 0048 00E400E0 		.word	-536812544
 964              		.cfi_endproc
 965              	.LFE24:
 966              		.size	CyIntSetPriority, .-CyIntSetPriority
 967              		.section	.text.CyIntGetPriority,"ax",%progbits
 968              		.align	2
 969              		.global	CyIntGetPriority
 970              		.code	16
 971              		.thumb_func
 972              		.type	CyIntGetPriority, %function
 973              	CyIntGetPriority:
 974              	.LFB25:
2417:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 975              		.loc 1 2417 0
 976              		.cfi_startproc
 977              	.LVL72:
 978 0000 10B5     		push	{r4, lr}
 979              		.cfi_def_cfa_offset 8
 980              		.cfi_offset 4, -8
 981              		.cfi_offset 14, -4
 982 0002 041E     		sub	r4, r0, #0
2420:Generated_Source\PSoC4/CyLib.c **** 
 983              		.loc 1 2420 0
 984 0004 1F2C     		cmp	r4, #31
 985 0006 02D9     		bls	.L84
2420:Generated_Source\PSoC4/CyLib.c **** 
 986              		.loc 1 2420 0 is_stmt 0 discriminator 1
 987 0008 0020     		mov	r0, #0
 988              	.LVL73:
 989 000a FFF7FEFF 		bl	CyHalt
 990              	.LVL74:
 991              	.L84:
2422:Generated_Source\PSoC4/CyLib.c **** 
 992              		.loc 1 2422 0 is_stmt 1
 993 000e A308     		lsr	r3, r4, #2
 994 0010 9B00     		lsl	r3, r3, #2
 995 0012 054A     		ldr	r2, .L85
 996 0014 9446     		mov	ip, r2
 997 0016 6344     		add	r3, r3, ip
 998 0018 1868     		ldr	r0, [r3]
 999 001a 0323     		mov	r3, #3
 1000 001c 1C40     		and	r4, r3
 1001 001e E400     		lsl	r4, r4, #3
 1002 0020 0634     		add	r4, r4, #6
 1003 0022 E040     		lsr	r0, r0, r4
 1004              	.LVL75:
2424:Generated_Source\PSoC4/CyLib.c **** }
 1005              		.loc 1 2424 0
 1006 0024 1840     		and	r0, r3
 1007              	.LVL76:
2425:Generated_Source\PSoC4/CyLib.c **** 
 1008              		.loc 1 2425 0
 1009              		@ sp needed
 1010 0026 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 64


 1011              	.L86:
 1012              		.align	2
 1013              	.L85:
 1014 0028 00E400E0 		.word	-536812544
 1015              		.cfi_endproc
 1016              	.LFE25:
 1017              		.size	CyIntGetPriority, .-CyIntGetPriority
 1018              		.section	.text.CySoftwareReset,"ax",%progbits
 1019              		.align	2
 1020              		.global	CySoftwareReset
 1021              		.code	16
 1022              		.thumb_func
 1023              		.type	CySoftwareReset, %function
 1024              	CySoftwareReset:
 1025              	.LFB32:
2530:Generated_Source\PSoC4/CyLib.c **** 
2531:Generated_Source\PSoC4/CyLib.c **** 
2532:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2533:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2534:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2535:Generated_Source\PSoC4/CyLib.c **** *
2536:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2537:Generated_Source\PSoC4/CyLib.c **** *
2538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2539:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2540:Generated_Source\PSoC4/CyLib.c **** {
 1026              		.loc 1 2540 0
 1027              		.cfi_startproc
2541:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2542:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2543:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2544:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2545:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 1028              		.loc 1 2545 0
 1029 0000 034A     		ldr	r2, .L88
 1030 0002 1368     		ldr	r3, [r2]
 1031 0004 1B04     		lsl	r3, r3, #16
 1032 0006 1B0C     		lsr	r3, r3, #16
2546:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1033              		.loc 1 2546 0
 1034 0008 0249     		ldr	r1, .L88+4
 1035 000a 0B43     		orr	r3, r1
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1036              		.loc 1 2545 0
 1037 000c 1360     		str	r3, [r2]
2547:Generated_Source\PSoC4/CyLib.c **** }
 1038              		.loc 1 2547 0
 1039              		@ sp needed
 1040 000e 7047     		bx	lr
 1041              	.L89:
 1042              		.align	2
 1043              	.L88:
 1044 0010 0CED00E0 		.word	-536810228
 1045 0014 0400FA05 		.word	100270084
 1046              		.cfi_endproc
 1047              	.LFE32:
 1048              		.size	CySoftwareReset, .-CySoftwareReset
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 65


 1049              		.section	.text.CyDelay,"ax",%progbits
 1050              		.align	2
 1051              		.global	CyDelay
 1052              		.code	16
 1053              		.thumb_func
 1054              		.type	CyDelay, %function
 1055              	CyDelay:
 1056              	.LFB33:
2548:Generated_Source\PSoC4/CyLib.c **** 
2549:Generated_Source\PSoC4/CyLib.c **** 
2550:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2551:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2552:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLib.c **** *
2554:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2559:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2560:Generated_Source\PSoC4/CyLib.c **** {
 1057              		.loc 1 2560 0
 1058              		.cfi_startproc
 1059              	.LVL77:
 1060 0000 10B5     		push	{r4, lr}
 1061              		.cfi_def_cfa_offset 8
 1062              		.cfi_offset 4, -8
 1063              		.cfi_offset 14, -4
 1064 0002 041C     		mov	r4, r0
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1065              		.loc 1 2561 0
 1066 0004 06E0     		b	.L91
 1067              	.LVL78:
 1068              	.L92:
2562:Generated_Source\PSoC4/CyLib.c ****     {
2563:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2564:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2565:Generated_Source\PSoC4/CyLib.c ****          */
2566:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1069              		.loc 1 2566 0
 1070 0006 084B     		ldr	r3, .L93
 1071 0008 5868     		ldr	r0, [r3, #4]
 1072 000a FFF7FEFF 		bl	CyDelayCycles
 1073              	.LVL79:
2567:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1074              		.loc 1 2567 0
 1075 000e 074B     		ldr	r3, .L93+4
 1076 0010 9C46     		mov	ip, r3
 1077 0012 6444     		add	r4, r4, ip
 1078              	.LVL80:
 1079              	.L91:
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1080              		.loc 1 2561 0
 1081 0014 8023     		mov	r3, #128
 1082 0016 1B02     		lsl	r3, r3, #8
 1083 0018 9C42     		cmp	r4, r3
 1084 001a F4D8     		bhi	.L92
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 66


2568:Generated_Source\PSoC4/CyLib.c ****     }
2569:Generated_Source\PSoC4/CyLib.c **** 
2570:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1085              		.loc 1 2570 0
 1086 001c 024B     		ldr	r3, .L93
 1087 001e 9868     		ldr	r0, [r3, #8]
 1088 0020 6043     		mul	r0, r4
 1089 0022 FFF7FEFF 		bl	CyDelayCycles
 1090              	.LVL81:
2571:Generated_Source\PSoC4/CyLib.c **** }
 1091              		.loc 1 2571 0
 1092              		@ sp needed
 1093              	.LVL82:
 1094 0026 10BD     		pop	{r4, pc}
 1095              	.L94:
 1096              		.align	2
 1097              	.L93:
 1098 0028 00000000 		.word	.LANCHOR0
 1099 002c 0080FFFF 		.word	-32768
 1100              		.cfi_endproc
 1101              	.LFE33:
 1102              		.size	CyDelay, .-CyDelay
 1103              		.section	.text.CyDelayUs,"ax",%progbits
 1104              		.align	2
 1105              		.global	CyDelayUs
 1106              		.code	16
 1107              		.thumb_func
 1108              		.type	CyDelayUs, %function
 1109              	CyDelayUs:
 1110              	.LFB34:
2572:Generated_Source\PSoC4/CyLib.c **** 
2573:Generated_Source\PSoC4/CyLib.c **** 
2574:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2575:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2576:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2577:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2578:Generated_Source\PSoC4/CyLib.c **** *
2579:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2580:Generated_Source\PSoC4/CyLib.c **** *
2581:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2582:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2583:Generated_Source\PSoC4/CyLib.c **** {
 1111              		.loc 1 2583 0
 1112              		.cfi_startproc
 1113              	.LVL83:
 1114 0000 08B5     		push	{r3, lr}
 1115              		.cfi_def_cfa_offset 8
 1116              		.cfi_offset 3, -8
 1117              		.cfi_offset 14, -4
2584:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1118              		.loc 1 2584 0
 1119 0002 034B     		ldr	r3, .L96
 1120 0004 1B7B     		ldrb	r3, [r3, #12]
 1121 0006 5843     		mul	r0, r3
 1122              	.LVL84:
 1123 0008 FFF7FEFF 		bl	CyDelayCycles
 1124              	.LVL85:
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 67


2585:Generated_Source\PSoC4/CyLib.c **** }
 1125              		.loc 1 2585 0
 1126              		@ sp needed
 1127 000c 08BD     		pop	{r3, pc}
 1128              	.L97:
 1129 000e C046     		.align	2
 1130              	.L96:
 1131 0010 00000000 		.word	.LANCHOR0
 1132              		.cfi_endproc
 1133              	.LFE34:
 1134              		.size	CyDelayUs, .-CyDelayUs
 1135              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 1136              		.align	2
 1137              		.global	CySysClkWriteImoFreq
 1138              		.code	16
 1139              		.thumb_func
 1140              		.type	CySysClkWriteImoFreq, %function
 1141              	CySysClkWriteImoFreq:
 1142              	.LFB8:
 624:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 1143              		.loc 1 624 0
 1144              		.cfi_startproc
 1145              	.LVL86:
 1146 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1147              		.cfi_def_cfa_offset 20
 1148              		.cfi_offset 4, -20
 1149              		.cfi_offset 5, -16
 1150              		.cfi_offset 6, -12
 1151              		.cfi_offset 7, -8
 1152              		.cfi_offset 14, -4
 1153 0002 5746     		mov	r7, r10
 1154 0004 4E46     		mov	r6, r9
 1155 0006 C0B4     		push	{r6, r7}
 1156              		.cfi_def_cfa_offset 28
 1157              		.cfi_offset 9, -28
 1158              		.cfi_offset 10, -24
 1159 0008 83B0     		sub	sp, sp, #12
 1160              		.cfi_def_cfa_offset 40
 1161 000a 041C     		mov	r4, r0
 647:Generated_Source\PSoC4/CyLib.c **** 
 1162              		.loc 1 647 0
 1163 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1164              	.LVL87:
 1165 0010 0190     		str	r0, [sp, #4]
 1166              	.LVL88:
 697:Generated_Source\PSoC4/CyLib.c ****         {
 1167              		.loc 1 697 0
 1168 0012 E71E     		sub	r7, r4, #3
 1169 0014 2D2F     		cmp	r7, #45
 1170 0016 74D8     		bhi	.L99
 699:Generated_Source\PSoC4/CyLib.c ****             {
 1171              		.loc 1 699 0
 1172 0018 3F4B     		ldr	r3, .L109
 1173 001a 1B78     		ldrb	r3, [r3]
 1174 001c DBB2     		uxtb	r3, r3
 1175 001e A342     		cmp	r3, r4
 1176 0020 08D3     		bcc	.L100
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 68


 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 1177              		.loc 1 701 0
 1178 0022 3E4B     		ldr	r3, .L109+4
 1179 0024 1B78     		ldrb	r3, [r3]
 1180 0026 DBB2     		uxtb	r3, r3
 1181 0028 9A46     		mov	r10, r3
 1182              	.LVL89:
 702:Generated_Source\PSoC4/CyLib.c ****             }
 1183              		.loc 1 702 0
 1184 002a 3D4B     		ldr	r3, .L109+8
 1185 002c 1B78     		ldrb	r3, [r3]
 1186 002e DBB2     		uxtb	r3, r3
 1187 0030 9946     		mov	r9, r3
 1188              	.LVL90:
 1189 0032 31E0     		b	.L101
 1190              	.LVL91:
 1191              	.L100:
 704:Generated_Source\PSoC4/CyLib.c ****             {
 1192              		.loc 1 704 0
 1193 0034 3B4B     		ldr	r3, .L109+12
 1194 0036 1B78     		ldrb	r3, [r3]
 1195 0038 DBB2     		uxtb	r3, r3
 1196 003a A342     		cmp	r3, r4
 1197 003c 08D3     		bcc	.L102
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 1198              		.loc 1 706 0
 1199 003e 3A4B     		ldr	r3, .L109+16
 1200 0040 1B78     		ldrb	r3, [r3]
 1201 0042 DBB2     		uxtb	r3, r3
 1202 0044 9A46     		mov	r10, r3
 1203              	.LVL92:
 707:Generated_Source\PSoC4/CyLib.c ****             }
 1204              		.loc 1 707 0
 1205 0046 394B     		ldr	r3, .L109+20
 1206 0048 1B78     		ldrb	r3, [r3]
 1207 004a DBB2     		uxtb	r3, r3
 1208 004c 9946     		mov	r9, r3
 1209              	.LVL93:
 1210 004e 23E0     		b	.L101
 1211              	.LVL94:
 1212              	.L102:
 709:Generated_Source\PSoC4/CyLib.c ****             {
 1213              		.loc 1 709 0
 1214 0050 374B     		ldr	r3, .L109+24
 1215 0052 1B78     		ldrb	r3, [r3]
 1216 0054 DBB2     		uxtb	r3, r3
 1217 0056 A342     		cmp	r3, r4
 1218 0058 08D3     		bcc	.L103
 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 1219              		.loc 1 711 0
 1220 005a 364B     		ldr	r3, .L109+28
 1221 005c 1B78     		ldrb	r3, [r3]
 1222 005e DBB2     		uxtb	r3, r3
 1223 0060 9A46     		mov	r10, r3
 1224              	.LVL95:
 712:Generated_Source\PSoC4/CyLib.c ****             }
 1225              		.loc 1 712 0
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 69


 1226 0062 354B     		ldr	r3, .L109+32
 1227 0064 1B78     		ldrb	r3, [r3]
 1228 0066 DBB2     		uxtb	r3, r3
 1229 0068 9946     		mov	r9, r3
 1230              	.LVL96:
 1231 006a 15E0     		b	.L101
 1232              	.LVL97:
 1233              	.L103:
 714:Generated_Source\PSoC4/CyLib.c ****             {
 1234              		.loc 1 714 0
 1235 006c 334B     		ldr	r3, .L109+36
 1236 006e 1B78     		ldrb	r3, [r3]
 1237 0070 DBB2     		uxtb	r3, r3
 1238 0072 A342     		cmp	r3, r4
 1239 0074 08D3     		bcc	.L104
 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 1240              		.loc 1 716 0
 1241 0076 324B     		ldr	r3, .L109+40
 1242 0078 1B78     		ldrb	r3, [r3]
 1243 007a DBB2     		uxtb	r3, r3
 1244 007c 9A46     		mov	r10, r3
 1245              	.LVL98:
 717:Generated_Source\PSoC4/CyLib.c ****             }
 1246              		.loc 1 717 0
 1247 007e 314B     		ldr	r3, .L109+44
 1248 0080 1B78     		ldrb	r3, [r3]
 1249 0082 DBB2     		uxtb	r3, r3
 1250 0084 9946     		mov	r9, r3
 1251              	.LVL99:
 1252 0086 07E0     		b	.L101
 1253              	.LVL100:
 1254              	.L104:
 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 1255              		.loc 1 721 0
 1256 0088 2F4B     		ldr	r3, .L109+48
 1257 008a 1B78     		ldrb	r3, [r3]
 1258 008c DBB2     		uxtb	r3, r3
 1259 008e 9A46     		mov	r10, r3
 1260              	.LVL101:
 722:Generated_Source\PSoC4/CyLib.c ****             }
 1261              		.loc 1 722 0
 1262 0090 2E4B     		ldr	r3, .L109+52
 1263 0092 1B78     		ldrb	r3, [r3]
 1264 0094 DBB2     		uxtb	r3, r3
 1265 0096 9946     		mov	r9, r3
 1266              	.LVL102:
 1267              	.L101:
 726:Generated_Source\PSoC4/CyLib.c **** 
 1268              		.loc 1 726 0
 1269 0098 2D4B     		ldr	r3, .L109+56
 1270 009a DE5D     		ldrb	r6, [r3, r7]
 1271              	.LVL103:
 738:Generated_Source\PSoC4/CyLib.c ****             {
 1272              		.loc 1 738 0
 1273 009c 2F2E     		cmp	r6, #47
 1274 009e 09D9     		bls	.L105
 738:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 70


 1275              		.loc 1 738 0 is_stmt 0 discriminator 1
 1276 00a0 2A2C     		cmp	r4, #42
 1277 00a2 07D9     		bls	.L105
 741:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 1278              		.loc 1 741 0 is_stmt 1
 1279 00a4 1922     		mov	r2, #25
 1280 00a6 2B4B     		ldr	r3, .L109+60
 1281 00a8 1A60     		str	r2, [r3]
 1282              	.LVL104:
 744:Generated_Source\PSoC4/CyLib.c **** 
 1283              		.loc 1 744 0
 1284 00aa 0520     		mov	r0, #5
 1285 00ac FFF7FEFF 		bl	CyDelayCycles
 1286              	.LVL105:
 746:Generated_Source\PSoC4/CyLib.c ****             }
 1287              		.loc 1 746 0
 1288 00b0 1925     		mov	r5, #25
 1289 00b2 03E0     		b	.L106
 1290              	.LVL106:
 1291              	.L105:
 750:Generated_Source\PSoC4/CyLib.c ****             }
 1292              		.loc 1 750 0
 1293 00b4 274B     		ldr	r3, .L109+60
 1294 00b6 1D68     		ldr	r5, [r3]
 1295 00b8 3F23     		mov	r3, #63
 1296 00ba 1D40     		and	r5, r3
 1297              	.LVL107:
 1298              	.L106:
 762:Generated_Source\PSoC4/CyLib.c ****             {
 1299              		.loc 1 762 0
 1300 00bc AE42     		cmp	r6, r5
 1301 00be 06D2     		bcs	.L107
 765:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1302              		.loc 1 765 0
 1303 00c0 234B     		ldr	r3, .L109+56
 1304 00c2 DA5D     		ldrb	r2, [r3, r7]
 1305 00c4 234B     		ldr	r3, .L109+60
 1306 00c6 1A60     		str	r2, [r3]
 766:Generated_Source\PSoC4/CyLib.c ****             }
 1307              		.loc 1 766 0
 1308 00c8 0520     		mov	r0, #5
 1309 00ca FFF7FEFF 		bl	CyDelayCycles
 1310              	.LVL108:
 1311              	.L107:
 785:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 1312              		.loc 1 785 0
 1313 00ce 1F4B     		ldr	r3, .L109+52
 1314 00d0 9C46     		mov	ip, r3
 1315 00d2 6444     		add	r4, r4, ip
 1316              	.LVL109:
 1317 00d4 2378     		ldrb	r3, [r4]
 1318 00d6 DBB2     		uxtb	r3, r3
 1319              	.LVL110:
 789:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 1320              		.loc 1 789 0
 1321 00d8 1F4A     		ldr	r2, .L109+64
 1322 00da 1360     		str	r3, [r2]
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 71


 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 1323              		.loc 1 790 0
 1324 00dc 1F4B     		ldr	r3, .L109+68
 1325              	.LVL111:
 1326 00de 5246     		mov	r2, r10
 1327              	.LVL112:
 1328 00e0 1A60     		str	r2, [r3]
 1329              	.LVL113:
 791:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 1330              		.loc 1 791 0
 1331 00e2 1F4B     		ldr	r3, .L109+72
 1332 00e4 4A46     		mov	r2, r9
 1333 00e6 1A60     		str	r2, [r3]
 792:Generated_Source\PSoC4/CyLib.c **** 
 1334              		.loc 1 792 0
 1335 00e8 0520     		mov	r0, #5
 1336 00ea FFF7FEFF 		bl	CyDelayUs
 1337              	.LVL114:
 794:Generated_Source\PSoC4/CyLib.c ****             {
 1338              		.loc 1 794 0
 1339 00ee AE42     		cmp	r6, r5
 1340 00f0 0AD9     		bls	.L108
 797:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1341              		.loc 1 797 0
 1342 00f2 174B     		ldr	r3, .L109+56
 1343 00f4 DA5D     		ldrb	r2, [r3, r7]
 1344 00f6 174B     		ldr	r3, .L109+60
 1345 00f8 1A60     		str	r2, [r3]
 798:Generated_Source\PSoC4/CyLib.c ****             }
 1346              		.loc 1 798 0
 1347 00fa 0520     		mov	r0, #5
 1348 00fc FFF7FEFF 		bl	CyDelayCycles
 1349              	.LVL115:
 1350 0100 02E0     		b	.L108
 1351              	.LVL116:
 1352              	.L99:
 804:Generated_Source\PSoC4/CyLib.c ****         }
 1353              		.loc 1 804 0 discriminator 1
 1354 0102 0020     		mov	r0, #0
 1355 0104 FFF7FEFF 		bl	CyHalt
 1356              	.LVL117:
 1357              	.L108:
 823:Generated_Source\PSoC4/CyLib.c ****     }
 1358              		.loc 1 823 0
 1359 0108 0198     		ldr	r0, [sp, #4]
 1360 010a FFF7FEFF 		bl	CyExitCriticalSection
 1361              	.LVL118:
 824:Generated_Source\PSoC4/CyLib.c **** 
 1362              		.loc 1 824 0
 1363 010e 03B0     		add	sp, sp, #12
 1364              		@ sp needed
 1365              	.LVL119:
 1366 0110 0CBC     		pop	{r2, r3}
 1367 0112 9146     		mov	r9, r2
 1368 0114 9A46     		mov	r10, r3
 1369 0116 F0BD     		pop	{r4, r5, r6, r7, pc}
 1370              	.L110:
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 72


 1371              		.align	2
 1372              	.L109:
 1373 0118 40F3FF0F 		.word	268432192
 1374 011c 41F3FF0F 		.word	268432193
 1375 0120 42F3FF0F 		.word	268432194
 1376 0124 43F3FF0F 		.word	268432195
 1377 0128 44F3FF0F 		.word	268432196
 1378 012c 45F3FF0F 		.word	268432197
 1379 0130 46F3FF0F 		.word	268432198
 1380 0134 47F3FF0F 		.word	268432199
 1381 0138 48F3FF0F 		.word	268432200
 1382 013c 49F3FF0F 		.word	268432201
 1383 0140 4AF3FF0F 		.word	268432202
 1384 0144 4BF3FF0F 		.word	268432203
 1385 0148 4CF3FF0F 		.word	268432204
 1386 014c 4DF3FF0F 		.word	268432205
 1387 0150 00000000 		.word	.LANCHOR1
 1388 0154 2CFF0B40 		.word	1074528044
 1389 0158 28FF0B40 		.word	1074528040
 1390 015c 1CFF0B40 		.word	1074528028
 1391 0160 20FF0B40 		.word	1074528032
 1392              		.cfi_endproc
 1393              	.LFE8:
 1394              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1395              		.section	.text.CySysClkEcoStart,"ax",%progbits
 1396              		.align	2
 1397              		.global	CySysClkEcoStart
 1398              		.code	16
 1399              		.thumb_func
 1400              		.type	CySysClkEcoStart, %function
 1401              	CySysClkEcoStart:
 1402              	.LFB9:
1028:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 1403              		.loc 1 1028 0
 1404              		.cfi_startproc
 1405              	.LVL120:
 1406 0000 10B5     		push	{r4, lr}
 1407              		.cfi_def_cfa_offset 8
 1408              		.cfi_offset 4, -8
 1409              		.cfi_offset 14, -4
 1410 0002 041C     		mov	r4, r0
 1411              	.LVL121:
1033:Generated_Source\PSoC4/CyLib.c **** 
 1412              		.loc 1 1033 0
 1413 0004 0F4A     		ldr	r2, .L116
 1414 0006 1168     		ldr	r1, [r2]
 1415 0008 0123     		mov	r3, #1
 1416 000a 0B43     		orr	r3, r1
 1417 000c 1360     		str	r3, [r2]
1036:Generated_Source\PSoC4/CyLib.c **** 
 1418              		.loc 1 1036 0
 1419 000e 0E4A     		ldr	r2, .L116+4
 1420 0010 0E4B     		ldr	r3, .L116+8
 1421 0012 1A60     		str	r2, [r3]
1039:Generated_Source\PSoC4/CyLib.c ****         
 1422              		.loc 1 1039 0
 1423 0014 0E4A     		ldr	r2, .L116+12
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 73


 1424 0016 1368     		ldr	r3, [r2]
 1425 0018 8021     		mov	r1, #128
 1426 001a 0902     		lsl	r1, r1, #8
 1427 001c 0B43     		orr	r3, r1
 1428 001e 1360     		str	r3, [r2]
1137:Generated_Source\PSoC4/CyLib.c ****         {
 1429              		.loc 1 1137 0
 1430 0020 0028     		cmp	r0, #0
 1431 0022 09D1     		bne	.L112
1029:Generated_Source\PSoC4/CyLib.c **** 
 1432              		.loc 1 1029 0
 1433 0024 0020     		mov	r0, #0
 1434              	.LVL122:
 1435 0026 0CE0     		b	.L113
 1436              	.L114:
1143:Generated_Source\PSoC4/CyLib.c **** 
 1437              		.loc 1 1143 0
 1438 0028 0120     		mov	r0, #1
 1439 002a FFF7FEFF 		bl	CyDelayUs
 1440              	.LVL123:
1145:Generated_Source\PSoC4/CyLib.c ****                 {
 1441              		.loc 1 1145 0
 1442 002e FFF7FEFF 		bl	CySysClkEcoReadStatus
 1443              	.LVL124:
 1444 0032 0028     		cmp	r0, #0
 1445 0034 04D1     		bne	.L115
1141:Generated_Source\PSoC4/CyLib.c ****             {
 1446              		.loc 1 1141 0
 1447 0036 013C     		sub	r4, r4, #1
 1448              	.LVL125:
 1449              	.L112:
1141:Generated_Source\PSoC4/CyLib.c ****             {
 1450              		.loc 1 1141 0 is_stmt 0 discriminator 1
 1451 0038 002C     		cmp	r4, #0
 1452 003a F5D1     		bne	.L114
1139:Generated_Source\PSoC4/CyLib.c **** 
 1453              		.loc 1 1139 0 is_stmt 1
 1454 003c 1020     		mov	r0, #16
 1455 003e 00E0     		b	.L113
 1456              	.L115:
1147:Generated_Source\PSoC4/CyLib.c ****                     break;
 1457              		.loc 1 1147 0
 1458 0040 0020     		mov	r0, #0
 1459              	.L113:
 1460              	.LVL126:
1155:Generated_Source\PSoC4/CyLib.c **** 
 1461              		.loc 1 1155 0
 1462              		@ sp needed
 1463              	.LVL127:
 1464 0042 10BD     		pop	{r4, pc}
 1465              	.L117:
 1466              		.align	2
 1467              	.L116:
 1468 0044 60F02E40 		.word	1076818016
 1469 0048 02200000 		.word	8194
 1470 004c 78002E40 		.word	1076756600
 1471 0050 10002E40 		.word	1076756496
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 74


 1472              		.cfi_endproc
 1473              	.LFE9:
 1474              		.size	CySysClkEcoStart, .-CySysClkEcoStart
 1475              		.section	.text.CySysLvdEnable,"ax",%progbits
 1476              		.align	2
 1477              		.global	CySysLvdEnable
 1478              		.code	16
 1479              		.thumb_func
 1480              		.type	CySysLvdEnable, %function
 1481              	CySysLvdEnable:
 1482              	.LFB13:
2119:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 1483              		.loc 1 2119 0
 1484              		.cfi_startproc
 1485              	.LVL128:
 1486 0000 38B5     		push	{r3, r4, r5, lr}
 1487              		.cfi_def_cfa_offset 16
 1488              		.cfi_offset 3, -16
 1489              		.cfi_offset 4, -12
 1490              		.cfi_offset 5, -8
 1491              		.cfi_offset 14, -4
 1492 0002 031C     		mov	r3, r0
2121:Generated_Source\PSoC4/CyLib.c **** 
 1493              		.loc 1 2121 0
 1494 0004 0D4C     		ldr	r4, .L119
 1495 0006 2268     		ldr	r2, [r4]
 1496 0008 0225     		mov	r5, #2
 1497 000a AA43     		bic	r2, r5
 1498 000c 2260     		str	r2, [r4]
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1499              		.loc 1 2124 0
 1500 000e 0C4A     		ldr	r2, .L119+4
 1501 0010 1168     		ldr	r1, [r2]
 1502 0012 1E20     		mov	r0, #30
 1503              	.LVL129:
 1504 0014 8143     		bic	r1, r0
2125:Generated_Source\PSoC4/CyLib.c **** 
 1505              		.loc 1 2125 0
 1506 0016 5B00     		lsl	r3, r3, #1
 1507              	.LVL130:
 1508 0018 1840     		and	r0, r3
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1509              		.loc 1 2124 0
 1510 001a 0843     		orr	r0, r1
 1511 001c 1060     		str	r0, [r2]
2128:Generated_Source\PSoC4/CyLib.c **** 
 1512              		.loc 1 2128 0
 1513 001e 1168     		ldr	r1, [r2]
 1514 0020 0123     		mov	r3, #1
 1515 0022 0B43     		orr	r3, r1
 1516 0024 1360     		str	r3, [r2]
2131:Generated_Source\PSoC4/CyLib.c **** 
 1517              		.loc 1 2131 0
 1518 0026 FA20     		mov	r0, #250
 1519 0028 8000     		lsl	r0, r0, #2
 1520 002a FFF7FEFF 		bl	CyDelayUs
 1521              	.LVL131:
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 75


2134:Generated_Source\PSoC4/CyLib.c **** 
 1522              		.loc 1 2134 0
 1523 002e FFF7FEFF 		bl	CySysLvdClearInterrupt
 1524              	.LVL132:
2137:Generated_Source\PSoC4/CyLib.c ****     }
 1525              		.loc 1 2137 0
 1526 0032 2368     		ldr	r3, [r4]
 1527 0034 1D43     		orr	r5, r3
 1528 0036 2560     		str	r5, [r4]
2138:Generated_Source\PSoC4/CyLib.c **** 
 1529              		.loc 1 2138 0
 1530              		@ sp needed
 1531 0038 38BD     		pop	{r3, r4, r5, pc}
 1532              	.L120:
 1533 003a C046     		.align	2
 1534              	.L119:
 1535 003c 08000B40 		.word	1074462728
 1536 0040 18000B40 		.word	1074462744
 1537              		.cfi_endproc
 1538              	.LFE13:
 1539              		.size	CySysLvdEnable, .-CySysLvdEnable
 1540              		.global	__aeabi_uidiv
 1541              		.section	.text.CyDelayFreq,"ax",%progbits
 1542              		.align	2
 1543              		.global	CyDelayFreq
 1544              		.code	16
 1545              		.thumb_func
 1546              		.type	CyDelayFreq, %function
 1547              	CyDelayFreq:
 1548              	.LFB35:
2586:Generated_Source\PSoC4/CyLib.c **** 
2587:Generated_Source\PSoC4/CyLib.c **** 
2588:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2589:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2590:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2591:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2592:Generated_Source\PSoC4/CyLib.c **** *
2593:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2594:Generated_Source\PSoC4/CyLib.c **** *
2595:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2596:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2597:Generated_Source\PSoC4/CyLib.c **** {
 1549              		.loc 1 2597 0
 1550              		.cfi_startproc
 1551              	.LVL133:
 1552 0000 38B5     		push	{r3, r4, r5, lr}
 1553              		.cfi_def_cfa_offset 16
 1554              		.cfi_offset 3, -16
 1555              		.cfi_offset 4, -12
 1556              		.cfi_offset 5, -8
 1557              		.cfi_offset 14, -4
2598:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1558              		.loc 1 2598 0
 1559 0002 0028     		cmp	r0, #0
 1560 0004 02D0     		beq	.L122
2599:Generated_Source\PSoC4/CyLib.c ****     {
2600:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 76


 1561              		.loc 1 2600 0
 1562 0006 0C4B     		ldr	r3, .L124
 1563 0008 1861     		str	r0, [r3, #16]
 1564 000a 02E0     		b	.L123
 1565              	.L122:
2601:Generated_Source\PSoC4/CyLib.c ****     }
2602:Generated_Source\PSoC4/CyLib.c ****     else
2603:Generated_Source\PSoC4/CyLib.c ****     {
2604:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1566              		.loc 1 2604 0
 1567 000c 0B4A     		ldr	r2, .L124+4
 1568 000e 0A4B     		ldr	r3, .L124
 1569 0010 1A61     		str	r2, [r3, #16]
 1570              	.L123:
2605:Generated_Source\PSoC4/CyLib.c ****     }
2606:Generated_Source\PSoC4/CyLib.c **** 
2607:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1571              		.loc 1 2607 0
 1572 0012 094C     		ldr	r4, .L124
 1573 0014 2569     		ldr	r5, [r4, #16]
 1574 0016 0A4B     		ldr	r3, .L124+8
 1575 0018 E818     		add	r0, r5, r3
 1576              	.LVL134:
 1577 001a 0A49     		ldr	r1, .L124+12
 1578 001c FFF7FEFF 		bl	__aeabi_uidiv
 1579              	.LVL135:
 1580 0020 2073     		strb	r0, [r4, #12]
2608:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1581              		.loc 1 2608 0
 1582 0022 094B     		ldr	r3, .L124+16
 1583 0024 E818     		add	r0, r5, r3
 1584 0026 FA21     		mov	r1, #250
 1585 0028 8900     		lsl	r1, r1, #2
 1586 002a FFF7FEFF 		bl	__aeabi_uidiv
 1587              	.LVL136:
 1588 002e A060     		str	r0, [r4, #8]
2609:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1589              		.loc 1 2609 0
 1590 0030 C003     		lsl	r0, r0, #15
 1591 0032 6060     		str	r0, [r4, #4]
2610:Generated_Source\PSoC4/CyLib.c **** }
 1592              		.loc 1 2610 0
 1593              		@ sp needed
 1594 0034 38BD     		pop	{r3, r4, r5, pc}
 1595              	.L125:
 1596 0036 C046     		.align	2
 1597              	.L124:
 1598 0038 00000000 		.word	.LANCHOR0
 1599 003c 001BB700 		.word	12000000
 1600 0040 3F420F00 		.word	999999
 1601 0044 40420F00 		.word	1000000
 1602 0048 E7030000 		.word	999
 1603              		.cfi_endproc
 1604              	.LFE35:
 1605              		.size	CyDelayFreq, .-CyDelayFreq
 1606              		.section	.text.CySysTickStop,"ax",%progbits
 1607              		.align	2
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 77


 1608              		.global	CySysTickStop
 1609              		.code	16
 1610              		.thumb_func
 1611              		.type	CySysTickStop, %function
 1612              	CySysTickStop:
 1613              	.LFB39:
2611:Generated_Source\PSoC4/CyLib.c **** 
2612:Generated_Source\PSoC4/CyLib.c **** 
2613:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2614:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2615:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2616:Generated_Source\PSoC4/CyLib.c **** *
2617:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2618:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2619:Generated_Source\PSoC4/CyLib.c **** *
2620:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2621:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2622:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2623:Generated_Source\PSoC4/CyLib.c **** *
2624:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2625:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2626:Generated_Source\PSoC4/CyLib.c **** *
2627:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2628:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2629:Generated_Source\PSoC4/CyLib.c **** {
2630:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
2631:Generated_Source\PSoC4/CyLib.c ****     {
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
2633:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
2634:Generated_Source\PSoC4/CyLib.c ****     }
2635:Generated_Source\PSoC4/CyLib.c **** 
2636:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
2637:Generated_Source\PSoC4/CyLib.c **** }
2638:Generated_Source\PSoC4/CyLib.c **** 
2639:Generated_Source\PSoC4/CyLib.c **** 
2640:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2641:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2642:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2643:Generated_Source\PSoC4/CyLib.c **** *
2644:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2645:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2646:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2647:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2648:Generated_Source\PSoC4/CyLib.c **** *
2649:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2650:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2651:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2652:Generated_Source\PSoC4/CyLib.c **** *
2653:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2654:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2655:Generated_Source\PSoC4/CyLib.c **** *
2656:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2657:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2658:Generated_Source\PSoC4/CyLib.c **** {
2659:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2660:Generated_Source\PSoC4/CyLib.c **** 
2661:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 78


2662:Generated_Source\PSoC4/CyLib.c ****     {
2663:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
2664:Generated_Source\PSoC4/CyLib.c ****     }
2665:Generated_Source\PSoC4/CyLib.c **** 
2666:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
2667:Generated_Source\PSoC4/CyLib.c **** 
2668:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2669:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2670:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2671:Generated_Source\PSoC4/CyLib.c **** 
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
2673:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
2674:Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
2675:Generated_Source\PSoC4/CyLib.c **** }
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c **** 
2678:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2679:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2680:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2681:Generated_Source\PSoC4/CyLib.c **** *
2682:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2683:Generated_Source\PSoC4/CyLib.c **** *
2684:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2685:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2686:Generated_Source\PSoC4/CyLib.c **** *
2687:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2688:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2689:Generated_Source\PSoC4/CyLib.c **** {
2690:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
2691:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
2692:Generated_Source\PSoC4/CyLib.c **** }
2693:Generated_Source\PSoC4/CyLib.c **** 
2694:Generated_Source\PSoC4/CyLib.c **** 
2695:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2696:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2697:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2698:Generated_Source\PSoC4/CyLib.c **** *
2699:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2700:Generated_Source\PSoC4/CyLib.c **** *
2701:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2702:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2703:Generated_Source\PSoC4/CyLib.c **** *
2704:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2705:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2706:Generated_Source\PSoC4/CyLib.c **** {
 1614              		.loc 1 2706 0
 1615              		.cfi_startproc
2707:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1616              		.loc 1 2707 0
 1617 0000 024A     		ldr	r2, .L127
 1618 0002 1368     		ldr	r3, [r2]
 1619 0004 0121     		mov	r1, #1
 1620 0006 8B43     		bic	r3, r1
 1621 0008 1360     		str	r3, [r2]
2708:Generated_Source\PSoC4/CyLib.c **** }
 1622              		.loc 1 2708 0
 1623              		@ sp needed
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 79


 1624 000a 7047     		bx	lr
 1625              	.L128:
 1626              		.align	2
 1627              	.L127:
 1628 000c 10E000E0 		.word	-536813552
 1629              		.cfi_endproc
 1630              	.LFE39:
 1631              		.size	CySysTickStop, .-CySysTickStop
 1632              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1633              		.align	2
 1634              		.global	CySysTickEnableInterrupt
 1635              		.code	16
 1636              		.thumb_func
 1637              		.type	CySysTickEnableInterrupt, %function
 1638              	CySysTickEnableInterrupt:
 1639              	.LFB40:
2709:Generated_Source\PSoC4/CyLib.c **** 
2710:Generated_Source\PSoC4/CyLib.c **** 
2711:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2712:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2713:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2714:Generated_Source\PSoC4/CyLib.c **** *
2715:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2716:Generated_Source\PSoC4/CyLib.c **** *
2717:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2718:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2719:Generated_Source\PSoC4/CyLib.c **** *
2720:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2721:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2722:Generated_Source\PSoC4/CyLib.c **** {
 1640              		.loc 1 2722 0
 1641              		.cfi_startproc
2723:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1642              		.loc 1 2723 0
 1643 0000 024A     		ldr	r2, .L130
 1644 0002 1168     		ldr	r1, [r2]
 1645 0004 0223     		mov	r3, #2
 1646 0006 0B43     		orr	r3, r1
 1647 0008 1360     		str	r3, [r2]
2724:Generated_Source\PSoC4/CyLib.c **** }
 1648              		.loc 1 2724 0
 1649              		@ sp needed
 1650 000a 7047     		bx	lr
 1651              	.L131:
 1652              		.align	2
 1653              	.L130:
 1654 000c 10E000E0 		.word	-536813552
 1655              		.cfi_endproc
 1656              	.LFE40:
 1657              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1658              		.section	.text.CySysTickEnable,"ax",%progbits
 1659              		.align	2
 1660              		.global	CySysTickEnable
 1661              		.code	16
 1662              		.thumb_func
 1663              		.type	CySysTickEnable, %function
 1664              	CySysTickEnable:
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 80


 1665              	.LFB38:
2689:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1666              		.loc 1 2689 0
 1667              		.cfi_startproc
 1668 0000 08B5     		push	{r3, lr}
 1669              		.cfi_def_cfa_offset 8
 1670              		.cfi_offset 3, -8
 1671              		.cfi_offset 14, -4
2690:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1672              		.loc 1 2690 0
 1673 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1674              	.LVL137:
2691:Generated_Source\PSoC4/CyLib.c **** }
 1675              		.loc 1 2691 0
 1676 0006 034A     		ldr	r2, .L133
 1677 0008 1168     		ldr	r1, [r2]
 1678 000a 0123     		mov	r3, #1
 1679 000c 0B43     		orr	r3, r1
 1680 000e 1360     		str	r3, [r2]
2692:Generated_Source\PSoC4/CyLib.c **** 
 1681              		.loc 1 2692 0
 1682              		@ sp needed
 1683 0010 08BD     		pop	{r3, pc}
 1684              	.L134:
 1685 0012 C046     		.align	2
 1686              	.L133:
 1687 0014 10E000E0 		.word	-536813552
 1688              		.cfi_endproc
 1689              	.LFE38:
 1690              		.size	CySysTickEnable, .-CySysTickEnable
 1691              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1692              		.align	2
 1693              		.global	CySysTickDisableInterrupt
 1694              		.code	16
 1695              		.thumb_func
 1696              		.type	CySysTickDisableInterrupt, %function
 1697              	CySysTickDisableInterrupt:
 1698              	.LFB41:
2725:Generated_Source\PSoC4/CyLib.c **** 
2726:Generated_Source\PSoC4/CyLib.c **** 
2727:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2728:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2729:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2730:Generated_Source\PSoC4/CyLib.c **** *
2731:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2732:Generated_Source\PSoC4/CyLib.c **** *
2733:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2734:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2735:Generated_Source\PSoC4/CyLib.c **** *
2736:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2737:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2738:Generated_Source\PSoC4/CyLib.c **** {
 1699              		.loc 1 2738 0
 1700              		.cfi_startproc
2739:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1701              		.loc 1 2739 0
 1702 0000 024A     		ldr	r2, .L136
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 81


 1703 0002 1368     		ldr	r3, [r2]
 1704 0004 0221     		mov	r1, #2
 1705 0006 8B43     		bic	r3, r1
 1706 0008 1360     		str	r3, [r2]
2740:Generated_Source\PSoC4/CyLib.c **** }
 1707              		.loc 1 2740 0
 1708              		@ sp needed
 1709 000a 7047     		bx	lr
 1710              	.L137:
 1711              		.align	2
 1712              	.L136:
 1713 000c 10E000E0 		.word	-536813552
 1714              		.cfi_endproc
 1715              	.LFE41:
 1716              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1717              		.section	.text.CySysTickSetReload,"ax",%progbits
 1718              		.align	2
 1719              		.global	CySysTickSetReload
 1720              		.code	16
 1721              		.thumb_func
 1722              		.type	CySysTickSetReload, %function
 1723              	CySysTickSetReload:
 1724              	.LFB42:
2741:Generated_Source\PSoC4/CyLib.c **** 
2742:Generated_Source\PSoC4/CyLib.c **** 
2743:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2744:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2745:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2746:Generated_Source\PSoC4/CyLib.c **** *
2747:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2748:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2749:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2750:Generated_Source\PSoC4/CyLib.c **** *
2751:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2752:Generated_Source\PSoC4/CyLib.c **** *
2753:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2754:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2755:Generated_Source\PSoC4/CyLib.c **** {
 1725              		.loc 1 2755 0
 1726              		.cfi_startproc
 1727              	.LVL138:
2756:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1728              		.loc 1 2756 0
 1729 0000 0002     		lsl	r0, r0, #8
 1730              	.LVL139:
 1731 0002 000A     		lsr	r0, r0, #8
 1732 0004 014B     		ldr	r3, .L139
 1733 0006 1860     		str	r0, [r3]
2757:Generated_Source\PSoC4/CyLib.c **** }
 1734              		.loc 1 2757 0
 1735              		@ sp needed
 1736 0008 7047     		bx	lr
 1737              	.L140:
 1738 000a C046     		.align	2
 1739              	.L139:
 1740 000c 14E000E0 		.word	-536813548
 1741              		.cfi_endproc
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 82


 1742              	.LFE42:
 1743              		.size	CySysTickSetReload, .-CySysTickSetReload
 1744              		.section	.text.CySysTickGetReload,"ax",%progbits
 1745              		.align	2
 1746              		.global	CySysTickGetReload
 1747              		.code	16
 1748              		.thumb_func
 1749              		.type	CySysTickGetReload, %function
 1750              	CySysTickGetReload:
 1751              	.LFB43:
2758:Generated_Source\PSoC4/CyLib.c **** 
2759:Generated_Source\PSoC4/CyLib.c **** 
2760:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2761:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2762:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2763:Generated_Source\PSoC4/CyLib.c **** *
2764:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2765:Generated_Source\PSoC4/CyLib.c **** *
2766:Generated_Source\PSoC4/CyLib.c **** * \return
2767:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2768:Generated_Source\PSoC4/CyLib.c **** *
2769:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2770:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2771:Generated_Source\PSoC4/CyLib.c **** {
 1752              		.loc 1 2771 0
 1753              		.cfi_startproc
2772:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1754              		.loc 1 2772 0
 1755 0000 024B     		ldr	r3, .L142
 1756 0002 1868     		ldr	r0, [r3]
 1757 0004 0002     		lsl	r0, r0, #8
 1758 0006 000A     		lsr	r0, r0, #8
2773:Generated_Source\PSoC4/CyLib.c **** }
 1759              		.loc 1 2773 0
 1760              		@ sp needed
 1761 0008 7047     		bx	lr
 1762              	.L143:
 1763 000a C046     		.align	2
 1764              	.L142:
 1765 000c 14E000E0 		.word	-536813548
 1766              		.cfi_endproc
 1767              	.LFE43:
 1768              		.size	CySysTickGetReload, .-CySysTickGetReload
 1769              		.section	.text.CySysTickGetValue,"ax",%progbits
 1770              		.align	2
 1771              		.global	CySysTickGetValue
 1772              		.code	16
 1773              		.thumb_func
 1774              		.type	CySysTickGetValue, %function
 1775              	CySysTickGetValue:
 1776              	.LFB44:
2774:Generated_Source\PSoC4/CyLib.c **** 
2775:Generated_Source\PSoC4/CyLib.c **** 
2776:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2777:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2778:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2779:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 83


2780:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2781:Generated_Source\PSoC4/CyLib.c **** *
2782:Generated_Source\PSoC4/CyLib.c **** * \return
2783:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2784:Generated_Source\PSoC4/CyLib.c **** *
2785:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2786:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2787:Generated_Source\PSoC4/CyLib.c **** {
 1777              		.loc 1 2787 0
 1778              		.cfi_startproc
2788:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1779              		.loc 1 2788 0
 1780 0000 024B     		ldr	r3, .L145
 1781 0002 1868     		ldr	r0, [r3]
 1782 0004 0002     		lsl	r0, r0, #8
 1783 0006 000A     		lsr	r0, r0, #8
2789:Generated_Source\PSoC4/CyLib.c **** }
 1784              		.loc 1 2789 0
 1785              		@ sp needed
 1786 0008 7047     		bx	lr
 1787              	.L146:
 1788 000a C046     		.align	2
 1789              	.L145:
 1790 000c 18E000E0 		.word	-536813544
 1791              		.cfi_endproc
 1792              	.LFE44:
 1793              		.size	CySysTickGetValue, .-CySysTickGetValue
 1794              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 1795              		.align	2
 1796              		.global	CySysTickSetClockSource
 1797              		.code	16
 1798              		.thumb_func
 1799              		.type	CySysTickSetClockSource, %function
 1800              	CySysTickSetClockSource:
 1801              	.LFB45:
2790:Generated_Source\PSoC4/CyLib.c **** 
2791:Generated_Source\PSoC4/CyLib.c **** 
2792:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2793:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2794:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2795:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2796:Generated_Source\PSoC4/CyLib.c ****     *
2797:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2798:Generated_Source\PSoC4/CyLib.c ****     *
2799:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2800:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2801:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2802:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2803:Generated_Source\PSoC4/CyLib.c ****     *
2804:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2805:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2806:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2807:Generated_Source\PSoC4/CyLib.c ****     *
2808:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2809:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2810:Generated_Source\PSoC4/CyLib.c ****     *
2811:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 84


2812:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2813:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2814:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2815:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2816:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2817:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2818:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2819:Generated_Source\PSoC4/CyLib.c ****     {
 1802              		.loc 1 2819 0
 1803              		.cfi_startproc
 1804              	.LVL140:
2820:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 1805              		.loc 1 2820 0
 1806 0000 0128     		cmp	r0, #1
 1807 0002 05D1     		bne	.L148
2821:Generated_Source\PSoC4/CyLib.c ****         {
2822:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 1808              		.loc 1 2822 0
 1809 0004 054A     		ldr	r2, .L150
 1810 0006 1168     		ldr	r1, [r2]
 1811 0008 0423     		mov	r3, #4
 1812 000a 0B43     		orr	r3, r1
 1813 000c 1360     		str	r3, [r2]
 1814 000e 04E0     		b	.L147
 1815              	.L148:
2823:Generated_Source\PSoC4/CyLib.c ****         }
2824:Generated_Source\PSoC4/CyLib.c ****         else
2825:Generated_Source\PSoC4/CyLib.c ****         {
2826:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
 1816              		.loc 1 2826 0
 1817 0010 024A     		ldr	r2, .L150
 1818 0012 1368     		ldr	r3, [r2]
 1819 0014 0421     		mov	r1, #4
 1820 0016 8B43     		bic	r3, r1
 1821 0018 1360     		str	r3, [r2]
 1822              	.L147:
2827:Generated_Source\PSoC4/CyLib.c ****         }
2828:Generated_Source\PSoC4/CyLib.c ****     }
 1823              		.loc 1 2828 0
 1824              		@ sp needed
 1825 001a 7047     		bx	lr
 1826              	.L151:
 1827              		.align	2
 1828              	.L150:
 1829 001c 10E000E0 		.word	-536813552
 1830              		.cfi_endproc
 1831              	.LFE45:
 1832              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 1833              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 1834              		.align	2
 1835              		.global	CySysTickGetClockSource
 1836              		.code	16
 1837              		.thumb_func
 1838              		.type	CySysTickGetClockSource, %function
 1839              	CySysTickGetClockSource:
 1840              	.LFB46:
2829:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 85


2830:Generated_Source\PSoC4/CyLib.c ****     
2831:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2832:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2833:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2834:Generated_Source\PSoC4/CyLib.c ****     *
2835:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2836:Generated_Source\PSoC4/CyLib.c ****     *
2837:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2838:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2839:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2840:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2841:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2842:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2843:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2844:Generated_Source\PSoC4/CyLib.c ****     {
 1841              		.loc 1 2844 0
 1842              		.cfi_startproc
2845:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 1843              		.loc 1 2845 0
 1844 0000 024B     		ldr	r3, .L153
 1845 0002 1868     		ldr	r0, [r3]
 1846 0004 4007     		lsl	r0, r0, #29
 1847 0006 C00F     		lsr	r0, r0, #31
2846:Generated_Source\PSoC4/CyLib.c ****     }
 1848              		.loc 1 2846 0
 1849              		@ sp needed
 1850 0008 7047     		bx	lr
 1851              	.L154:
 1852 000a C046     		.align	2
 1853              	.L153:
 1854 000c 10E000E0 		.word	-536813552
 1855              		.cfi_endproc
 1856              	.LFE46:
 1857              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 1858              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1859              		.align	2
 1860              		.global	CySysTickGetCountFlag
 1861              		.code	16
 1862              		.thumb_func
 1863              		.type	CySysTickGetCountFlag, %function
 1864              	CySysTickGetCountFlag:
 1865              	.LFB47:
2847:Generated_Source\PSoC4/CyLib.c ****     
2848:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2849:Generated_Source\PSoC4/CyLib.c **** 
2850:Generated_Source\PSoC4/CyLib.c **** 
2851:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2852:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2853:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2854:Generated_Source\PSoC4/CyLib.c **** *
2855:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2856:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2857:Generated_Source\PSoC4/CyLib.c **** *
2858:Generated_Source\PSoC4/CyLib.c **** * \return
2859:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2860:Generated_Source\PSoC4/CyLib.c **** *
2861:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 86


2862:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2863:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2864:Generated_Source\PSoC4/CyLib.c **** *
2865:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2866:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2867:Generated_Source\PSoC4/CyLib.c **** {
 1866              		.loc 1 2867 0
 1867              		.cfi_startproc
2868:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1868              		.loc 1 2868 0
 1869 0000 024B     		ldr	r3, .L156
 1870 0002 1868     		ldr	r0, [r3]
 1871 0004 C003     		lsl	r0, r0, #15
 1872 0006 C00F     		lsr	r0, r0, #31
2869:Generated_Source\PSoC4/CyLib.c **** }
 1873              		.loc 1 2869 0
 1874              		@ sp needed
 1875 0008 7047     		bx	lr
 1876              	.L157:
 1877 000a C046     		.align	2
 1878              	.L156:
 1879 000c 10E000E0 		.word	-536813552
 1880              		.cfi_endproc
 1881              	.LFE47:
 1882              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1883              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1884              		.align	2
 1885              		.code	16
 1886              		.thumb_func
 1887              		.type	CySysTickServiceCallbacks, %function
 1888              	CySysTickServiceCallbacks:
 1889              	.LFB51:
2870:Generated_Source\PSoC4/CyLib.c **** 
2871:Generated_Source\PSoC4/CyLib.c **** 
2872:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2873:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2874:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2875:Generated_Source\PSoC4/CyLib.c **** *
2876:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2877:Generated_Source\PSoC4/CyLib.c **** *
2878:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2879:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2880:Generated_Source\PSoC4/CyLib.c **** {
2881:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
2882:Generated_Source\PSoC4/CyLib.c **** }
2883:Generated_Source\PSoC4/CyLib.c **** 
2884:Generated_Source\PSoC4/CyLib.c **** 
2885:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2886:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2887:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2888:Generated_Source\PSoC4/CyLib.c **** *
2889:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2890:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2891:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2892:Generated_Source\PSoC4/CyLib.c **** *
2893:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2894:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 87


2895:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2896:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2897:Generated_Source\PSoC4/CyLib.c **** *  functions.
2898:Generated_Source\PSoC4/CyLib.c **** *
2899:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
2900:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2901:Generated_Source\PSoC4/CyLib.c **** *
2902:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2903:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2904:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2905:Generated_Source\PSoC4/CyLib.c **** *
2906:Generated_Source\PSoC4/CyLib.c **** * \return
2907:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2908:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2909:Generated_Source\PSoC4/CyLib.c **** *
2910:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2911:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2912:Generated_Source\PSoC4/CyLib.c **** *
2913:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2914:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2915:Generated_Source\PSoC4/CyLib.c **** {
2916:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2917:Generated_Source\PSoC4/CyLib.c **** 
2918:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
2919:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
2920:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
2921:Generated_Source\PSoC4/CyLib.c **** }
2922:Generated_Source\PSoC4/CyLib.c **** 
2923:Generated_Source\PSoC4/CyLib.c **** 
2924:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2925:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2926:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2927:Generated_Source\PSoC4/CyLib.c **** *
2928:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2929:Generated_Source\PSoC4/CyLib.c **** *
2930:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
2931:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2932:Generated_Source\PSoC4/CyLib.c **** *
2933:Generated_Source\PSoC4/CyLib.c **** * \return
2934:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2935:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2936:Generated_Source\PSoC4/CyLib.c **** *
2937:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2938:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2939:Generated_Source\PSoC4/CyLib.c **** {
2940:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
2941:Generated_Source\PSoC4/CyLib.c **** }
2942:Generated_Source\PSoC4/CyLib.c **** 
2943:Generated_Source\PSoC4/CyLib.c **** 
2944:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2945:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2946:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2947:Generated_Source\PSoC4/CyLib.c **** *
2948:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
2949:Generated_Source\PSoC4/CyLib.c **** *
2950:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2951:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 88


2952:Generated_Source\PSoC4/CyLib.c **** {
 1890              		.loc 1 2952 0
 1891              		.cfi_startproc
 1892 0000 10B5     		push	{r4, lr}
 1893              		.cfi_def_cfa_offset 8
 1894              		.cfi_offset 4, -8
 1895              		.cfi_offset 14, -4
2953:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2954:Generated_Source\PSoC4/CyLib.c **** 
2955:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
2956:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 1896              		.loc 1 2956 0
 1897 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 1898              	.LVL141:
 1899 0006 0128     		cmp	r0, #1
 1900 0008 0BD1     		bne	.L158
 1901 000a 07E0     		b	.L163
 1902              	.LVL142:
 1903              	.L162:
2957:Generated_Source\PSoC4/CyLib.c ****     {
2958:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2959:Generated_Source\PSoC4/CyLib.c ****         {
2960:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 1904              		.loc 1 2960 0
 1905 000c A300     		lsl	r3, r4, #2
 1906 000e 054A     		ldr	r2, .L164
 1907 0010 9B58     		ldr	r3, [r3, r2]
 1908 0012 002B     		cmp	r3, #0
 1909 0014 00D0     		beq	.L161
2961:Generated_Source\PSoC4/CyLib.c ****             {
2962:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 1910              		.loc 1 2962 0
 1911 0016 9847     		blx	r3
 1912              	.LVL143:
 1913              	.L161:
2958:Generated_Source\PSoC4/CyLib.c ****         {
 1914              		.loc 1 2958 0 discriminator 2
 1915 0018 0134     		add	r4, r4, #1
 1916              	.LVL144:
 1917 001a 00E0     		b	.L159
 1918              	.LVL145:
 1919              	.L163:
 1920 001c 0024     		mov	r4, #0
 1921              	.L159:
 1922              	.LVL146:
2958:Generated_Source\PSoC4/CyLib.c ****         {
 1923              		.loc 1 2958 0 is_stmt 0 discriminator 1
 1924 001e 042C     		cmp	r4, #4
 1925 0020 F4D9     		bls	.L162
 1926              	.LVL147:
 1927              	.L158:
2963:Generated_Source\PSoC4/CyLib.c ****             }
2964:Generated_Source\PSoC4/CyLib.c ****         }
2965:Generated_Source\PSoC4/CyLib.c ****     }
2966:Generated_Source\PSoC4/CyLib.c **** }
 1928              		.loc 1 2966 0 is_stmt 1
 1929              		@ sp needed
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 89


 1930 0022 10BD     		pop	{r4, pc}
 1931              	.L165:
 1932              		.align	2
 1933              	.L164:
 1934 0024 00000000 		.word	.LANCHOR2
 1935              		.cfi_endproc
 1936              	.LFE51:
 1937              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 1938              		.section	.text.CySysTickClear,"ax",%progbits
 1939              		.align	2
 1940              		.global	CySysTickClear
 1941              		.code	16
 1942              		.thumb_func
 1943              		.type	CySysTickClear, %function
 1944              	CySysTickClear:
 1945              	.LFB48:
2880:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1946              		.loc 1 2880 0
 1947              		.cfi_startproc
2881:Generated_Source\PSoC4/CyLib.c **** }
 1948              		.loc 1 2881 0
 1949 0000 0022     		mov	r2, #0
 1950 0002 014B     		ldr	r3, .L167
 1951 0004 1A60     		str	r2, [r3]
2882:Generated_Source\PSoC4/CyLib.c **** 
 1952              		.loc 1 2882 0
 1953              		@ sp needed
 1954 0006 7047     		bx	lr
 1955              	.L168:
 1956              		.align	2
 1957              	.L167:
 1958 0008 18E000E0 		.word	-536813544
 1959              		.cfi_endproc
 1960              	.LFE48:
 1961              		.size	CySysTickClear, .-CySysTickClear
 1962              		.section	.text.CySysTickInit,"ax",%progbits
 1963              		.align	2
 1964              		.global	CySysTickInit
 1965              		.code	16
 1966              		.thumb_func
 1967              		.type	CySysTickInit, %function
 1968              	CySysTickInit:
 1969              	.LFB37:
2658:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
 1970              		.loc 1 2658 0
 1971              		.cfi_startproc
 1972 0000 08B5     		push	{r3, lr}
 1973              		.cfi_def_cfa_offset 8
 1974              		.cfi_offset 3, -8
 1975              		.cfi_offset 14, -4
 1976              	.LVL148:
2661:Generated_Source\PSoC4/CyLib.c ****     {
 1977              		.loc 1 2661 0
 1978 0002 0023     		mov	r3, #0
 1979 0004 04E0     		b	.L170
 1980              	.LVL149:
 1981              	.L171:
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 90


2663:Generated_Source\PSoC4/CyLib.c ****     }
 1982              		.loc 1 2663 0 discriminator 3
 1983 0006 9900     		lsl	r1, r3, #2
 1984 0008 0020     		mov	r0, #0
 1985 000a 0D4A     		ldr	r2, .L172
 1986 000c 8850     		str	r0, [r1, r2]
2661:Generated_Source\PSoC4/CyLib.c ****     {
 1987              		.loc 1 2661 0 discriminator 3
 1988 000e 0133     		add	r3, r3, #1
 1989              	.LVL150:
 1990              	.L170:
2661:Generated_Source\PSoC4/CyLib.c ****     {
 1991              		.loc 1 2661 0 is_stmt 0 discriminator 1
 1992 0010 042B     		cmp	r3, #4
 1993 0012 F8D9     		bls	.L171
2666:Generated_Source\PSoC4/CyLib.c **** 
 1994              		.loc 1 2666 0 is_stmt 1
 1995 0014 0F20     		mov	r0, #15
 1996 0016 0B49     		ldr	r1, .L172+4
 1997 0018 FFF7FEFF 		bl	CyIntSetSysVector
 1998              	.LVL151:
2669:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
 1999              		.loc 1 2669 0
 2000 001c 0120     		mov	r0, #1
 2001 001e FFF7FEFF 		bl	CySysTickSetClockSource
 2002              	.LVL152:
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 2003              		.loc 1 2672 0
 2004 0022 094B     		ldr	r3, .L172+8
 2005 0024 1869     		ldr	r0, [r3, #16]
 2006 0026 FA21     		mov	r1, #250
 2007 0028 8900     		lsl	r1, r1, #2
 2008 002a FFF7FEFF 		bl	__aeabi_uidiv
 2009              	.LVL153:
 2010 002e FFF7FEFF 		bl	CySysTickSetReload
 2011              	.LVL154:
2673:Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
 2012              		.loc 1 2673 0
 2013 0032 FFF7FEFF 		bl	CySysTickClear
 2014              	.LVL155:
2674:Generated_Source\PSoC4/CyLib.c **** }
 2015              		.loc 1 2674 0
 2016 0036 0F20     		mov	r0, #15
 2017 0038 FFF7FEFF 		bl	CyIntEnable
 2018              	.LVL156:
2675:Generated_Source\PSoC4/CyLib.c **** 
 2019              		.loc 1 2675 0
 2020              		@ sp needed
 2021 003c 08BD     		pop	{r3, pc}
 2022              	.L173:
 2023 003e C046     		.align	2
 2024              	.L172:
 2025 0040 00000000 		.word	.LANCHOR2
 2026 0044 00000000 		.word	CySysTickServiceCallbacks
 2027 0048 00000000 		.word	.LANCHOR0
 2028              		.cfi_endproc
 2029              	.LFE37:
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 91


 2030              		.size	CySysTickInit, .-CySysTickInit
 2031              		.section	.text.CySysTickStart,"ax",%progbits
 2032              		.align	2
 2033              		.global	CySysTickStart
 2034              		.code	16
 2035              		.thumb_func
 2036              		.type	CySysTickStart, %function
 2037              	CySysTickStart:
 2038              	.LFB36:
2629:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 2039              		.loc 1 2629 0
 2040              		.cfi_startproc
 2041 0000 08B5     		push	{r3, lr}
 2042              		.cfi_def_cfa_offset 8
 2043              		.cfi_offset 3, -8
 2044              		.cfi_offset 14, -4
2630:Generated_Source\PSoC4/CyLib.c ****     {
 2045              		.loc 1 2630 0
 2046 0002 064B     		ldr	r3, .L176
 2047 0004 5B69     		ldr	r3, [r3, #20]
 2048 0006 002B     		cmp	r3, #0
 2049 0008 04D1     		bne	.L175
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 2050              		.loc 1 2632 0
 2051 000a FFF7FEFF 		bl	CySysTickInit
 2052              	.LVL157:
2633:Generated_Source\PSoC4/CyLib.c ****     }
 2053              		.loc 1 2633 0
 2054 000e 0122     		mov	r2, #1
 2055 0010 024B     		ldr	r3, .L176
 2056 0012 5A61     		str	r2, [r3, #20]
 2057              	.L175:
2636:Generated_Source\PSoC4/CyLib.c **** }
 2058              		.loc 1 2636 0
 2059 0014 FFF7FEFF 		bl	CySysTickEnable
 2060              	.LVL158:
2637:Generated_Source\PSoC4/CyLib.c **** 
 2061              		.loc 1 2637 0
 2062              		@ sp needed
 2063 0018 08BD     		pop	{r3, pc}
 2064              	.L177:
 2065 001a C046     		.align	2
 2066              	.L176:
 2067 001c 00000000 		.word	.LANCHOR2
 2068              		.cfi_endproc
 2069              	.LFE36:
 2070              		.size	CySysTickStart, .-CySysTickStart
 2071              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2072              		.align	2
 2073              		.global	CySysTickSetCallback
 2074              		.code	16
 2075              		.thumb_func
 2076              		.type	CySysTickSetCallback, %function
 2077              	CySysTickSetCallback:
 2078              	.LFB49:
2915:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 2079              		.loc 1 2915 0
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 92


 2080              		.cfi_startproc
 2081              	.LVL159:
2918:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2082              		.loc 1 2918 0
 2083 0000 024A     		ldr	r2, .L179
 2084 0002 8300     		lsl	r3, r0, #2
 2085 0004 9858     		ldr	r0, [r3, r2]
 2086              	.LVL160:
2919:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2087              		.loc 1 2919 0
 2088 0006 9950     		str	r1, [r3, r2]
2921:Generated_Source\PSoC4/CyLib.c **** 
 2089              		.loc 1 2921 0
 2090              		@ sp needed
 2091 0008 7047     		bx	lr
 2092              	.L180:
 2093 000a C046     		.align	2
 2094              	.L179:
 2095 000c 00000000 		.word	.LANCHOR2
 2096              		.cfi_endproc
 2097              	.LFE49:
 2098              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2099              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2100              		.align	2
 2101              		.global	CySysTickGetCallback
 2102              		.code	16
 2103              		.thumb_func
 2104              		.type	CySysTickGetCallback, %function
 2105              	CySysTickGetCallback:
 2106              	.LFB50:
2939:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2107              		.loc 1 2939 0
 2108              		.cfi_startproc
 2109              	.LVL161:
2940:Generated_Source\PSoC4/CyLib.c **** }
 2110              		.loc 1 2940 0
 2111 0000 8000     		lsl	r0, r0, #2
 2112              	.LVL162:
 2113 0002 014B     		ldr	r3, .L182
 2114 0004 C058     		ldr	r0, [r0, r3]
2941:Generated_Source\PSoC4/CyLib.c **** 
 2115              		.loc 1 2941 0
 2116              		@ sp needed
 2117 0006 7047     		bx	lr
 2118              	.L183:
 2119              		.align	2
 2120              	.L182:
 2121 0008 00000000 		.word	.LANCHOR2
 2122              		.cfi_endproc
 2123              	.LFE50:
 2124              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2125              		.section	.text.CyGetUniqueId,"ax",%progbits
 2126              		.align	2
 2127              		.global	CyGetUniqueId
 2128              		.code	16
 2129              		.thumb_func
 2130              		.type	CyGetUniqueId, %function
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 93


 2131              	CyGetUniqueId:
 2132              	.LFB52:
2967:Generated_Source\PSoC4/CyLib.c **** 
2968:Generated_Source\PSoC4/CyLib.c **** 
2969:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2970:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
2971:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2972:Generated_Source\PSoC4/CyLib.c **** *
2973:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2974:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
2975:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2976:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
2977:Generated_Source\PSoC4/CyLib.c **** *
2978:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
2979:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2980:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
2981:Generated_Source\PSoC4/CyLib.c **** *
2982:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2983:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
2984:Generated_Source\PSoC4/CyLib.c **** {
 2133              		.loc 1 2984 0
 2134              		.cfi_startproc
 2135              	.LVL163:
2985:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2136              		.loc 1 2986 0
 2137 0000 134B     		ldr	r3, .L185
 2138 0002 1B78     		ldrb	r3, [r3]
 2139 0004 DAB2     		uxtb	r2, r3
 2140 0006 0260     		str	r2, [r0]
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2141              		.loc 1 2987 0
 2142 0008 124B     		ldr	r3, .L185+4
 2143 000a 1B78     		ldrb	r3, [r3]
 2144 000c 1B02     		lsl	r3, r3, #8
 2145 000e 1343     		orr	r3, r2
 2146 0010 0360     		str	r3, [r0]
2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 2147              		.loc 1 2988 0
 2148 0012 114A     		ldr	r2, .L185+8
 2149 0014 1278     		ldrb	r2, [r2]
 2150 0016 1204     		lsl	r2, r2, #16
 2151 0018 1343     		orr	r3, r2
 2152 001a 0360     		str	r3, [r0]
2989:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2153              		.loc 1 2989 0
 2154 001c 0F4A     		ldr	r2, .L185+12
 2155 001e 1278     		ldrb	r2, [r2]
 2156 0020 1206     		lsl	r2, r2, #24
 2157 0022 1343     		orr	r3, r2
 2158 0024 0360     		str	r3, [r0]
2990:Generated_Source\PSoC4/CyLib.c **** 
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 2159              		.loc 1 2991 0
 2160 0026 0E4B     		ldr	r3, .L185+16
 2161 0028 1B78     		ldrb	r3, [r3]
 2162 002a DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 94


 2163 002c 4260     		str	r2, [r0, #4]
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2164              		.loc 1 2992 0
 2165 002e 0D4B     		ldr	r3, .L185+20
 2166 0030 1B78     		ldrb	r3, [r3]
 2167 0032 1B02     		lsl	r3, r3, #8
 2168 0034 1343     		orr	r3, r2
 2169 0036 4360     		str	r3, [r0, #4]
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2170              		.loc 1 2993 0
 2171 0038 0B4A     		ldr	r2, .L185+24
 2172 003a 1278     		ldrb	r2, [r2]
 2173 003c 1204     		lsl	r2, r2, #16
 2174 003e 1343     		orr	r3, r2
 2175 0040 4360     		str	r3, [r0, #4]
2994:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2176              		.loc 1 2994 0
 2177 0042 0A4A     		ldr	r2, .L185+28
 2178 0044 1278     		ldrb	r2, [r2]
 2179 0046 1206     		lsl	r2, r2, #24
 2180 0048 1343     		orr	r3, r2
 2181 004a 4360     		str	r3, [r0, #4]
2995:Generated_Source\PSoC4/CyLib.c **** #else
2996:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
2997:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
2998:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
2999:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3000:Generated_Source\PSoC4/CyLib.c **** 
3001:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3002:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3003:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3004:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3005:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3006:Generated_Source\PSoC4/CyLib.c **** }
 2182              		.loc 1 3006 0
 2183              		@ sp needed
 2184 004c 7047     		bx	lr
 2185              	.L186:
 2186 004e C046     		.align	2
 2187              	.L185:
 2188 0050 78F2FF0F 		.word	268431992
 2189 0054 79F2FF0F 		.word	268431993
 2190 0058 7AF2FF0F 		.word	268431994
 2191 005c 7BF2FF0F 		.word	268431995
 2192 0060 7CF2FF0F 		.word	268431996
 2193 0064 7DF2FF0F 		.word	268431997
 2194 0068 7EF2FF0F 		.word	268431998
 2195 006c 7FF2FF0F 		.word	268431999
 2196              		.cfi_endproc
 2197              	.LFE52:
 2198              		.size	CyGetUniqueId, .-CyGetUniqueId
 2199              		.section	.text.CySysSetRamAccessArbPriority,"ax",%progbits
 2200              		.align	2
 2201              		.global	CySysSetRamAccessArbPriority
 2202              		.code	16
 2203              		.thumb_func
 2204              		.type	CySysSetRamAccessArbPriority, %function
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 95


 2205              	CySysSetRamAccessArbPriority:
 2206              	.LFB53:
3007:Generated_Source\PSoC4/CyLib.c **** 
3008:Generated_Source\PSoC4/CyLib.c **** 
3009:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_DMAC_PRESENT)
3010:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3011:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetRamAccessArbPriority
3012:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3013:Generated_Source\PSoC4/CyLib.c ****     *
3014:Generated_Source\PSoC4/CyLib.c ****     *  Sets RAM access priority between CPU and DMA. The RAM_CTL register is
3015:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3016:Generated_Source\PSoC4/CyLib.c ****     *  details.
3017:Generated_Source\PSoC4/CyLib.c ****     *
3018:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3019:Generated_Source\PSoC4/CyLib.c ****     *
3020:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3021:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3022:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3023:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3024:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3025:Generated_Source\PSoC4/CyLib.c ****     *
3026:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3027:Generated_Source\PSoC4/CyLib.c ****     void CySysSetRamAccessArbPriority(uint32 source)
3028:Generated_Source\PSoC4/CyLib.c ****     {
 2207              		.loc 1 3028 0
 2208              		.cfi_startproc
 2209              	.LVL164:
3029:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3030:Generated_Source\PSoC4/CyLib.c **** 
3031:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_RAM_CTL_REG & ~CY_SYS_CPUSS_RAM_CTL_ARB_MASK;
 2210              		.loc 1 3031 0
 2211 0000 0549     		ldr	r1, .L188
 2212 0002 0A68     		ldr	r2, [r1]
 2213 0004 054B     		ldr	r3, .L188+4
 2214 0006 1340     		and	r3, r2
 2215              	.LVL165:
3032:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
 2216              		.loc 1 3032 0
 2217 0008 4004     		lsl	r0, r0, #17
 2218              	.LVL166:
 2219 000a C022     		mov	r2, #192
 2220 000c D202     		lsl	r2, r2, #11
 2221 000e 1040     		and	r0, r2
 2222 0010 1843     		orr	r0, r3
 2223              	.LVL167:
3033:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_RAM_CTL_REG = regTmp;
 2224              		.loc 1 3033 0
 2225 0012 0860     		str	r0, [r1]
3034:Generated_Source\PSoC4/CyLib.c ****     }
 2226              		.loc 1 3034 0
 2227              		@ sp needed
 2228 0014 7047     		bx	lr
 2229              	.L189:
 2230 0016 C046     		.align	2
 2231              	.L188:
 2232 0018 38001040 		.word	1074790456
 2233 001c FFFFF9FF 		.word	-393217
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 96


 2234              		.cfi_endproc
 2235              	.LFE53:
 2236              		.size	CySysSetRamAccessArbPriority, .-CySysSetRamAccessArbPriority
 2237              		.section	.text.CySysSetFlashAccessArbPriority,"ax",%progbits
 2238              		.align	2
 2239              		.global	CySysSetFlashAccessArbPriority
 2240              		.code	16
 2241              		.thumb_func
 2242              		.type	CySysSetFlashAccessArbPriority, %function
 2243              	CySysSetFlashAccessArbPriority:
 2244              	.LFB54:
3035:Generated_Source\PSoC4/CyLib.c **** 
3036:Generated_Source\PSoC4/CyLib.c **** 
3037:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3038:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetFlashAccessArbPriority
3039:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3040:Generated_Source\PSoC4/CyLib.c ****     *
3041:Generated_Source\PSoC4/CyLib.c ****     *  Sets flash access priority between CPU and DMA. The FLASH_CTL register is
3042:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3043:Generated_Source\PSoC4/CyLib.c ****     *  details.
3044:Generated_Source\PSoC4/CyLib.c ****     *
3045:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3046:Generated_Source\PSoC4/CyLib.c ****     *
3047:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3048:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3049:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3050:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3051:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3052:Generated_Source\PSoC4/CyLib.c ****     *
3053:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3054:Generated_Source\PSoC4/CyLib.c ****     void CySysSetFlashAccessArbPriority(uint32 source)
3055:Generated_Source\PSoC4/CyLib.c ****     {
 2245              		.loc 1 3055 0
 2246              		.cfi_startproc
 2247              	.LVL168:
3056:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3057:Generated_Source\PSoC4/CyLib.c **** 
3058:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_FLASH_CTL_REG & ~CY_SYS_CPUSS_FLASH_CTL_ARB_MASK;
 2248              		.loc 1 3058 0
 2249 0000 0549     		ldr	r1, .L191
 2250 0002 0A68     		ldr	r2, [r1]
 2251 0004 054B     		ldr	r3, .L191+4
 2252 0006 1340     		and	r3, r2
 2253              	.LVL169:
3059:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 2254              		.loc 1 3059 0
 2255 0008 4004     		lsl	r0, r0, #17
 2256              	.LVL170:
 2257 000a C022     		mov	r2, #192
 2258 000c D202     		lsl	r2, r2, #11
 2259 000e 1040     		and	r0, r2
 2260 0010 1843     		orr	r0, r3
 2261              	.LVL171:
3060:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_FLASH_CTL_REG = regTmp;
 2262              		.loc 1 3060 0
 2263 0012 0860     		str	r0, [r1]
3061:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 97


 2264              		.loc 1 3061 0
 2265              		@ sp needed
 2266 0014 7047     		bx	lr
 2267              	.L192:
 2268 0016 C046     		.align	2
 2269              	.L191:
 2270 0018 30001040 		.word	1074790448
 2271 001c FFFFF9FF 		.word	-393217
 2272              		.cfi_endproc
 2273              	.LFE54:
 2274              		.size	CySysSetFlashAccessArbPriority, .-CySysSetFlashAccessArbPriority
 2275              		.section	.text.CySysSetDmacAccessArbPriority,"ax",%progbits
 2276              		.align	2
 2277              		.global	CySysSetDmacAccessArbPriority
 2278              		.code	16
 2279              		.thumb_func
 2280              		.type	CySysSetDmacAccessArbPriority, %function
 2281              	CySysSetDmacAccessArbPriority:
 2282              	.LFB55:
3062:Generated_Source\PSoC4/CyLib.c **** 
3063:Generated_Source\PSoC4/CyLib.c **** 
3064:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3065:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetDmacAccessArbPriority
3066:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3067:Generated_Source\PSoC4/CyLib.c ****     *
3068:Generated_Source\PSoC4/CyLib.c ****     *  Sets DMAC slave interface access priority between CPU and DMA. The DMAC_CTL
3069:Generated_Source\PSoC4/CyLib.c ****     *  register is configured to set the priority. Please refer to the device TRM
3070:Generated_Source\PSoC4/CyLib.c ****     *  for more details.
3071:Generated_Source\PSoC4/CyLib.c ****     *
3072:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3073:Generated_Source\PSoC4/CyLib.c ****     *
3074:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3075:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3076:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3077:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3078:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3079:Generated_Source\PSoC4/CyLib.c ****     *
3080:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3081:Generated_Source\PSoC4/CyLib.c ****     void CySysSetDmacAccessArbPriority(uint32 source)
3082:Generated_Source\PSoC4/CyLib.c ****     {
 2283              		.loc 1 3082 0
 2284              		.cfi_startproc
 2285              	.LVL172:
3083:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3084:Generated_Source\PSoC4/CyLib.c **** 
3085:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_DMAC_CTL_REG & ~CY_SYS_CPUSS_DMAC_CTL_ARB_MASK;
 2286              		.loc 1 3085 0
 2287 0000 0549     		ldr	r1, .L194
 2288 0002 0A68     		ldr	r2, [r1]
 2289 0004 054B     		ldr	r3, .L194+4
 2290 0006 1340     		and	r3, r2
 2291              	.LVL173:
3086:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 2292              		.loc 1 3086 0
 2293 0008 4004     		lsl	r0, r0, #17
 2294              	.LVL174:
 2295 000a C022     		mov	r2, #192
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 98


 2296 000c D202     		lsl	r2, r2, #11
 2297 000e 1040     		and	r0, r2
 2298 0010 1843     		orr	r0, r3
 2299              	.LVL175:
3087:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_DMAC_CTL_REG = regTmp;
 2300              		.loc 1 3087 0
 2301 0012 0860     		str	r0, [r1]
3088:Generated_Source\PSoC4/CyLib.c ****     }
 2302              		.loc 1 3088 0
 2303              		@ sp needed
 2304 0014 7047     		bx	lr
 2305              	.L195:
 2306 0016 C046     		.align	2
 2307              	.L194:
 2308 0018 3C001040 		.word	1074790460
 2309 001c FFFFF9FF 		.word	-393217
 2310              		.cfi_endproc
 2311              	.LFE55:
 2312              		.size	CySysSetDmacAccessArbPriority, .-CySysSetDmacAccessArbPriority
 2313              		.section	.text.CySysSetPeripheralAccessArbPriority,"ax",%progbits
 2314              		.align	2
 2315              		.global	CySysSetPeripheralAccessArbPriority
 2316              		.code	16
 2317              		.thumb_func
 2318              		.type	CySysSetPeripheralAccessArbPriority, %function
 2319              	CySysSetPeripheralAccessArbPriority:
 2320              	.LFB56:
3089:Generated_Source\PSoC4/CyLib.c **** 
3090:Generated_Source\PSoC4/CyLib.c **** 
3091:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3092:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetPeripheralAccessArbPriority
3093:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3094:Generated_Source\PSoC4/CyLib.c ****     *
3095:Generated_Source\PSoC4/CyLib.c ****     *  Sets slave peripheral interface access priority between CPU and DMA.
3096:Generated_Source\PSoC4/CyLib.c ****     *  The SL_CTL register is configured to set the priority. Please refer to the
3097:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3098:Generated_Source\PSoC4/CyLib.c ****     *
3099:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3100:Generated_Source\PSoC4/CyLib.c ****     *
3101:Generated_Source\PSoC4/CyLib.c ****     *  \param  interfaceNumber: the slave interface number. Please refer to the
3102:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3103:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3104:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3105:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3106:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3107:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3108:Generated_Source\PSoC4/CyLib.c ****     *
3109:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3110:Generated_Source\PSoC4/CyLib.c ****     void CySysSetPeripheralAccessArbPriority(uint32 interfaceNumber, uint32 source)
3111:Generated_Source\PSoC4/CyLib.c ****     {
 2321              		.loc 1 3111 0
 2322              		.cfi_startproc
 2323              	.LVL176:
 2324 0000 08B5     		push	{r3, lr}
 2325              		.cfi_def_cfa_offset 8
 2326              		.cfi_offset 3, -8
 2327              		.cfi_offset 14, -4
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 99


3112:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3113:Generated_Source\PSoC4/CyLib.c **** 
3114:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 0u)
 2328              		.loc 1 3114 0
 2329 0002 0028     		cmp	r0, #0
 2330 0004 0AD1     		bne	.L197
3115:Generated_Source\PSoC4/CyLib.c ****         {
3116:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL0_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2331              		.loc 1 3116 0
 2332 0006 1448     		ldr	r0, .L201
 2333              	.LVL177:
 2334 0008 0268     		ldr	r2, [r0]
 2335 000a 144B     		ldr	r3, .L201+4
 2336 000c 1340     		and	r3, r2
 2337              	.LVL178:
3117:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2338              		.loc 1 3117 0
 2339 000e 4904     		lsl	r1, r1, #17
 2340              	.LVL179:
 2341 0010 C022     		mov	r2, #192
 2342 0012 D202     		lsl	r2, r2, #11
 2343 0014 1140     		and	r1, r2
 2344 0016 1943     		orr	r1, r3
 2345              	.LVL180:
3118:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL0_REG = regTmp;
 2346              		.loc 1 3118 0
 2347 0018 0160     		str	r1, [r0]
 2348 001a 1CE0     		b	.L196
 2349              	.LVL181:
 2350              	.L197:
3119:Generated_Source\PSoC4/CyLib.c ****         } else
3120:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 2)
3121:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 1u)
 2351              		.loc 1 3121 0
 2352 001c 0128     		cmp	r0, #1
 2353 001e 0AD1     		bne	.L199
3122:Generated_Source\PSoC4/CyLib.c ****         {
3123:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL1_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2354              		.loc 1 3123 0
 2355 0020 0F48     		ldr	r0, .L201+8
 2356              	.LVL182:
 2357 0022 0268     		ldr	r2, [r0]
 2358 0024 0D4B     		ldr	r3, .L201+4
 2359 0026 1340     		and	r3, r2
 2360              	.LVL183:
3124:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2361              		.loc 1 3124 0
 2362 0028 4904     		lsl	r1, r1, #17
 2363              	.LVL184:
 2364 002a C022     		mov	r2, #192
 2365 002c D202     		lsl	r2, r2, #11
 2366 002e 1140     		and	r1, r2
 2367 0030 1943     		orr	r1, r3
 2368              	.LVL185:
3125:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL1_REG = regTmp;
 2369              		.loc 1 3125 0
 2370 0032 0160     		str	r1, [r0]
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 100


 2371 0034 0FE0     		b	.L196
 2372              	.LVL186:
 2373              	.L199:
3126:Generated_Source\PSoC4/CyLib.c ****         } else
3127:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3128:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 3)
3129:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 2u)
 2374              		.loc 1 3129 0
 2375 0036 0228     		cmp	r0, #2
 2376 0038 0AD1     		bne	.L200
3130:Generated_Source\PSoC4/CyLib.c ****         {
3131:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL2_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2377              		.loc 1 3131 0
 2378 003a 0A48     		ldr	r0, .L201+12
 2379              	.LVL187:
 2380 003c 0268     		ldr	r2, [r0]
 2381 003e 074B     		ldr	r3, .L201+4
 2382 0040 1340     		and	r3, r2
 2383              	.LVL188:
3132:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2384              		.loc 1 3132 0
 2385 0042 4904     		lsl	r1, r1, #17
 2386              	.LVL189:
 2387 0044 C022     		mov	r2, #192
 2388 0046 D202     		lsl	r2, r2, #11
 2389 0048 1140     		and	r1, r2
 2390 004a 1943     		orr	r1, r3
 2391              	.LVL190:
3133:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
 2392              		.loc 1 3133 0
 2393 004c 0160     		str	r1, [r0]
 2394 004e 02E0     		b	.L196
 2395              	.LVL191:
 2396              	.L200:
3134:Generated_Source\PSoC4/CyLib.c ****         } else
3135:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3136:Generated_Source\PSoC4/CyLib.c ****         {
3137:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if interface is invalid */
3138:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 2397              		.loc 1 3138 0 discriminator 1
 2398 0050 0020     		mov	r0, #0
 2399              	.LVL192:
 2400 0052 FFF7FEFF 		bl	CyHalt
 2401              	.LVL193:
 2402              	.L196:
3139:Generated_Source\PSoC4/CyLib.c ****         }
3140:Generated_Source\PSoC4/CyLib.c ****     }
 2403              		.loc 1 3140 0
 2404              		@ sp needed
 2405 0056 08BD     		pop	{r3, pc}
 2406              	.L202:
 2407              		.align	2
 2408              	.L201:
 2409 0058 00011040 		.word	1074790656
 2410 005c FFFFF9FF 		.word	-393217
 2411 0060 04011040 		.word	1074790660
 2412 0064 08011040 		.word	1074790664
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 101


 2413              		.cfi_endproc
 2414              	.LFE56:
 2415              		.size	CySysSetPeripheralAccessArbPriority, .-CySysSetPeripheralAccessArbPriority
 2416              		.global	CySysClkPumpConfig
 2417              		.global	cyImoFreqMhz2Reg
 2418              		.global	CySysTickInitVar
 2419              		.global	cydelay32kMs
 2420              		.global	cydelayFreqMhz
 2421              		.global	cydelayFreqKhz
 2422              		.global	cydelayFreqHz
 2423              		.section	.rodata
 2424              		.align	2
 2425              		.set	.LANCHOR1,. + 0
 2426              		.type	cyImoFreqMhz2Reg, %object
 2427              		.size	cyImoFreqMhz2Reg, 46
 2428              	cyImoFreqMhz2Reg:
 2429 0000 03       		.byte	3
 2430 0001 04       		.byte	4
 2431 0002 05       		.byte	5
 2432 0003 06       		.byte	6
 2433 0004 07       		.byte	7
 2434 0005 08       		.byte	8
 2435 0006 09       		.byte	9
 2436 0007 0A       		.byte	10
 2437 0008 0B       		.byte	11
 2438 0009 0C       		.byte	12
 2439 000a 0E       		.byte	14
 2440 000b 0F       		.byte	15
 2441 000c 10       		.byte	16
 2442 000d 11       		.byte	17
 2443 000e 12       		.byte	18
 2444 000f 13       		.byte	19
 2445 0010 14       		.byte	20
 2446 0011 15       		.byte	21
 2447 0012 16       		.byte	22
 2448 0013 17       		.byte	23
 2449 0014 18       		.byte	24
 2450 0015 19       		.byte	25
 2451 0016 1B       		.byte	27
 2452 0017 1C       		.byte	28
 2453 0018 1D       		.byte	29
 2454 0019 1E       		.byte	30
 2455 001a 1F       		.byte	31
 2456 001b 20       		.byte	32
 2457 001c 21       		.byte	33
 2458 001d 22       		.byte	34
 2459 001e 23       		.byte	35
 2460 001f 25       		.byte	37
 2461 0020 26       		.byte	38
 2462 0021 27       		.byte	39
 2463 0022 28       		.byte	40
 2464 0023 29       		.byte	41
 2465 0024 2A       		.byte	42
 2466 0025 2B       		.byte	43
 2467 0026 2E       		.byte	46
 2468 0027 2F       		.byte	47
 2469 0028 30       		.byte	48
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 102


 2470 0029 31       		.byte	49
 2471 002a 32       		.byte	50
 2472 002b 33       		.byte	51
 2473 002c 34       		.byte	52
 2474 002d 35       		.byte	53
 2475 002e 0000     		.data
 2476              		.align	2
 2477              		.set	.LANCHOR0,. + 0
 2478              		.type	CySysClkPumpConfig, %object
 2479              		.size	CySysClkPumpConfig, 4
 2480              	CySysClkPumpConfig:
 2481 0000 01000000 		.word	1
 2482              		.type	cydelay32kMs, %object
 2483              		.size	cydelay32kMs, 4
 2484              	cydelay32kMs:
 2485 0004 00007017 		.word	393216000
 2486              		.type	cydelayFreqKhz, %object
 2487              		.size	cydelayFreqKhz, 4
 2488              	cydelayFreqKhz:
 2489 0008 E02E0000 		.word	12000
 2490              		.type	cydelayFreqMhz, %object
 2491              		.size	cydelayFreqMhz, 1
 2492              	cydelayFreqMhz:
 2493 000c 0C       		.byte	12
 2494 000d 000000   		.space	3
 2495              		.type	cydelayFreqHz, %object
 2496              		.size	cydelayFreqHz, 4
 2497              	cydelayFreqHz:
 2498 0010 001BB700 		.word	12000000
 2499              		.bss
 2500              		.align	2
 2501              		.set	.LANCHOR2,. + 0
 2502              		.type	CySysTickCallbacks, %object
 2503              		.size	CySysTickCallbacks, 20
 2504              	CySysTickCallbacks:
 2505 0000 00000000 		.space	20
 2505      00000000 
 2505      00000000 
 2505      00000000 
 2505      00000000 
 2506              		.type	CySysTickInitVar, %object
 2507              		.size	CySysTickInitVar, 4
 2508              	CySysTickInitVar:
 2509 0014 00000000 		.space	4
 2510              		.text
 2511              	.Letext0:
 2512              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2513              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2514              		.section	.debug_info,"",%progbits
 2515              	.Ldebug_info0:
 2516 0000 420D0000 		.4byte	0xd42
 2517 0004 0400     		.2byte	0x4
 2518 0006 00000000 		.4byte	.Ldebug_abbrev0
 2519 000a 04       		.byte	0x4
 2520 000b 01       		.uleb128 0x1
 2521 000c 72040000 		.4byte	.LASF118
 2522 0010 01       		.byte	0x1
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 103


 2523 0011 8C070000 		.4byte	.LASF119
 2524 0015 E8020000 		.4byte	.LASF120
 2525 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2526 001d 00000000 		.4byte	0
 2527 0021 00000000 		.4byte	.Ldebug_line0
 2528 0025 02       		.uleb128 0x2
 2529 0026 01       		.byte	0x1
 2530 0027 06       		.byte	0x6
 2531 0028 0E010000 		.4byte	.LASF0
 2532 002c 02       		.uleb128 0x2
 2533 002d 01       		.byte	0x1
 2534 002e 08       		.byte	0x8
 2535 002f B9050000 		.4byte	.LASF1
 2536 0033 02       		.uleb128 0x2
 2537 0034 02       		.byte	0x2
 2538 0035 05       		.byte	0x5
 2539 0036 C7050000 		.4byte	.LASF2
 2540 003a 02       		.uleb128 0x2
 2541 003b 02       		.byte	0x2
 2542 003c 07       		.byte	0x7
 2543 003d 93060000 		.4byte	.LASF3
 2544 0041 02       		.uleb128 0x2
 2545 0042 04       		.byte	0x4
 2546 0043 05       		.byte	0x5
 2547 0044 4D010000 		.4byte	.LASF4
 2548 0048 02       		.uleb128 0x2
 2549 0049 04       		.byte	0x4
 2550 004a 07       		.byte	0x7
 2551 004b 70020000 		.4byte	.LASF5
 2552 004f 02       		.uleb128 0x2
 2553 0050 08       		.byte	0x8
 2554 0051 05       		.byte	0x5
 2555 0052 00010000 		.4byte	.LASF6
 2556 0056 02       		.uleb128 0x2
 2557 0057 08       		.byte	0x8
 2558 0058 07       		.byte	0x7
 2559 0059 84000000 		.4byte	.LASF7
 2560 005d 03       		.uleb128 0x3
 2561 005e 04       		.byte	0x4
 2562 005f 05       		.byte	0x5
 2563 0060 696E7400 		.ascii	"int\000"
 2564 0064 02       		.uleb128 0x2
 2565 0065 04       		.byte	0x4
 2566 0066 07       		.byte	0x7
 2567 0067 54020000 		.4byte	.LASF8
 2568 006b 04       		.uleb128 0x4
 2569 006c 78010000 		.4byte	.LASF9
 2570 0070 02       		.byte	0x2
 2571 0071 B901     		.2byte	0x1b9
 2572 0073 2C000000 		.4byte	0x2c
 2573 0077 04       		.uleb128 0x4
 2574 0078 17000000 		.4byte	.LASF10
 2575 007c 02       		.byte	0x2
 2576 007d BA01     		.2byte	0x1ba
 2577 007f 3A000000 		.4byte	0x3a
 2578 0083 04       		.uleb128 0x4
 2579 0084 B8010000 		.4byte	.LASF11
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 104


 2580 0088 02       		.byte	0x2
 2581 0089 BB01     		.2byte	0x1bb
 2582 008b 48000000 		.4byte	0x48
 2583 008f 02       		.uleb128 0x2
 2584 0090 04       		.byte	0x4
 2585 0091 04       		.byte	0x4
 2586 0092 1F050000 		.4byte	.LASF12
 2587 0096 02       		.uleb128 0x2
 2588 0097 08       		.byte	0x8
 2589 0098 04       		.byte	0x4
 2590 0099 94010000 		.4byte	.LASF13
 2591 009d 02       		.uleb128 0x2
 2592 009e 01       		.byte	0x1
 2593 009f 08       		.byte	0x8
 2594 00a0 1B060000 		.4byte	.LASF14
 2595 00a4 04       		.uleb128 0x4
 2596 00a5 61070000 		.4byte	.LASF15
 2597 00a9 02       		.byte	0x2
 2598 00aa 5B02     		.2byte	0x25b
 2599 00ac 48000000 		.4byte	0x48
 2600 00b0 04       		.uleb128 0x4
 2601 00b1 86050000 		.4byte	.LASF16
 2602 00b5 02       		.byte	0x2
 2603 00b6 6302     		.2byte	0x263
 2604 00b8 BC000000 		.4byte	0xbc
 2605 00bc 05       		.uleb128 0x5
 2606 00bd 6B000000 		.4byte	0x6b
 2607 00c1 04       		.uleb128 0x4
 2608 00c2 C1030000 		.4byte	.LASF17
 2609 00c6 02       		.byte	0x2
 2610 00c7 6502     		.2byte	0x265
 2611 00c9 CD000000 		.4byte	0xcd
 2612 00cd 05       		.uleb128 0x5
 2613 00ce 83000000 		.4byte	0x83
 2614 00d2 04       		.uleb128 0x4
 2615 00d3 20060000 		.4byte	.LASF18
 2616 00d7 02       		.byte	0x2
 2617 00d8 7502     		.2byte	0x275
 2618 00da DE000000 		.4byte	0xde
 2619 00de 06       		.uleb128 0x6
 2620 00df 04       		.byte	0x4
 2621 00e0 E4000000 		.4byte	0xe4
 2622 00e4 07       		.uleb128 0x7
 2623 00e5 02       		.uleb128 0x2
 2624 00e6 04       		.byte	0x4
 2625 00e7 07       		.byte	0x7
 2626 00e8 EA030000 		.4byte	.LASF19
 2627 00ec 08       		.uleb128 0x8
 2628 00ed 4A050000 		.4byte	.LASF20
 2629 00f1 03       		.byte	0x3
 2630 00f2 F5       		.byte	0xf5
 2631 00f3 DE000000 		.4byte	0xde
 2632 00f7 09       		.uleb128 0x9
 2633 00f8 6A070000 		.4byte	.LASF21
 2634 00fc 01       		.byte	0x1
 2635 00fd 6B       		.byte	0x6b
 2636 00fe 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 105


 2637 0102 14000000 		.4byte	.LFE2-.LFB2
 2638 0106 01       		.uleb128 0x1
 2639 0107 9C       		.byte	0x9c
 2640 0108 09       		.uleb128 0x9
 2641 0109 9D020000 		.4byte	.LASF22
 2642 010d 01       		.byte	0x1
 2643 010e 8B       		.byte	0x8b
 2644 010f 00000000 		.4byte	.LFB3
 2645 0113 10000000 		.4byte	.LFE3-.LFB3
 2646 0117 01       		.uleb128 0x1
 2647 0118 9C       		.byte	0x9c
 2648 0119 0A       		.uleb128 0xa
 2649 011a 27000000 		.4byte	.LASF25
 2650 011e 01       		.byte	0x1
 2651 011f AD01     		.2byte	0x1ad
 2652 0121 00000000 		.4byte	.LFB4
 2653 0125 20000000 		.4byte	.LFE4-.LFB4
 2654 0129 01       		.uleb128 0x1
 2655 012a 9C       		.byte	0x9c
 2656 012b 72010000 		.4byte	0x172
 2657 012f 0B       		.uleb128 0xb
 2658 0130 EF050000 		.4byte	.LASF27
 2659 0134 01       		.byte	0x1
 2660 0135 AD01     		.2byte	0x1ad
 2661 0137 83000000 		.4byte	0x83
 2662 013b 00000000 		.4byte	.LLST0
 2663 013f 0C       		.uleb128 0xc
 2664 0140 2B010000 		.4byte	.LASF23
 2665 0144 01       		.byte	0x1
 2666 0145 AF01     		.2byte	0x1af
 2667 0147 6B000000 		.4byte	0x6b
 2668 014b 2C000000 		.4byte	.LLST1
 2669 014f 0C       		.uleb128 0xc
 2670 0150 B8070000 		.4byte	.LASF24
 2671 0154 01       		.byte	0x1
 2672 0155 B001     		.2byte	0x1b0
 2673 0157 83000000 		.4byte	0x83
 2674 015b 3F000000 		.4byte	.LLST2
 2675 015f 0D       		.uleb128 0xd
 2676 0160 08000000 		.4byte	.LVL1
 2677 0164 1C0D0000 		.4byte	0xd1c
 2678 0168 0D       		.uleb128 0xd
 2679 0169 1A000000 		.4byte	.LVL4
 2680 016d 270D0000 		.4byte	0xd27
 2681 0171 00       		.byte	0
 2682 0172 0A       		.uleb128 0xa
 2683 0173 AC030000 		.4byte	.LASF26
 2684 0177 01       		.byte	0x1
 2685 0178 D901     		.2byte	0x1d9
 2686 017a 00000000 		.4byte	.LFB5
 2687 017e 38000000 		.4byte	.LFE5-.LFB5
 2688 0182 01       		.uleb128 0x1
 2689 0183 9C       		.byte	0x9c
 2690 0184 97010000 		.4byte	0x197
 2691 0188 0E       		.uleb128 0xe
 2692 0189 8D010000 		.4byte	.LASF28
 2693 018d 01       		.byte	0x1
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 106


 2694 018e D901     		.2byte	0x1d9
 2695 0190 83000000 		.4byte	0x83
 2696 0194 01       		.uleb128 0x1
 2697 0195 50       		.byte	0x50
 2698 0196 00       		.byte	0
 2699 0197 0F       		.uleb128 0xf
 2700 0198 DA010000 		.4byte	.LASF33
 2701 019c 01       		.byte	0x1
 2702 019d FE01     		.2byte	0x1fe
 2703 019f 83000000 		.4byte	0x83
 2704 01a3 00000000 		.4byte	.LFB6
 2705 01a7 1C000000 		.4byte	.LFE6-.LFB6
 2706 01ab 01       		.uleb128 0x1
 2707 01ac 9C       		.byte	0x9c
 2708 01ad E4010000 		.4byte	0x1e4
 2709 01b1 0C       		.uleb128 0xc
 2710 01b2 2B010000 		.4byte	.LASF23
 2711 01b6 01       		.byte	0x1
 2712 01b7 0002     		.2byte	0x200
 2713 01b9 6B000000 		.4byte	0x6b
 2714 01bd 5D000000 		.4byte	.LLST3
 2715 01c1 0C       		.uleb128 0xc
 2716 01c2 39040000 		.4byte	.LASF29
 2717 01c6 01       		.byte	0x1
 2718 01c7 0102     		.2byte	0x201
 2719 01c9 83000000 		.4byte	0x83
 2720 01cd 70000000 		.4byte	.LLST4
 2721 01d1 0D       		.uleb128 0xd
 2722 01d2 06000000 		.4byte	.LVL7
 2723 01d6 1C0D0000 		.4byte	0xd1c
 2724 01da 0D       		.uleb128 0xd
 2725 01db 12000000 		.4byte	.LVL9
 2726 01df 270D0000 		.4byte	0xd27
 2727 01e3 00       		.byte	0
 2728 01e4 0A       		.uleb128 0xa
 2729 01e5 3D060000 		.4byte	.LASF30
 2730 01e9 01       		.byte	0x1
 2731 01ea 3502     		.2byte	0x235
 2732 01ec 00000000 		.4byte	.LFB7
 2733 01f0 28000000 		.4byte	.LFE7-.LFB7
 2734 01f4 01       		.uleb128 0x1
 2735 01f5 9C       		.byte	0x9c
 2736 01f6 2D020000 		.4byte	0x22d
 2737 01fa 0B       		.uleb128 0xb
 2738 01fb 45070000 		.4byte	.LASF31
 2739 01ff 01       		.byte	0x1
 2740 0200 3502     		.2byte	0x235
 2741 0202 83000000 		.4byte	0x83
 2742 0206 8E000000 		.4byte	.LLST5
 2743 020a 0C       		.uleb128 0xc
 2744 020b 2B010000 		.4byte	.LASF23
 2745 020f 01       		.byte	0x1
 2746 0210 3702     		.2byte	0x237
 2747 0212 6B000000 		.4byte	0x6b
 2748 0216 BA000000 		.4byte	.LLST6
 2749 021a 0D       		.uleb128 0xd
 2750 021b 08000000 		.4byte	.LVL12
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 107


 2751 021f 1C0D0000 		.4byte	0xd1c
 2752 0223 0D       		.uleb128 0xd
 2753 0224 1E000000 		.4byte	.LVL14
 2754 0228 270D0000 		.4byte	0xd27
 2755 022c 00       		.byte	0
 2756 022d 10       		.uleb128 0x10
 2757 022e FF060000 		.4byte	.LASF32
 2758 0232 01       		.byte	0x1
 2759 0233 9104     		.2byte	0x491
 2760 0235 00000000 		.4byte	.LFB10
 2761 0239 24000000 		.4byte	.LFE10-.LFB10
 2762 023d 01       		.uleb128 0x1
 2763 023e 9C       		.byte	0x9c
 2764 023f 0F       		.uleb128 0xf
 2765 0240 BF010000 		.4byte	.LASF34
 2766 0244 01       		.byte	0x1
 2767 0245 B304     		.2byte	0x4b3
 2768 0247 83000000 		.4byte	0x83
 2769 024b 00000000 		.4byte	.LFB11
 2770 024f 10000000 		.4byte	.LFE11-.LFB11
 2771 0253 01       		.uleb128 0x1
 2772 0254 9C       		.byte	0x9c
 2773 0255 68020000 		.4byte	0x268
 2774 0259 11       		.uleb128 0x11
 2775 025a EC070000 		.4byte	.LASF35
 2776 025e 01       		.byte	0x1
 2777 025f B504     		.2byte	0x4b5
 2778 0261 83000000 		.4byte	0x83
 2779 0265 01       		.uleb128 0x1
 2780 0266 50       		.byte	0x50
 2781 0267 00       		.byte	0
 2782 0268 10       		.uleb128 0x10
 2783 0269 E0060000 		.4byte	.LASF36
 2784 026d 01       		.byte	0x1
 2785 026e 6408     		.2byte	0x864
 2786 0270 00000000 		.4byte	.LFB14
 2787 0274 20000000 		.4byte	.LFE14-.LFB14
 2788 0278 01       		.uleb128 0x1
 2789 0279 9C       		.byte	0x9c
 2790 027a 12       		.uleb128 0x12
 2791 027b 82020000 		.4byte	.LASF87
 2792 027f 01       		.byte	0x1
 2793 0280 7608     		.2byte	0x876
 2794 0282 83000000 		.4byte	0x83
 2795 0286 00000000 		.4byte	.LFB15
 2796 028a 10000000 		.4byte	.LFE15-.LFB15
 2797 028e 01       		.uleb128 0x1
 2798 028f 9C       		.byte	0x9c
 2799 0290 10       		.uleb128 0x10
 2800 0291 A1010000 		.4byte	.LASF37
 2801 0295 01       		.byte	0x1
 2802 0296 8608     		.2byte	0x886
 2803 0298 00000000 		.4byte	.LFB16
 2804 029c 0C000000 		.4byte	.LFE16-.LFB16
 2805 02a0 01       		.uleb128 0x1
 2806 02a1 9C       		.byte	0x9c
 2807 02a2 0F       		.uleb128 0xf
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 108


 2808 02a3 D4020000 		.4byte	.LASF38
 2809 02a7 01       		.byte	0x1
 2810 02a8 A008     		.2byte	0x8a0
 2811 02aa 83000000 		.4byte	0x83
 2812 02ae 00000000 		.4byte	.LFB17
 2813 02b2 14000000 		.4byte	.LFE17-.LFB17
 2814 02b6 01       		.uleb128 0x1
 2815 02b7 9C       		.byte	0x9c
 2816 02b8 DB020000 		.4byte	0x2db
 2817 02bc 0B       		.uleb128 0xb
 2818 02bd 14060000 		.4byte	.LASF39
 2819 02c1 01       		.byte	0x1
 2820 02c2 A008     		.2byte	0x8a0
 2821 02c4 83000000 		.4byte	0x83
 2822 02c8 CD000000 		.4byte	.LLST7
 2823 02cc 11       		.uleb128 0x11
 2824 02cd D6030000 		.4byte	.LASF40
 2825 02d1 01       		.byte	0x1
 2826 02d2 A208     		.2byte	0x8a2
 2827 02d4 83000000 		.4byte	0x83
 2828 02d8 01       		.uleb128 0x1
 2829 02d9 50       		.byte	0x50
 2830 02da 00       		.byte	0
 2831 02db 0F       		.uleb128 0xf
 2832 02dc 61000000 		.4byte	.LASF41
 2833 02e0 01       		.byte	0x1
 2834 02e1 B708     		.2byte	0x8b7
 2835 02e3 83000000 		.4byte	0x83
 2836 02e7 00000000 		.4byte	.LFB18
 2837 02eb 10000000 		.4byte	.LFE18-.LFB18
 2838 02ef 01       		.uleb128 0x1
 2839 02f0 9C       		.byte	0x9c
 2840 02f1 04030000 		.4byte	0x304
 2841 02f5 11       		.uleb128 0x11
 2842 02f6 1E000000 		.4byte	.LASF42
 2843 02fa 01       		.byte	0x1
 2844 02fb B908     		.2byte	0x8b9
 2845 02fd 83000000 		.4byte	0x83
 2846 0301 01       		.uleb128 0x1
 2847 0302 50       		.byte	0x50
 2848 0303 00       		.byte	0
 2849 0304 0A       		.uleb128 0xa
 2850 0305 AC000000 		.4byte	.LASF43
 2851 0309 01       		.byte	0x1
 2852 030a CE08     		.2byte	0x8ce
 2853 030c 00000000 		.4byte	.LFB19
 2854 0310 0C000000 		.4byte	.LFE19-.LFB19
 2855 0314 01       		.uleb128 0x1
 2856 0315 9C       		.byte	0x9c
 2857 0316 29030000 		.4byte	0x329
 2858 031a 0E       		.uleb128 0xe
 2859 031b D5010000 		.4byte	.LASF44
 2860 031f 01       		.byte	0x1
 2861 0320 CE08     		.2byte	0x8ce
 2862 0322 83000000 		.4byte	0x83
 2863 0326 01       		.uleb128 0x1
 2864 0327 50       		.byte	0x50
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 109


 2865 0328 00       		.byte	0
 2866 0329 0A       		.uleb128 0xa
 2867 032a D1050000 		.4byte	.LASF45
 2868 032e 01       		.byte	0x1
 2869 032f 8509     		.2byte	0x985
 2870 0331 00000000 		.4byte	.LFB26
 2871 0335 14000000 		.4byte	.LFE26-.LFB26
 2872 0339 01       		.uleb128 0x1
 2873 033a 9C       		.byte	0x9c
 2874 033b 50030000 		.4byte	0x350
 2875 033f 0B       		.uleb128 0xb
 2876 0340 56030000 		.4byte	.LASF46
 2877 0344 01       		.byte	0x1
 2878 0345 8509     		.2byte	0x985
 2879 0347 6B000000 		.4byte	0x6b
 2880 034b EB000000 		.4byte	.LLST8
 2881 034f 00       		.byte	0
 2882 0350 0F       		.uleb128 0xf
 2883 0351 F2000000 		.4byte	.LASF47
 2884 0355 01       		.byte	0x1
 2885 0356 9709     		.2byte	0x997
 2886 0358 6B000000 		.4byte	0x6b
 2887 035c 00000000 		.4byte	.LFB27
 2888 0360 18000000 		.4byte	.LFE27-.LFB27
 2889 0364 01       		.uleb128 0x1
 2890 0365 9C       		.byte	0x9c
 2891 0366 7B030000 		.4byte	0x37b
 2892 036a 0B       		.uleb128 0xb
 2893 036b 56030000 		.4byte	.LASF46
 2894 036f 01       		.byte	0x1
 2895 0370 9709     		.2byte	0x997
 2896 0372 6B000000 		.4byte	0x6b
 2897 0376 0C010000 		.4byte	.LLST9
 2898 037a 00       		.byte	0
 2899 037b 0A       		.uleb128 0xa
 2900 037c 56010000 		.4byte	.LASF48
 2901 0380 01       		.byte	0x1
 2902 0381 A709     		.2byte	0x9a7
 2903 0383 00000000 		.4byte	.LFB28
 2904 0387 14000000 		.4byte	.LFE28-.LFB28
 2905 038b 01       		.uleb128 0x1
 2906 038c 9C       		.byte	0x9c
 2907 038d A2030000 		.4byte	0x3a2
 2908 0391 0B       		.uleb128 0xb
 2909 0392 56030000 		.4byte	.LASF46
 2910 0396 01       		.byte	0x1
 2911 0397 A709     		.2byte	0x9a7
 2912 0399 6B000000 		.4byte	0x6b
 2913 039d 2D010000 		.4byte	.LLST10
 2914 03a1 00       		.byte	0
 2915 03a2 0A       		.uleb128 0xa
 2916 03a3 C4020000 		.4byte	.LASF49
 2917 03a7 01       		.byte	0x1
 2918 03a8 B509     		.2byte	0x9b5
 2919 03aa 00000000 		.4byte	.LFB29
 2920 03ae 14000000 		.4byte	.LFE29-.LFB29
 2921 03b2 01       		.uleb128 0x1
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 110


 2922 03b3 9C       		.byte	0x9c
 2923 03b4 C9030000 		.4byte	0x3c9
 2924 03b8 0B       		.uleb128 0xb
 2925 03b9 56030000 		.4byte	.LASF46
 2926 03bd 01       		.byte	0x1
 2927 03be B509     		.2byte	0x9b5
 2928 03c0 6B000000 		.4byte	0x6b
 2929 03c4 4E010000 		.4byte	.LLST11
 2930 03c8 00       		.byte	0
 2931 03c9 0A       		.uleb128 0xa
 2932 03ca 17040000 		.4byte	.LASF50
 2933 03ce 01       		.byte	0x1
 2934 03cf C409     		.2byte	0x9c4
 2935 03d1 00000000 		.4byte	.LFB30
 2936 03d5 14000000 		.4byte	.LFE30-.LFB30
 2937 03d9 01       		.uleb128 0x1
 2938 03da 9C       		.byte	0x9c
 2939 03db F0030000 		.4byte	0x3f0
 2940 03df 0B       		.uleb128 0xb
 2941 03e0 56030000 		.4byte	.LASF46
 2942 03e4 01       		.byte	0x1
 2943 03e5 C409     		.2byte	0x9c4
 2944 03e7 6B000000 		.4byte	0x6b
 2945 03eb 6F010000 		.4byte	.LLST12
 2946 03ef 00       		.byte	0
 2947 03f0 0A       		.uleb128 0xa
 2948 03f1 95050000 		.4byte	.LASF51
 2949 03f5 01       		.byte	0x1
 2950 03f6 D309     		.2byte	0x9d3
 2951 03f8 00000000 		.4byte	.LFB31
 2952 03fc 04000000 		.4byte	.LFE31-.LFB31
 2953 0400 01       		.uleb128 0x1
 2954 0401 9C       		.byte	0x9c
 2955 0402 15040000 		.4byte	0x415
 2956 0406 0E       		.uleb128 0xe
 2957 0407 14060000 		.4byte	.LASF39
 2958 040b 01       		.byte	0x1
 2959 040c D309     		.2byte	0x9d3
 2960 040e 6B000000 		.4byte	0x6b
 2961 0412 01       		.uleb128 0x1
 2962 0413 50       		.byte	0x50
 2963 0414 00       		.byte	0
 2964 0415 0A       		.uleb128 0xa
 2965 0416 4D070000 		.4byte	.LASF52
 2966 041a 01       		.byte	0x1
 2967 041b E204     		.2byte	0x4e2
 2968 041d 00000000 		.4byte	.LFB12
 2969 0421 38000000 		.4byte	.LFE12-.LFB12
 2970 0425 01       		.uleb128 0x1
 2971 0426 9C       		.byte	0x9c
 2972 0427 6D040000 		.4byte	0x46d
 2973 042b 0B       		.uleb128 0xb
 2974 042c 45070000 		.4byte	.LASF31
 2975 0430 01       		.byte	0x1
 2976 0431 E204     		.2byte	0x4e2
 2977 0433 83000000 		.4byte	0x83
 2978 0437 90010000 		.4byte	.LLST13
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 111


 2979 043b 0C       		.uleb128 0xc
 2980 043c 2B010000 		.4byte	.LASF23
 2981 0440 01       		.byte	0x1
 2982 0441 E404     		.2byte	0x4e4
 2983 0443 6B000000 		.4byte	0x6b
 2984 0447 E0010000 		.4byte	.LLST14
 2985 044b 0D       		.uleb128 0xd
 2986 044c 14000000 		.4byte	.LVL34
 2987 0450 1C0D0000 		.4byte	0xd1c
 2988 0454 0D       		.uleb128 0xd
 2989 0455 26000000 		.4byte	.LVL36
 2990 0459 270D0000 		.4byte	0xd27
 2991 045d 13       		.uleb128 0x13
 2992 045e 2E000000 		.4byte	.LVL39
 2993 0462 F0030000 		.4byte	0x3f0
 2994 0466 14       		.uleb128 0x14
 2995 0467 01       		.uleb128 0x1
 2996 0468 50       		.byte	0x50
 2997 0469 01       		.uleb128 0x1
 2998 046a 30       		.byte	0x30
 2999 046b 00       		.byte	0
 3000 046c 00       		.byte	0
 3001 046d 0F       		.uleb128 0xf
 3002 046e 9A030000 		.4byte	.LASF53
 3003 0472 01       		.byte	0x1
 3004 0473 E708     		.2byte	0x8e7
 3005 0475 D2000000 		.4byte	0xd2
 3006 0479 00000000 		.4byte	.LFB20
 3007 047d 20000000 		.4byte	.LFE20-.LFB20
 3008 0481 01       		.uleb128 0x1
 3009 0482 9C       		.byte	0x9c
 3010 0483 D5040000 		.4byte	0x4d5
 3011 0487 0B       		.uleb128 0xb
 3012 0488 56030000 		.4byte	.LASF46
 3013 048c 01       		.byte	0x1
 3014 048d E708     		.2byte	0x8e7
 3015 048f 6B000000 		.4byte	0x6b
 3016 0493 F3010000 		.4byte	.LLST15
 3017 0497 0B       		.uleb128 0xb
 3018 0498 29040000 		.4byte	.LASF54
 3019 049c 01       		.byte	0x1
 3020 049d E708     		.2byte	0x8e7
 3021 049f D2000000 		.4byte	0xd2
 3022 04a3 14020000 		.4byte	.LLST16
 3023 04a7 11       		.uleb128 0x11
 3024 04a8 53000000 		.4byte	.LASF55
 3025 04ac 01       		.byte	0x1
 3026 04ad E908     		.2byte	0x8e9
 3027 04af D2000000 		.4byte	0xd2
 3028 04b3 01       		.uleb128 0x1
 3029 04b4 50       		.byte	0x50
 3030 04b5 15       		.uleb128 0x15
 3031 04b6 00000000 		.4byte	.LASF56
 3032 04ba 01       		.byte	0x1
 3033 04bb EA08     		.2byte	0x8ea
 3034 04bd D5040000 		.4byte	0x4d5
 3035 04c1 00000020 		.4byte	0x20000000
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 112


 3036 04c5 13       		.uleb128 0x13
 3037 04c6 10000000 		.4byte	.LVL43
 3038 04ca F0030000 		.4byte	0x3f0
 3039 04ce 14       		.uleb128 0x14
 3040 04cf 01       		.uleb128 0x1
 3041 04d0 50       		.byte	0x50
 3042 04d1 01       		.uleb128 0x1
 3043 04d2 30       		.byte	0x30
 3044 04d3 00       		.byte	0
 3045 04d4 00       		.byte	0
 3046 04d5 06       		.uleb128 0x6
 3047 04d6 04       		.byte	0x4
 3048 04d7 D2000000 		.4byte	0xd2
 3049 04db 0F       		.uleb128 0xf
 3050 04dc DD050000 		.4byte	.LASF57
 3051 04e0 01       		.byte	0x1
 3052 04e1 0909     		.2byte	0x909
 3053 04e3 D2000000 		.4byte	0xd2
 3054 04e7 00000000 		.4byte	.LFB21
 3055 04eb 1C000000 		.4byte	.LFE21-.LFB21
 3056 04ef 01       		.uleb128 0x1
 3057 04f0 9C       		.byte	0x9c
 3058 04f1 25050000 		.4byte	0x525
 3059 04f5 0B       		.uleb128 0xb
 3060 04f6 56030000 		.4byte	.LASF46
 3061 04fa 01       		.byte	0x1
 3062 04fb 0909     		.2byte	0x909
 3063 04fd 6B000000 		.4byte	0x6b
 3064 0501 40020000 		.4byte	.LLST17
 3065 0505 15       		.uleb128 0x15
 3066 0506 00000000 		.4byte	.LASF56
 3067 050a 01       		.byte	0x1
 3068 050b 0B09     		.2byte	0x90b
 3069 050d D5040000 		.4byte	0x4d5
 3070 0511 00000020 		.4byte	0x20000000
 3071 0515 13       		.uleb128 0x13
 3072 0516 0E000000 		.4byte	.LVL49
 3073 051a F0030000 		.4byte	0x3f0
 3074 051e 14       		.uleb128 0x14
 3075 051f 01       		.uleb128 0x1
 3076 0520 50       		.byte	0x50
 3077 0521 01       		.uleb128 0x1
 3078 0522 30       		.byte	0x30
 3079 0523 00       		.byte	0
 3080 0524 00       		.byte	0
 3081 0525 0F       		.uleb128 0xf
 3082 0526 47030000 		.4byte	.LASF58
 3083 052a 01       		.byte	0x1
 3084 052b 1F09     		.2byte	0x91f
 3085 052d D2000000 		.4byte	0xd2
 3086 0531 00000000 		.4byte	.LFB22
 3087 0535 24000000 		.4byte	.LFE22-.LFB22
 3088 0539 01       		.uleb128 0x1
 3089 053a 9C       		.byte	0x9c
 3090 053b 8D050000 		.4byte	0x58d
 3091 053f 0B       		.uleb128 0xb
 3092 0540 56030000 		.4byte	.LASF46
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 113


 3093 0544 01       		.byte	0x1
 3094 0545 1F09     		.2byte	0x91f
 3095 0547 6B000000 		.4byte	0x6b
 3096 054b 61020000 		.4byte	.LLST18
 3097 054f 0B       		.uleb128 0xb
 3098 0550 29040000 		.4byte	.LASF54
 3099 0554 01       		.byte	0x1
 3100 0555 1F09     		.2byte	0x91f
 3101 0557 D2000000 		.4byte	0xd2
 3102 055b 82020000 		.4byte	.LLST19
 3103 055f 11       		.uleb128 0x11
 3104 0560 53000000 		.4byte	.LASF55
 3105 0564 01       		.byte	0x1
 3106 0565 2109     		.2byte	0x921
 3107 0567 D2000000 		.4byte	0xd2
 3108 056b 01       		.uleb128 0x1
 3109 056c 50       		.byte	0x50
 3110 056d 15       		.uleb128 0x15
 3111 056e 00000000 		.4byte	.LASF56
 3112 0572 01       		.byte	0x1
 3113 0573 2209     		.2byte	0x922
 3114 0575 D5040000 		.4byte	0x4d5
 3115 0579 00000020 		.4byte	0x20000000
 3116 057d 13       		.uleb128 0x13
 3117 057e 10000000 		.4byte	.LVL53
 3118 0582 F0030000 		.4byte	0x3f0
 3119 0586 14       		.uleb128 0x14
 3120 0587 01       		.uleb128 0x1
 3121 0588 50       		.byte	0x50
 3122 0589 01       		.uleb128 0x1
 3123 058a 30       		.byte	0x30
 3124 058b 00       		.byte	0
 3125 058c 00       		.byte	0
 3126 058d 0F       		.uleb128 0xf
 3127 058e 5C050000 		.4byte	.LASF59
 3128 0592 01       		.byte	0x1
 3129 0593 3B09     		.2byte	0x93b
 3130 0595 D2000000 		.4byte	0xd2
 3131 0599 00000000 		.4byte	.LFB23
 3132 059d 20000000 		.4byte	.LFE23-.LFB23
 3133 05a1 01       		.uleb128 0x1
 3134 05a2 9C       		.byte	0x9c
 3135 05a3 D7050000 		.4byte	0x5d7
 3136 05a7 0B       		.uleb128 0xb
 3137 05a8 56030000 		.4byte	.LASF46
 3138 05ac 01       		.byte	0x1
 3139 05ad 3B09     		.2byte	0x93b
 3140 05af 6B000000 		.4byte	0x6b
 3141 05b3 AE020000 		.4byte	.LLST20
 3142 05b7 15       		.uleb128 0x15
 3143 05b8 00000000 		.4byte	.LASF56
 3144 05bc 01       		.byte	0x1
 3145 05bd 3D09     		.2byte	0x93d
 3146 05bf D5040000 		.4byte	0x4d5
 3147 05c3 00000020 		.4byte	0x20000000
 3148 05c7 13       		.uleb128 0x13
 3149 05c8 0E000000 		.4byte	.LVL59
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 114


 3150 05cc F0030000 		.4byte	0x3f0
 3151 05d0 14       		.uleb128 0x14
 3152 05d1 01       		.uleb128 0x1
 3153 05d2 50       		.byte	0x50
 3154 05d3 01       		.uleb128 0x1
 3155 05d4 30       		.byte	0x30
 3156 05d5 00       		.byte	0
 3157 05d6 00       		.byte	0
 3158 05d7 0A       		.uleb128 0xa
 3159 05d8 0E050000 		.4byte	.LASF60
 3160 05dc 01       		.byte	0x1
 3161 05dd 4E09     		.2byte	0x94e
 3162 05df 00000000 		.4byte	.LFB24
 3163 05e3 4C000000 		.4byte	.LFE24-.LFB24
 3164 05e7 01       		.uleb128 0x1
 3165 05e8 9C       		.byte	0x9c
 3166 05e9 76060000 		.4byte	0x676
 3167 05ed 0B       		.uleb128 0xb
 3168 05ee 56030000 		.4byte	.LASF46
 3169 05f2 01       		.byte	0x1
 3170 05f3 4E09     		.2byte	0x94e
 3171 05f5 6B000000 		.4byte	0x6b
 3172 05f9 CF020000 		.4byte	.LLST21
 3173 05fd 0B       		.uleb128 0xb
 3174 05fe 5D030000 		.4byte	.LASF61
 3175 0602 01       		.byte	0x1
 3176 0603 4E09     		.2byte	0x94e
 3177 0605 6B000000 		.4byte	0x6b
 3178 0609 F0020000 		.4byte	.LLST22
 3179 060d 0C       		.uleb128 0xc
 3180 060e 2B010000 		.4byte	.LASF23
 3181 0612 01       		.byte	0x1
 3182 0613 5009     		.2byte	0x950
 3183 0615 6B000000 		.4byte	0x6b
 3184 0619 11030000 		.4byte	.LLST23
 3185 061d 0C       		.uleb128 0xc
 3186 061e 9B010000 		.4byte	.LASF62
 3187 0622 01       		.byte	0x1
 3188 0623 5109     		.2byte	0x951
 3189 0625 83000000 		.4byte	0x83
 3190 0629 24030000 		.4byte	.LLST24
 3191 062d 0C       		.uleb128 0xc
 3192 062e 1E020000 		.4byte	.LASF63
 3193 0632 01       		.byte	0x1
 3194 0633 5209     		.2byte	0x952
 3195 0635 83000000 		.4byte	0x83
 3196 0639 37030000 		.4byte	.LLST25
 3197 063d 16       		.uleb128 0x16
 3198 063e 10000000 		.4byte	.LVL62
 3199 0642 F0030000 		.4byte	0x3f0
 3200 0646 50060000 		.4byte	0x650
 3201 064a 14       		.uleb128 0x14
 3202 064b 01       		.uleb128 0x1
 3203 064c 50       		.byte	0x50
 3204 064d 01       		.uleb128 0x1
 3205 064e 30       		.byte	0x30
 3206 064f 00       		.byte	0
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 115


 3207 0650 16       		.uleb128 0x16
 3208 0651 1A000000 		.4byte	.LVL63
 3209 0655 F0030000 		.4byte	0x3f0
 3210 0659 63060000 		.4byte	0x663
 3211 065d 14       		.uleb128 0x14
 3212 065e 01       		.uleb128 0x1
 3213 065f 50       		.byte	0x50
 3214 0660 01       		.uleb128 0x1
 3215 0661 30       		.byte	0x30
 3216 0662 00       		.byte	0
 3217 0663 0D       		.uleb128 0xd
 3218 0664 26000000 		.4byte	.LVL65
 3219 0668 1C0D0000 		.4byte	0xd1c
 3220 066c 0D       		.uleb128 0xd
 3221 066d 44000000 		.4byte	.LVL70
 3222 0671 270D0000 		.4byte	0xd27
 3223 0675 00       		.byte	0
 3224 0676 0F       		.uleb128 0xf
 3225 0677 F2010000 		.4byte	.LASF64
 3226 067b 01       		.byte	0x1
 3227 067c 7009     		.2byte	0x970
 3228 067e 6B000000 		.4byte	0x6b
 3229 0682 00000000 		.4byte	.LFB25
 3230 0686 2C000000 		.4byte	.LFE25-.LFB25
 3231 068a 01       		.uleb128 0x1
 3232 068b 9C       		.byte	0x9c
 3233 068c C0060000 		.4byte	0x6c0
 3234 0690 0B       		.uleb128 0xb
 3235 0691 56030000 		.4byte	.LASF46
 3236 0695 01       		.byte	0x1
 3237 0696 7009     		.2byte	0x970
 3238 0698 6B000000 		.4byte	0x6b
 3239 069c 55030000 		.4byte	.LLST26
 3240 06a0 0C       		.uleb128 0xc
 3241 06a1 5D030000 		.4byte	.LASF61
 3242 06a5 01       		.byte	0x1
 3243 06a6 7209     		.2byte	0x972
 3244 06a8 6B000000 		.4byte	0x6b
 3245 06ac 76030000 		.4byte	.LLST27
 3246 06b0 13       		.uleb128 0x13
 3247 06b1 0E000000 		.4byte	.LVL74
 3248 06b5 F0030000 		.4byte	0x3f0
 3249 06b9 14       		.uleb128 0x14
 3250 06ba 01       		.uleb128 0x1
 3251 06bb 50       		.byte	0x50
 3252 06bc 01       		.uleb128 0x1
 3253 06bd 30       		.byte	0x30
 3254 06be 00       		.byte	0
 3255 06bf 00       		.byte	0
 3256 06c0 10       		.uleb128 0x10
 3257 06c1 C9000000 		.4byte	.LASF65
 3258 06c5 01       		.byte	0x1
 3259 06c6 EB09     		.2byte	0x9eb
 3260 06c8 00000000 		.4byte	.LFB32
 3261 06cc 18000000 		.4byte	.LFE32-.LFB32
 3262 06d0 01       		.uleb128 0x1
 3263 06d1 9C       		.byte	0x9c
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 116


 3264 06d2 0A       		.uleb128 0xa
 3265 06d3 A6060000 		.4byte	.LASF66
 3266 06d7 01       		.byte	0x1
 3267 06d8 FF09     		.2byte	0x9ff
 3268 06da 00000000 		.4byte	.LFB33
 3269 06de 30000000 		.4byte	.LFE33-.LFB33
 3270 06e2 01       		.uleb128 0x1
 3271 06e3 9C       		.byte	0x9c
 3272 06e4 0B070000 		.4byte	0x70b
 3273 06e8 0B       		.uleb128 0xb
 3274 06e9 6B050000 		.4byte	.LASF67
 3275 06ed 01       		.byte	0x1
 3276 06ee FF09     		.2byte	0x9ff
 3277 06f0 83000000 		.4byte	0x83
 3278 06f4 89030000 		.4byte	.LLST28
 3279 06f8 0D       		.uleb128 0xd
 3280 06f9 0E000000 		.4byte	.LVL79
 3281 06fd 380D0000 		.4byte	0xd38
 3282 0701 0D       		.uleb128 0xd
 3283 0702 26000000 		.4byte	.LVL81
 3284 0706 380D0000 		.4byte	0xd38
 3285 070a 00       		.byte	0
 3286 070b 0A       		.uleb128 0xa
 3287 070c 0A060000 		.4byte	.LASF68
 3288 0710 01       		.byte	0x1
 3289 0711 160A     		.2byte	0xa16
 3290 0713 00000000 		.4byte	.LFB34
 3291 0717 14000000 		.4byte	.LFE34-.LFB34
 3292 071b 01       		.uleb128 0x1
 3293 071c 9C       		.byte	0x9c
 3294 071d 3B070000 		.4byte	0x73b
 3295 0721 0B       		.uleb128 0xb
 3296 0722 AB070000 		.4byte	.LASF69
 3297 0726 01       		.byte	0x1
 3298 0727 160A     		.2byte	0xa16
 3299 0729 77000000 		.4byte	0x77
 3300 072d A7030000 		.4byte	.LLST29
 3301 0731 0D       		.uleb128 0xd
 3302 0732 0C000000 		.4byte	.LVL85
 3303 0736 380D0000 		.4byte	0xd38
 3304 073a 00       		.byte	0
 3305 073b 0A       		.uleb128 0xa
 3306 073c 66030000 		.4byte	.LASF70
 3307 0740 01       		.byte	0x1
 3308 0741 6F02     		.2byte	0x26f
 3309 0743 00000000 		.4byte	.LFB8
 3310 0747 64010000 		.4byte	.LFE8-.LFB8
 3311 074b 01       		.uleb128 0x1
 3312 074c 9C       		.byte	0x9c
 3313 074d 3C080000 		.4byte	0x83c
 3314 0751 0B       		.uleb128 0xb
 3315 0752 1A010000 		.4byte	.LASF71
 3316 0756 01       		.byte	0x1
 3317 0757 6F02     		.2byte	0x26f
 3318 0759 83000000 		.4byte	0x83
 3319 075d C8030000 		.4byte	.LLST30
 3320 0761 0C       		.uleb128 0xc
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 117


 3321 0762 0F000000 		.4byte	.LASF72
 3322 0766 01       		.byte	0x1
 3323 0767 7502     		.2byte	0x275
 3324 0769 6B000000 		.4byte	0x6b
 3325 076d 1D040000 		.4byte	.LLST31
 3326 0771 0C       		.uleb128 0xc
 3327 0772 31040000 		.4byte	.LASF73
 3328 0776 01       		.byte	0x1
 3329 0777 7602     		.2byte	0x276
 3330 0779 6B000000 		.4byte	0x6b
 3331 077d 5C040000 		.4byte	.LLST32
 3332 0781 0C       		.uleb128 0xc
 3333 0782 7B070000 		.4byte	.LASF74
 3334 0786 01       		.byte	0x1
 3335 0787 7702     		.2byte	0x277
 3336 0789 6B000000 		.4byte	0x6b
 3337 078d 9B040000 		.4byte	.LLST33
 3338 0791 0C       		.uleb128 0xc
 3339 0792 6F000000 		.4byte	.LASF75
 3340 0796 01       		.byte	0x1
 3341 0797 7802     		.2byte	0x278
 3342 0799 6B000000 		.4byte	0x6b
 3343 079d AE040000 		.4byte	.LLST34
 3344 07a1 0C       		.uleb128 0xc
 3345 07a2 7C060000 		.4byte	.LASF76
 3346 07a6 01       		.byte	0x1
 3347 07a7 7902     		.2byte	0x279
 3348 07a9 6B000000 		.4byte	0x6b
 3349 07ad CD040000 		.4byte	.LLST35
 3350 07b1 0C       		.uleb128 0xc
 3351 07b2 2B010000 		.4byte	.LASF23
 3352 07b6 01       		.byte	0x1
 3353 07b7 8402     		.2byte	0x284
 3354 07b9 6B000000 		.4byte	0x6b
 3355 07bd FF040000 		.4byte	.LLST36
 3356 07c1 0D       		.uleb128 0xd
 3357 07c2 10000000 		.4byte	.LVL87
 3358 07c6 1C0D0000 		.4byte	0xd1c
 3359 07ca 16       		.uleb128 0x16
 3360 07cb B0000000 		.4byte	.LVL105
 3361 07cf 380D0000 		.4byte	0xd38
 3362 07d3 DD070000 		.4byte	0x7dd
 3363 07d7 14       		.uleb128 0x14
 3364 07d8 01       		.uleb128 0x1
 3365 07d9 50       		.byte	0x50
 3366 07da 01       		.uleb128 0x1
 3367 07db 35       		.byte	0x35
 3368 07dc 00       		.byte	0
 3369 07dd 16       		.uleb128 0x16
 3370 07de CE000000 		.4byte	.LVL108
 3371 07e2 380D0000 		.4byte	0xd38
 3372 07e6 F0070000 		.4byte	0x7f0
 3373 07ea 14       		.uleb128 0x14
 3374 07eb 01       		.uleb128 0x1
 3375 07ec 50       		.byte	0x50
 3376 07ed 01       		.uleb128 0x1
 3377 07ee 35       		.byte	0x35
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 118


 3378 07ef 00       		.byte	0
 3379 07f0 16       		.uleb128 0x16
 3380 07f1 EE000000 		.4byte	.LVL114
 3381 07f5 0B070000 		.4byte	0x70b
 3382 07f9 03080000 		.4byte	0x803
 3383 07fd 14       		.uleb128 0x14
 3384 07fe 01       		.uleb128 0x1
 3385 07ff 50       		.byte	0x50
 3386 0800 01       		.uleb128 0x1
 3387 0801 35       		.byte	0x35
 3388 0802 00       		.byte	0
 3389 0803 16       		.uleb128 0x16
 3390 0804 00010000 		.4byte	.LVL115
 3391 0808 380D0000 		.4byte	0xd38
 3392 080c 16080000 		.4byte	0x816
 3393 0810 14       		.uleb128 0x14
 3394 0811 01       		.uleb128 0x1
 3395 0812 50       		.byte	0x50
 3396 0813 01       		.uleb128 0x1
 3397 0814 35       		.byte	0x35
 3398 0815 00       		.byte	0
 3399 0816 16       		.uleb128 0x16
 3400 0817 08010000 		.4byte	.LVL117
 3401 081b F0030000 		.4byte	0x3f0
 3402 081f 29080000 		.4byte	0x829
 3403 0823 14       		.uleb128 0x14
 3404 0824 01       		.uleb128 0x1
 3405 0825 50       		.byte	0x50
 3406 0826 01       		.uleb128 0x1
 3407 0827 30       		.byte	0x30
 3408 0828 00       		.byte	0
 3409 0829 13       		.uleb128 0x13
 3410 082a 0E010000 		.4byte	.LVL118
 3411 082e 270D0000 		.4byte	0xd27
 3412 0832 14       		.uleb128 0x14
 3413 0833 01       		.uleb128 0x1
 3414 0834 50       		.byte	0x50
 3415 0835 04       		.uleb128 0x4
 3416 0836 91       		.byte	0x91
 3417 0837 5C       		.sleb128 -36
 3418 0838 94       		.byte	0x94
 3419 0839 01       		.byte	0x1
 3420 083a 00       		.byte	0
 3421 083b 00       		.byte	0
 3422 083c 0F       		.uleb128 0xf
 3423 083d F9050000 		.4byte	.LASF77
 3424 0841 01       		.byte	0x1
 3425 0842 0304     		.2byte	0x403
 3426 0844 A4000000 		.4byte	0xa4
 3427 0848 00000000 		.4byte	.LFB9
 3428 084c 54000000 		.4byte	.LFE9-.LFB9
 3429 0850 01       		.uleb128 0x1
 3430 0851 9C       		.byte	0x9c
 3431 0852 93080000 		.4byte	0x893
 3432 0856 0B       		.uleb128 0xb
 3433 0857 3B070000 		.4byte	.LASF78
 3434 085b 01       		.byte	0x1
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 119


 3435 085c 0304     		.2byte	0x403
 3436 085e 83000000 		.4byte	0x83
 3437 0862 2B050000 		.4byte	.LLST37
 3438 0866 0C       		.uleb128 0xc
 3439 0867 D6030000 		.4byte	.LASF40
 3440 086b 01       		.byte	0x1
 3441 086c 0504     		.2byte	0x405
 3442 086e A4000000 		.4byte	0xa4
 3443 0872 49050000 		.4byte	.LLST38
 3444 0876 16       		.uleb128 0x16
 3445 0877 2E000000 		.4byte	.LVL123
 3446 087b 0B070000 		.4byte	0x70b
 3447 087f 89080000 		.4byte	0x889
 3448 0883 14       		.uleb128 0x14
 3449 0884 01       		.uleb128 0x1
 3450 0885 50       		.byte	0x50
 3451 0886 01       		.uleb128 0x1
 3452 0887 31       		.byte	0x31
 3453 0888 00       		.byte	0
 3454 0889 0D       		.uleb128 0xd
 3455 088a 32000000 		.4byte	.LVL124
 3456 088e 3F020000 		.4byte	0x23f
 3457 0892 00       		.byte	0
 3458 0893 0A       		.uleb128 0xa
 3459 0894 3B050000 		.4byte	.LASF79
 3460 0898 01       		.byte	0x1
 3461 0899 4608     		.2byte	0x846
 3462 089b 00000000 		.4byte	.LFB13
 3463 089f 44000000 		.4byte	.LFE13-.LFB13
 3464 08a3 01       		.uleb128 0x1
 3465 08a4 9C       		.byte	0x9c
 3466 08a5 D8080000 		.4byte	0x8d8
 3467 08a9 0B       		.uleb128 0xb
 3468 08aa 8B050000 		.4byte	.LASF80
 3469 08ae 01       		.byte	0x1
 3470 08af 4608     		.2byte	0x846
 3471 08b1 83000000 		.4byte	0x83
 3472 08b5 68050000 		.4byte	.LLST39
 3473 08b9 16       		.uleb128 0x16
 3474 08ba 2E000000 		.4byte	.LVL131
 3475 08be 0B070000 		.4byte	0x70b
 3476 08c2 CE080000 		.4byte	0x8ce
 3477 08c6 14       		.uleb128 0x14
 3478 08c7 01       		.uleb128 0x1
 3479 08c8 50       		.byte	0x50
 3480 08c9 03       		.uleb128 0x3
 3481 08ca 0A       		.byte	0xa
 3482 08cb E803     		.2byte	0x3e8
 3483 08cd 00       		.byte	0
 3484 08ce 0D       		.uleb128 0xd
 3485 08cf 32000000 		.4byte	.LVL132
 3486 08d3 90020000 		.4byte	0x290
 3487 08d7 00       		.byte	0
 3488 08d8 17       		.uleb128 0x17
 3489 08d9 1F010000 		.4byte	.LASF81
 3490 08dd 01       		.byte	0x1
 3491 08de 240A     		.2byte	0xa24
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 120


 3492 08e0 00000000 		.4byte	.LFB35
 3493 08e4 4C000000 		.4byte	.LFE35-.LFB35
 3494 08e8 01       		.uleb128 0x1
 3495 08e9 9C       		.byte	0x9c
 3496 08ea FF080000 		.4byte	0x8ff
 3497 08ee 0B       		.uleb128 0xb
 3498 08ef 1A010000 		.4byte	.LASF71
 3499 08f3 01       		.byte	0x1
 3500 08f4 240A     		.2byte	0xa24
 3501 08f6 83000000 		.4byte	0x83
 3502 08fa 94050000 		.4byte	.LLST40
 3503 08fe 00       		.byte	0
 3504 08ff 10       		.uleb128 0x10
 3505 0900 2D070000 		.4byte	.LASF82
 3506 0904 01       		.byte	0x1
 3507 0905 910A     		.2byte	0xa91
 3508 0907 00000000 		.4byte	.LFB39
 3509 090b 10000000 		.4byte	.LFE39-.LFB39
 3510 090f 01       		.uleb128 0x1
 3511 0910 9C       		.byte	0x9c
 3512 0911 10       		.uleb128 0x10
 3513 0912 D9000000 		.4byte	.LASF83
 3514 0916 01       		.byte	0x1
 3515 0917 A10A     		.2byte	0xaa1
 3516 0919 00000000 		.4byte	.LFB40
 3517 091d 10000000 		.4byte	.LFE40-.LFB40
 3518 0921 01       		.uleb128 0x1
 3519 0922 9C       		.byte	0x9c
 3520 0923 0A       		.uleb128 0xa
 3521 0924 2D060000 		.4byte	.LASF84
 3522 0928 01       		.byte	0x1
 3523 0929 800A     		.2byte	0xa80
 3524 092b 00000000 		.4byte	.LFB38
 3525 092f 18000000 		.4byte	.LFE38-.LFB38
 3526 0933 01       		.uleb128 0x1
 3527 0934 9C       		.byte	0x9c
 3528 0935 43090000 		.4byte	0x943
 3529 0939 0D       		.uleb128 0xd
 3530 093a 06000000 		.4byte	.LVL137
 3531 093e 11090000 		.4byte	0x911
 3532 0942 00       		.byte	0
 3533 0943 10       		.uleb128 0x10
 3534 0944 C6060000 		.4byte	.LASF85
 3535 0948 01       		.byte	0x1
 3536 0949 B10A     		.2byte	0xab1
 3537 094b 00000000 		.4byte	.LFB41
 3538 094f 10000000 		.4byte	.LFE41-.LFB41
 3539 0953 01       		.uleb128 0x1
 3540 0954 9C       		.byte	0x9c
 3541 0955 0A       		.uleb128 0xa
 3542 0956 BF070000 		.4byte	.LASF86
 3543 095a 01       		.byte	0x1
 3544 095b C20A     		.2byte	0xac2
 3545 095d 00000000 		.4byte	.LFB42
 3546 0961 10000000 		.4byte	.LFE42-.LFB42
 3547 0965 01       		.uleb128 0x1
 3548 0966 9C       		.byte	0x9c
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 121


 3549 0967 7C090000 		.4byte	0x97c
 3550 096b 0B       		.uleb128 0xb
 3551 096c 1E020000 		.4byte	.LASF63
 3552 0970 01       		.byte	0x1
 3553 0971 C20A     		.2byte	0xac2
 3554 0973 83000000 		.4byte	0x83
 3555 0977 B5050000 		.4byte	.LLST41
 3556 097b 00       		.byte	0
 3557 097c 12       		.uleb128 0x12
 3558 097d 3A010000 		.4byte	.LASF88
 3559 0981 01       		.byte	0x1
 3560 0982 D20A     		.2byte	0xad2
 3561 0984 83000000 		.4byte	0x83
 3562 0988 00000000 		.4byte	.LFB43
 3563 098c 10000000 		.4byte	.LFE43-.LFB43
 3564 0990 01       		.uleb128 0x1
 3565 0991 9C       		.byte	0x9c
 3566 0992 12       		.uleb128 0x12
 3567 0993 60040000 		.4byte	.LASF89
 3568 0997 01       		.byte	0x1
 3569 0998 E20A     		.2byte	0xae2
 3570 099a 83000000 		.4byte	0x83
 3571 099e 00000000 		.4byte	.LFB44
 3572 09a2 10000000 		.4byte	.LFE44-.LFB44
 3573 09a6 01       		.uleb128 0x1
 3574 09a7 9C       		.byte	0x9c
 3575 09a8 0A       		.uleb128 0xa
 3576 09a9 2F030000 		.4byte	.LASF90
 3577 09ad 01       		.byte	0x1
 3578 09ae 020B     		.2byte	0xb02
 3579 09b0 00000000 		.4byte	.LFB45
 3580 09b4 20000000 		.4byte	.LFE45-.LFB45
 3581 09b8 01       		.uleb128 0x1
 3582 09b9 9C       		.byte	0x9c
 3583 09ba CD090000 		.4byte	0x9cd
 3584 09be 0E       		.uleb128 0xe
 3585 09bf 24020000 		.4byte	.LASF91
 3586 09c3 01       		.byte	0x1
 3587 09c4 020B     		.2byte	0xb02
 3588 09c6 83000000 		.4byte	0x83
 3589 09ca 01       		.uleb128 0x1
 3590 09cb 50       		.byte	0x50
 3591 09cc 00       		.byte	0
 3592 09cd 12       		.uleb128 0x12
 3593 09ce AE060000 		.4byte	.LASF92
 3594 09d2 01       		.byte	0x1
 3595 09d3 1B0B     		.2byte	0xb1b
 3596 09d5 83000000 		.4byte	0x83
 3597 09d9 00000000 		.4byte	.LFB46
 3598 09dd 10000000 		.4byte	.LFE46-.LFB46
 3599 09e1 01       		.uleb128 0x1
 3600 09e2 9C       		.byte	0x9c
 3601 09e3 12       		.uleb128 0x12
 3602 09e4 3E020000 		.4byte	.LASF93
 3603 09e8 01       		.byte	0x1
 3604 09e9 320B     		.2byte	0xb32
 3605 09eb 83000000 		.4byte	0x83
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 122


 3606 09ef 00000000 		.4byte	.LFB47
 3607 09f3 10000000 		.4byte	.LFE47-.LFB47
 3608 09f7 01       		.uleb128 0x1
 3609 09f8 9C       		.byte	0x9c
 3610 09f9 18       		.uleb128 0x18
 3611 09fa D2070000 		.4byte	.LASF121
 3612 09fe 01       		.byte	0x1
 3613 09ff 870B     		.2byte	0xb87
 3614 0a01 00000000 		.4byte	.LFB51
 3615 0a05 28000000 		.4byte	.LFE51-.LFB51
 3616 0a09 01       		.uleb128 0x1
 3617 0a0a 9C       		.byte	0x9c
 3618 0a0b 270A0000 		.4byte	0xa27
 3619 0a0f 19       		.uleb128 0x19
 3620 0a10 6900     		.ascii	"i\000"
 3621 0a12 01       		.byte	0x1
 3622 0a13 890B     		.2byte	0xb89
 3623 0a15 83000000 		.4byte	0x83
 3624 0a19 D6050000 		.4byte	.LLST42
 3625 0a1d 0D       		.uleb128 0xd
 3626 0a1e 06000000 		.4byte	.LVL141
 3627 0a22 E3090000 		.4byte	0x9e3
 3628 0a26 00       		.byte	0
 3629 0a27 10       		.uleb128 0x10
 3630 0a28 61020000 		.4byte	.LASF94
 3631 0a2c 01       		.byte	0x1
 3632 0a2d 3F0B     		.2byte	0xb3f
 3633 0a2f 00000000 		.4byte	.LFB48
 3634 0a33 0C000000 		.4byte	.LFE48-.LFB48
 3635 0a37 01       		.uleb128 0x1
 3636 0a38 9C       		.byte	0x9c
 3637 0a39 17       		.uleb128 0x17
 3638 0a3a 10020000 		.4byte	.LASF95
 3639 0a3e 01       		.byte	0x1
 3640 0a3f 610A     		.2byte	0xa61
 3641 0a41 00000000 		.4byte	.LFB37
 3642 0a45 4C000000 		.4byte	.LFE37-.LFB37
 3643 0a49 01       		.uleb128 0x1
 3644 0a4a 9C       		.byte	0x9c
 3645 0a4b AE0A0000 		.4byte	0xaae
 3646 0a4f 19       		.uleb128 0x19
 3647 0a50 6900     		.ascii	"i\000"
 3648 0a52 01       		.byte	0x1
 3649 0a53 630A     		.2byte	0xa63
 3650 0a55 83000000 		.4byte	0x83
 3651 0a59 F4050000 		.4byte	.LLST43
 3652 0a5d 16       		.uleb128 0x16
 3653 0a5e 1C000000 		.4byte	.LVL151
 3654 0a62 6D040000 		.4byte	0x46d
 3655 0a66 790A0000 		.4byte	0xa79
 3656 0a6a 14       		.uleb128 0x14
 3657 0a6b 01       		.uleb128 0x1
 3658 0a6c 51       		.byte	0x51
 3659 0a6d 05       		.uleb128 0x5
 3660 0a6e 03       		.byte	0x3
 3661 0a6f 00000000 		.4byte	CySysTickServiceCallbacks
 3662 0a73 14       		.uleb128 0x14
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 123


 3663 0a74 01       		.uleb128 0x1
 3664 0a75 50       		.byte	0x50
 3665 0a76 01       		.uleb128 0x1
 3666 0a77 3F       		.byte	0x3f
 3667 0a78 00       		.byte	0
 3668 0a79 16       		.uleb128 0x16
 3669 0a7a 22000000 		.4byte	.LVL152
 3670 0a7e A8090000 		.4byte	0x9a8
 3671 0a82 8C0A0000 		.4byte	0xa8c
 3672 0a86 14       		.uleb128 0x14
 3673 0a87 01       		.uleb128 0x1
 3674 0a88 50       		.byte	0x50
 3675 0a89 01       		.uleb128 0x1
 3676 0a8a 31       		.byte	0x31
 3677 0a8b 00       		.byte	0
 3678 0a8c 0D       		.uleb128 0xd
 3679 0a8d 32000000 		.4byte	.LVL154
 3680 0a91 55090000 		.4byte	0x955
 3681 0a95 0D       		.uleb128 0xd
 3682 0a96 36000000 		.4byte	.LVL155
 3683 0a9a 270A0000 		.4byte	0xa27
 3684 0a9e 13       		.uleb128 0x13
 3685 0a9f 3C000000 		.4byte	.LVL156
 3686 0aa3 29030000 		.4byte	0x329
 3687 0aa7 14       		.uleb128 0x14
 3688 0aa8 01       		.uleb128 0x1
 3689 0aa9 50       		.byte	0x50
 3690 0aaa 01       		.uleb128 0x1
 3691 0aab 3F       		.byte	0x3f
 3692 0aac 00       		.byte	0
 3693 0aad 00       		.byte	0
 3694 0aae 0A       		.uleb128 0xa
 3695 0aaf C7030000 		.4byte	.LASF96
 3696 0ab3 01       		.byte	0x1
 3697 0ab4 440A     		.2byte	0xa44
 3698 0ab6 00000000 		.4byte	.LFB36
 3699 0aba 20000000 		.4byte	.LFE36-.LFB36
 3700 0abe 01       		.uleb128 0x1
 3701 0abf 9C       		.byte	0x9c
 3702 0ac0 D70A0000 		.4byte	0xad7
 3703 0ac4 0D       		.uleb128 0xd
 3704 0ac5 0E000000 		.4byte	.LVL157
 3705 0ac9 390A0000 		.4byte	0xa39
 3706 0acd 0D       		.uleb128 0xd
 3707 0ace 18000000 		.4byte	.LVL158
 3708 0ad2 23090000 		.4byte	0x923
 3709 0ad6 00       		.byte	0
 3710 0ad7 0F       		.uleb128 0xf
 3711 0ad8 54060000 		.4byte	.LASF97
 3712 0adc 01       		.byte	0x1
 3713 0add 620B     		.2byte	0xb62
 3714 0adf EC000000 		.4byte	0xec
 3715 0ae3 00000000 		.4byte	.LFB49
 3716 0ae7 10000000 		.4byte	.LFE49-.LFB49
 3717 0aeb 01       		.uleb128 0x1
 3718 0aec 9C       		.byte	0x9c
 3719 0aed 1E0B0000 		.4byte	0xb1e
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 124


 3720 0af1 0B       		.uleb128 0xb
 3721 0af2 56030000 		.4byte	.LASF46
 3722 0af6 01       		.byte	0x1
 3723 0af7 620B     		.2byte	0xb62
 3724 0af9 83000000 		.4byte	0x83
 3725 0afd 13060000 		.4byte	.LLST44
 3726 0b01 0E       		.uleb128 0xe
 3727 0b02 46040000 		.4byte	.LASF98
 3728 0b06 01       		.byte	0x1
 3729 0b07 620B     		.2byte	0xb62
 3730 0b09 EC000000 		.4byte	0xec
 3731 0b0d 01       		.uleb128 0x1
 3732 0b0e 51       		.byte	0x51
 3733 0b0f 11       		.uleb128 0x11
 3734 0b10 5A000000 		.4byte	.LASF99
 3735 0b14 01       		.byte	0x1
 3736 0b15 640B     		.2byte	0xb64
 3737 0b17 EC000000 		.4byte	0xec
 3738 0b1b 01       		.uleb128 0x1
 3739 0b1c 50       		.byte	0x50
 3740 0b1d 00       		.byte	0
 3741 0b1e 0F       		.uleb128 0xf
 3742 0b1f 63010000 		.4byte	.LASF100
 3743 0b23 01       		.byte	0x1
 3744 0b24 7A0B     		.2byte	0xb7a
 3745 0b26 EC000000 		.4byte	0xec
 3746 0b2a 00000000 		.4byte	.LFB50
 3747 0b2e 0C000000 		.4byte	.LFE50-.LFB50
 3748 0b32 01       		.uleb128 0x1
 3749 0b33 9C       		.byte	0x9c
 3750 0b34 490B0000 		.4byte	0xb49
 3751 0b38 0B       		.uleb128 0xb
 3752 0b39 56030000 		.4byte	.LASF46
 3753 0b3d 01       		.byte	0x1
 3754 0b3e 7A0B     		.2byte	0xb7a
 3755 0b40 83000000 		.4byte	0x83
 3756 0b44 34060000 		.4byte	.LLST45
 3757 0b48 00       		.byte	0
 3758 0b49 0A       		.uleb128 0xa
 3759 0b4a 30020000 		.4byte	.LASF101
 3760 0b4e 01       		.byte	0x1
 3761 0b4f A70B     		.2byte	0xba7
 3762 0b51 00000000 		.4byte	.LFB52
 3763 0b55 70000000 		.4byte	.LFE52-.LFB52
 3764 0b59 01       		.uleb128 0x1
 3765 0b5a 9C       		.byte	0x9c
 3766 0b5b 6E0B0000 		.4byte	0xb6e
 3767 0b5f 0E       		.uleb128 0xe
 3768 0b60 8A060000 		.4byte	.LASF102
 3769 0b64 01       		.byte	0x1
 3770 0b65 A70B     		.2byte	0xba7
 3771 0b67 6E0B0000 		.4byte	0xb6e
 3772 0b6b 01       		.uleb128 0x1
 3773 0b6c 50       		.byte	0x50
 3774 0b6d 00       		.byte	0
 3775 0b6e 06       		.uleb128 0x6
 3776 0b6f 04       		.byte	0x4
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 125


 3777 0b70 83000000 		.4byte	0x83
 3778 0b74 0A       		.uleb128 0xa
 3779 0b75 9C050000 		.4byte	.LASF103
 3780 0b79 01       		.byte	0x1
 3781 0b7a D30B     		.2byte	0xbd3
 3782 0b7c 00000000 		.4byte	.LFB53
 3783 0b80 20000000 		.4byte	.LFE53-.LFB53
 3784 0b84 01       		.uleb128 0x1
 3785 0b85 9C       		.byte	0x9c
 3786 0b86 AB0B0000 		.4byte	0xbab
 3787 0b8a 0B       		.uleb128 0xb
 3788 0b8b E3030000 		.4byte	.LASF104
 3789 0b8f 01       		.byte	0x1
 3790 0b90 D30B     		.2byte	0xbd3
 3791 0b92 83000000 		.4byte	0x83
 3792 0b96 55060000 		.4byte	.LLST46
 3793 0b9a 0C       		.uleb128 0xc
 3794 0b9b 28030000 		.4byte	.LASF105
 3795 0b9f 01       		.byte	0x1
 3796 0ba0 D50B     		.2byte	0xbd5
 3797 0ba2 83000000 		.4byte	0x83
 3798 0ba6 76060000 		.4byte	.LLST47
 3799 0baa 00       		.byte	0
 3800 0bab 0A       		.uleb128 0xa
 3801 0bac 7B030000 		.4byte	.LASF106
 3802 0bb0 01       		.byte	0x1
 3803 0bb1 EE0B     		.2byte	0xbee
 3804 0bb3 00000000 		.4byte	.LFB54
 3805 0bb7 20000000 		.4byte	.LFE54-.LFB54
 3806 0bbb 01       		.uleb128 0x1
 3807 0bbc 9C       		.byte	0x9c
 3808 0bbd E20B0000 		.4byte	0xbe2
 3809 0bc1 0B       		.uleb128 0xb
 3810 0bc2 E3030000 		.4byte	.LASF104
 3811 0bc6 01       		.byte	0x1
 3812 0bc7 EE0B     		.2byte	0xbee
 3813 0bc9 83000000 		.4byte	0x83
 3814 0bcd 94060000 		.4byte	.LLST48
 3815 0bd1 0C       		.uleb128 0xc
 3816 0bd2 28030000 		.4byte	.LASF105
 3817 0bd6 01       		.byte	0x1
 3818 0bd7 F00B     		.2byte	0xbf0
 3819 0bd9 83000000 		.4byte	0x83
 3820 0bdd B5060000 		.4byte	.LLST49
 3821 0be1 00       		.byte	0
 3822 0be2 0A       		.uleb128 0xa
 3823 0be3 0F070000 		.4byte	.LASF107
 3824 0be7 01       		.byte	0x1
 3825 0be8 090C     		.2byte	0xc09
 3826 0bea 00000000 		.4byte	.LFB55
 3827 0bee 20000000 		.4byte	.LFE55-.LFB55
 3828 0bf2 01       		.uleb128 0x1
 3829 0bf3 9C       		.byte	0x9c
 3830 0bf4 190C0000 		.4byte	0xc19
 3831 0bf8 0B       		.uleb128 0xb
 3832 0bf9 E3030000 		.4byte	.LASF104
 3833 0bfd 01       		.byte	0x1
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 126


 3834 0bfe 090C     		.2byte	0xc09
 3835 0c00 83000000 		.4byte	0x83
 3836 0c04 D3060000 		.4byte	.LLST50
 3837 0c08 0C       		.uleb128 0xc
 3838 0c09 28030000 		.4byte	.LASF105
 3839 0c0d 01       		.byte	0x1
 3840 0c0e 0B0C     		.2byte	0xc0b
 3841 0c10 83000000 		.4byte	0x83
 3842 0c14 F4060000 		.4byte	.LLST51
 3843 0c18 00       		.byte	0
 3844 0c19 0A       		.uleb128 0xa
 3845 0c1a F3030000 		.4byte	.LASF108
 3846 0c1e 01       		.byte	0x1
 3847 0c1f 260C     		.2byte	0xc26
 3848 0c21 00000000 		.4byte	.LFB56
 3849 0c25 68000000 		.4byte	.LFE56-.LFB56
 3850 0c29 01       		.uleb128 0x1
 3851 0c2a 9C       		.byte	0x9c
 3852 0c2b 6F0C0000 		.4byte	0xc6f
 3853 0c2f 0B       		.uleb128 0xb
 3854 0c30 B9000000 		.4byte	.LASF109
 3855 0c34 01       		.byte	0x1
 3856 0c35 260C     		.2byte	0xc26
 3857 0c37 83000000 		.4byte	0x83
 3858 0c3b 12070000 		.4byte	.LLST52
 3859 0c3f 0B       		.uleb128 0xb
 3860 0c40 E3030000 		.4byte	.LASF104
 3861 0c44 01       		.byte	0x1
 3862 0c45 260C     		.2byte	0xc26
 3863 0c47 83000000 		.4byte	0x83
 3864 0c4b 7E070000 		.4byte	.LLST53
 3865 0c4f 0C       		.uleb128 0xc
 3866 0c50 28030000 		.4byte	.LASF105
 3867 0c54 01       		.byte	0x1
 3868 0c55 280C     		.2byte	0xc28
 3869 0c57 83000000 		.4byte	0x83
 3870 0c5b EA070000 		.4byte	.LLST54
 3871 0c5f 13       		.uleb128 0x13
 3872 0c60 56000000 		.4byte	.LVL193
 3873 0c64 F0030000 		.4byte	0x3f0
 3874 0c68 14       		.uleb128 0x14
 3875 0c69 01       		.uleb128 0x1
 3876 0c6a 50       		.byte	0x50
 3877 0c6b 01       		.uleb128 0x1
 3878 0c6c 30       		.byte	0x30
 3879 0c6d 00       		.byte	0
 3880 0c6e 00       		.byte	0
 3881 0c6f 1A       		.uleb128 0x1a
 3882 0c70 EC000000 		.4byte	0xec
 3883 0c74 7F0C0000 		.4byte	0xc7f
 3884 0c78 1B       		.uleb128 0x1b
 3885 0c79 E5000000 		.4byte	0xe5
 3886 0c7d 04       		.byte	0x4
 3887 0c7e 00       		.byte	0
 3888 0c7f 1C       		.uleb128 0x1c
 3889 0c80 69060000 		.4byte	.LASF110
 3890 0c84 01       		.byte	0x1
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 127


 3891 0c85 22       		.byte	0x22
 3892 0c86 6F0C0000 		.4byte	0xc6f
 3893 0c8a 05       		.uleb128 0x5
 3894 0c8b 03       		.byte	0x3
 3895 0c8c 00000000 		.4byte	CySysTickCallbacks
 3896 0c90 1D       		.uleb128 0x1d
 3897 0c91 00050000 		.4byte	.LASF111
 3898 0c95 01       		.byte	0x1
 3899 0c96 1B       		.byte	0x1b
 3900 0c97 83000000 		.4byte	0x83
 3901 0c9b 05       		.uleb128 0x5
 3902 0c9c 03       		.byte	0x3
 3903 0c9d 00000000 		.4byte	cydelayFreqHz
 3904 0ca1 1D       		.uleb128 0x1d
 3905 0ca2 7E010000 		.4byte	.LASF112
 3906 0ca6 01       		.byte	0x1
 3907 0ca7 1C       		.byte	0x1c
 3908 0ca8 83000000 		.4byte	0x83
 3909 0cac 05       		.uleb128 0x5
 3910 0cad 03       		.byte	0x3
 3911 0cae 00000000 		.4byte	cydelayFreqKhz
 3912 0cb2 1D       		.uleb128 0x1d
 3913 0cb3 F0060000 		.4byte	.LASF113
 3914 0cb7 01       		.byte	0x1
 3915 0cb8 1D       		.byte	0x1d
 3916 0cb9 6B000000 		.4byte	0x6b
 3917 0cbd 05       		.uleb128 0x5
 3918 0cbe 03       		.byte	0x3
 3919 0cbf 00000000 		.4byte	cydelayFreqMhz
 3920 0cc3 1D       		.uleb128 0x1d
 3921 0cc4 03020000 		.4byte	.LASF114
 3922 0cc8 01       		.byte	0x1
 3923 0cc9 1E       		.byte	0x1e
 3924 0cca 83000000 		.4byte	0x83
 3925 0cce 05       		.uleb128 0x5
 3926 0ccf 03       		.byte	0x3
 3927 0cd0 00000000 		.4byte	cydelay32kMs
 3928 0cd4 1D       		.uleb128 0x1d
 3929 0cd5 9B000000 		.4byte	.LASF115
 3930 0cd9 01       		.byte	0x1
 3931 0cda 36       		.byte	0x36
 3932 0cdb 83000000 		.4byte	0x83
 3933 0cdf 05       		.uleb128 0x5
 3934 0ce0 03       		.byte	0x3
 3935 0ce1 00000000 		.4byte	CySysTickInitVar
 3936 0ce5 1A       		.uleb128 0x1a
 3937 0ce6 6B000000 		.4byte	0x6b
 3938 0cea F50C0000 		.4byte	0xcf5
 3939 0cee 1B       		.uleb128 0x1b
 3940 0cef E5000000 		.4byte	0xe5
 3941 0cf3 2D       		.byte	0x2d
 3942 0cf4 00       		.byte	0
 3943 0cf5 1D       		.uleb128 0x1d
 3944 0cf6 4F040000 		.4byte	.LASF116
 3945 0cfa 01       		.byte	0x1
 3946 0cfb 3B       		.byte	0x3b
 3947 0cfc 060D0000 		.4byte	0xd06
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 128


 3948 0d00 05       		.uleb128 0x5
 3949 0d01 03       		.byte	0x3
 3950 0d02 00000000 		.4byte	cyImoFreqMhz2Reg
 3951 0d06 1E       		.uleb128 0x1e
 3952 0d07 E50C0000 		.4byte	0xce5
 3953 0d0b 1D       		.uleb128 0x1d
 3954 0d0c 40000000 		.4byte	.LASF117
 3955 0d10 01       		.byte	0x1
 3956 0d11 5B       		.byte	0x5b
 3957 0d12 83000000 		.4byte	0x83
 3958 0d16 05       		.uleb128 0x5
 3959 0d17 03       		.byte	0x3
 3960 0d18 00000000 		.4byte	CySysClkPumpConfig
 3961 0d1c 1F       		.uleb128 0x1f
 3962 0d1d AD020000 		.4byte	.LASF122
 3963 0d21 03       		.byte	0x3
 3964 0d22 E5       		.byte	0xe5
 3965 0d23 6B000000 		.4byte	0x6b
 3966 0d27 20       		.uleb128 0x20
 3967 0d28 25050000 		.4byte	.LASF123
 3968 0d2c 03       		.byte	0x3
 3969 0d2d E6       		.byte	0xe6
 3970 0d2e 380D0000 		.4byte	0xd38
 3971 0d32 21       		.uleb128 0x21
 3972 0d33 6B000000 		.4byte	0x6b
 3973 0d37 00       		.byte	0
 3974 0d38 22       		.uleb128 0x22
 3975 0d39 78050000 		.4byte	.LASF124
 3976 0d3d 03       		.byte	0x3
 3977 0d3e DC       		.byte	0xdc
 3978 0d3f 21       		.uleb128 0x21
 3979 0d40 83000000 		.4byte	0x83
 3980 0d44 00       		.byte	0
 3981 0d45 00       		.byte	0
 3982              		.section	.debug_abbrev,"",%progbits
 3983              	.Ldebug_abbrev0:
 3984 0000 01       		.uleb128 0x1
 3985 0001 11       		.uleb128 0x11
 3986 0002 01       		.byte	0x1
 3987 0003 25       		.uleb128 0x25
 3988 0004 0E       		.uleb128 0xe
 3989 0005 13       		.uleb128 0x13
 3990 0006 0B       		.uleb128 0xb
 3991 0007 03       		.uleb128 0x3
 3992 0008 0E       		.uleb128 0xe
 3993 0009 1B       		.uleb128 0x1b
 3994 000a 0E       		.uleb128 0xe
 3995 000b 55       		.uleb128 0x55
 3996 000c 17       		.uleb128 0x17
 3997 000d 11       		.uleb128 0x11
 3998 000e 01       		.uleb128 0x1
 3999 000f 10       		.uleb128 0x10
 4000 0010 17       		.uleb128 0x17
 4001 0011 00       		.byte	0
 4002 0012 00       		.byte	0
 4003 0013 02       		.uleb128 0x2
 4004 0014 24       		.uleb128 0x24
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 129


 4005 0015 00       		.byte	0
 4006 0016 0B       		.uleb128 0xb
 4007 0017 0B       		.uleb128 0xb
 4008 0018 3E       		.uleb128 0x3e
 4009 0019 0B       		.uleb128 0xb
 4010 001a 03       		.uleb128 0x3
 4011 001b 0E       		.uleb128 0xe
 4012 001c 00       		.byte	0
 4013 001d 00       		.byte	0
 4014 001e 03       		.uleb128 0x3
 4015 001f 24       		.uleb128 0x24
 4016 0020 00       		.byte	0
 4017 0021 0B       		.uleb128 0xb
 4018 0022 0B       		.uleb128 0xb
 4019 0023 3E       		.uleb128 0x3e
 4020 0024 0B       		.uleb128 0xb
 4021 0025 03       		.uleb128 0x3
 4022 0026 08       		.uleb128 0x8
 4023 0027 00       		.byte	0
 4024 0028 00       		.byte	0
 4025 0029 04       		.uleb128 0x4
 4026 002a 16       		.uleb128 0x16
 4027 002b 00       		.byte	0
 4028 002c 03       		.uleb128 0x3
 4029 002d 0E       		.uleb128 0xe
 4030 002e 3A       		.uleb128 0x3a
 4031 002f 0B       		.uleb128 0xb
 4032 0030 3B       		.uleb128 0x3b
 4033 0031 05       		.uleb128 0x5
 4034 0032 49       		.uleb128 0x49
 4035 0033 13       		.uleb128 0x13
 4036 0034 00       		.byte	0
 4037 0035 00       		.byte	0
 4038 0036 05       		.uleb128 0x5
 4039 0037 35       		.uleb128 0x35
 4040 0038 00       		.byte	0
 4041 0039 49       		.uleb128 0x49
 4042 003a 13       		.uleb128 0x13
 4043 003b 00       		.byte	0
 4044 003c 00       		.byte	0
 4045 003d 06       		.uleb128 0x6
 4046 003e 0F       		.uleb128 0xf
 4047 003f 00       		.byte	0
 4048 0040 0B       		.uleb128 0xb
 4049 0041 0B       		.uleb128 0xb
 4050 0042 49       		.uleb128 0x49
 4051 0043 13       		.uleb128 0x13
 4052 0044 00       		.byte	0
 4053 0045 00       		.byte	0
 4054 0046 07       		.uleb128 0x7
 4055 0047 15       		.uleb128 0x15
 4056 0048 00       		.byte	0
 4057 0049 27       		.uleb128 0x27
 4058 004a 19       		.uleb128 0x19
 4059 004b 00       		.byte	0
 4060 004c 00       		.byte	0
 4061 004d 08       		.uleb128 0x8
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 130


 4062 004e 16       		.uleb128 0x16
 4063 004f 00       		.byte	0
 4064 0050 03       		.uleb128 0x3
 4065 0051 0E       		.uleb128 0xe
 4066 0052 3A       		.uleb128 0x3a
 4067 0053 0B       		.uleb128 0xb
 4068 0054 3B       		.uleb128 0x3b
 4069 0055 0B       		.uleb128 0xb
 4070 0056 49       		.uleb128 0x49
 4071 0057 13       		.uleb128 0x13
 4072 0058 00       		.byte	0
 4073 0059 00       		.byte	0
 4074 005a 09       		.uleb128 0x9
 4075 005b 2E       		.uleb128 0x2e
 4076 005c 00       		.byte	0
 4077 005d 3F       		.uleb128 0x3f
 4078 005e 19       		.uleb128 0x19
 4079 005f 03       		.uleb128 0x3
 4080 0060 0E       		.uleb128 0xe
 4081 0061 3A       		.uleb128 0x3a
 4082 0062 0B       		.uleb128 0xb
 4083 0063 3B       		.uleb128 0x3b
 4084 0064 0B       		.uleb128 0xb
 4085 0065 27       		.uleb128 0x27
 4086 0066 19       		.uleb128 0x19
 4087 0067 11       		.uleb128 0x11
 4088 0068 01       		.uleb128 0x1
 4089 0069 12       		.uleb128 0x12
 4090 006a 06       		.uleb128 0x6
 4091 006b 40       		.uleb128 0x40
 4092 006c 18       		.uleb128 0x18
 4093 006d 9742     		.uleb128 0x2117
 4094 006f 19       		.uleb128 0x19
 4095 0070 00       		.byte	0
 4096 0071 00       		.byte	0
 4097 0072 0A       		.uleb128 0xa
 4098 0073 2E       		.uleb128 0x2e
 4099 0074 01       		.byte	0x1
 4100 0075 3F       		.uleb128 0x3f
 4101 0076 19       		.uleb128 0x19
 4102 0077 03       		.uleb128 0x3
 4103 0078 0E       		.uleb128 0xe
 4104 0079 3A       		.uleb128 0x3a
 4105 007a 0B       		.uleb128 0xb
 4106 007b 3B       		.uleb128 0x3b
 4107 007c 05       		.uleb128 0x5
 4108 007d 27       		.uleb128 0x27
 4109 007e 19       		.uleb128 0x19
 4110 007f 11       		.uleb128 0x11
 4111 0080 01       		.uleb128 0x1
 4112 0081 12       		.uleb128 0x12
 4113 0082 06       		.uleb128 0x6
 4114 0083 40       		.uleb128 0x40
 4115 0084 18       		.uleb128 0x18
 4116 0085 9742     		.uleb128 0x2117
 4117 0087 19       		.uleb128 0x19
 4118 0088 01       		.uleb128 0x1
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 131


 4119 0089 13       		.uleb128 0x13
 4120 008a 00       		.byte	0
 4121 008b 00       		.byte	0
 4122 008c 0B       		.uleb128 0xb
 4123 008d 05       		.uleb128 0x5
 4124 008e 00       		.byte	0
 4125 008f 03       		.uleb128 0x3
 4126 0090 0E       		.uleb128 0xe
 4127 0091 3A       		.uleb128 0x3a
 4128 0092 0B       		.uleb128 0xb
 4129 0093 3B       		.uleb128 0x3b
 4130 0094 05       		.uleb128 0x5
 4131 0095 49       		.uleb128 0x49
 4132 0096 13       		.uleb128 0x13
 4133 0097 02       		.uleb128 0x2
 4134 0098 17       		.uleb128 0x17
 4135 0099 00       		.byte	0
 4136 009a 00       		.byte	0
 4137 009b 0C       		.uleb128 0xc
 4138 009c 34       		.uleb128 0x34
 4139 009d 00       		.byte	0
 4140 009e 03       		.uleb128 0x3
 4141 009f 0E       		.uleb128 0xe
 4142 00a0 3A       		.uleb128 0x3a
 4143 00a1 0B       		.uleb128 0xb
 4144 00a2 3B       		.uleb128 0x3b
 4145 00a3 05       		.uleb128 0x5
 4146 00a4 49       		.uleb128 0x49
 4147 00a5 13       		.uleb128 0x13
 4148 00a6 02       		.uleb128 0x2
 4149 00a7 17       		.uleb128 0x17
 4150 00a8 00       		.byte	0
 4151 00a9 00       		.byte	0
 4152 00aa 0D       		.uleb128 0xd
 4153 00ab 898201   		.uleb128 0x4109
 4154 00ae 00       		.byte	0
 4155 00af 11       		.uleb128 0x11
 4156 00b0 01       		.uleb128 0x1
 4157 00b1 31       		.uleb128 0x31
 4158 00b2 13       		.uleb128 0x13
 4159 00b3 00       		.byte	0
 4160 00b4 00       		.byte	0
 4161 00b5 0E       		.uleb128 0xe
 4162 00b6 05       		.uleb128 0x5
 4163 00b7 00       		.byte	0
 4164 00b8 03       		.uleb128 0x3
 4165 00b9 0E       		.uleb128 0xe
 4166 00ba 3A       		.uleb128 0x3a
 4167 00bb 0B       		.uleb128 0xb
 4168 00bc 3B       		.uleb128 0x3b
 4169 00bd 05       		.uleb128 0x5
 4170 00be 49       		.uleb128 0x49
 4171 00bf 13       		.uleb128 0x13
 4172 00c0 02       		.uleb128 0x2
 4173 00c1 18       		.uleb128 0x18
 4174 00c2 00       		.byte	0
 4175 00c3 00       		.byte	0
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 132


 4176 00c4 0F       		.uleb128 0xf
 4177 00c5 2E       		.uleb128 0x2e
 4178 00c6 01       		.byte	0x1
 4179 00c7 3F       		.uleb128 0x3f
 4180 00c8 19       		.uleb128 0x19
 4181 00c9 03       		.uleb128 0x3
 4182 00ca 0E       		.uleb128 0xe
 4183 00cb 3A       		.uleb128 0x3a
 4184 00cc 0B       		.uleb128 0xb
 4185 00cd 3B       		.uleb128 0x3b
 4186 00ce 05       		.uleb128 0x5
 4187 00cf 27       		.uleb128 0x27
 4188 00d0 19       		.uleb128 0x19
 4189 00d1 49       		.uleb128 0x49
 4190 00d2 13       		.uleb128 0x13
 4191 00d3 11       		.uleb128 0x11
 4192 00d4 01       		.uleb128 0x1
 4193 00d5 12       		.uleb128 0x12
 4194 00d6 06       		.uleb128 0x6
 4195 00d7 40       		.uleb128 0x40
 4196 00d8 18       		.uleb128 0x18
 4197 00d9 9742     		.uleb128 0x2117
 4198 00db 19       		.uleb128 0x19
 4199 00dc 01       		.uleb128 0x1
 4200 00dd 13       		.uleb128 0x13
 4201 00de 00       		.byte	0
 4202 00df 00       		.byte	0
 4203 00e0 10       		.uleb128 0x10
 4204 00e1 2E       		.uleb128 0x2e
 4205 00e2 00       		.byte	0
 4206 00e3 3F       		.uleb128 0x3f
 4207 00e4 19       		.uleb128 0x19
 4208 00e5 03       		.uleb128 0x3
 4209 00e6 0E       		.uleb128 0xe
 4210 00e7 3A       		.uleb128 0x3a
 4211 00e8 0B       		.uleb128 0xb
 4212 00e9 3B       		.uleb128 0x3b
 4213 00ea 05       		.uleb128 0x5
 4214 00eb 27       		.uleb128 0x27
 4215 00ec 19       		.uleb128 0x19
 4216 00ed 11       		.uleb128 0x11
 4217 00ee 01       		.uleb128 0x1
 4218 00ef 12       		.uleb128 0x12
 4219 00f0 06       		.uleb128 0x6
 4220 00f1 40       		.uleb128 0x40
 4221 00f2 18       		.uleb128 0x18
 4222 00f3 9742     		.uleb128 0x2117
 4223 00f5 19       		.uleb128 0x19
 4224 00f6 00       		.byte	0
 4225 00f7 00       		.byte	0
 4226 00f8 11       		.uleb128 0x11
 4227 00f9 34       		.uleb128 0x34
 4228 00fa 00       		.byte	0
 4229 00fb 03       		.uleb128 0x3
 4230 00fc 0E       		.uleb128 0xe
 4231 00fd 3A       		.uleb128 0x3a
 4232 00fe 0B       		.uleb128 0xb
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 133


 4233 00ff 3B       		.uleb128 0x3b
 4234 0100 05       		.uleb128 0x5
 4235 0101 49       		.uleb128 0x49
 4236 0102 13       		.uleb128 0x13
 4237 0103 02       		.uleb128 0x2
 4238 0104 18       		.uleb128 0x18
 4239 0105 00       		.byte	0
 4240 0106 00       		.byte	0
 4241 0107 12       		.uleb128 0x12
 4242 0108 2E       		.uleb128 0x2e
 4243 0109 00       		.byte	0
 4244 010a 3F       		.uleb128 0x3f
 4245 010b 19       		.uleb128 0x19
 4246 010c 03       		.uleb128 0x3
 4247 010d 0E       		.uleb128 0xe
 4248 010e 3A       		.uleb128 0x3a
 4249 010f 0B       		.uleb128 0xb
 4250 0110 3B       		.uleb128 0x3b
 4251 0111 05       		.uleb128 0x5
 4252 0112 27       		.uleb128 0x27
 4253 0113 19       		.uleb128 0x19
 4254 0114 49       		.uleb128 0x49
 4255 0115 13       		.uleb128 0x13
 4256 0116 11       		.uleb128 0x11
 4257 0117 01       		.uleb128 0x1
 4258 0118 12       		.uleb128 0x12
 4259 0119 06       		.uleb128 0x6
 4260 011a 40       		.uleb128 0x40
 4261 011b 18       		.uleb128 0x18
 4262 011c 9742     		.uleb128 0x2117
 4263 011e 19       		.uleb128 0x19
 4264 011f 00       		.byte	0
 4265 0120 00       		.byte	0
 4266 0121 13       		.uleb128 0x13
 4267 0122 898201   		.uleb128 0x4109
 4268 0125 01       		.byte	0x1
 4269 0126 11       		.uleb128 0x11
 4270 0127 01       		.uleb128 0x1
 4271 0128 31       		.uleb128 0x31
 4272 0129 13       		.uleb128 0x13
 4273 012a 00       		.byte	0
 4274 012b 00       		.byte	0
 4275 012c 14       		.uleb128 0x14
 4276 012d 8A8201   		.uleb128 0x410a
 4277 0130 00       		.byte	0
 4278 0131 02       		.uleb128 0x2
 4279 0132 18       		.uleb128 0x18
 4280 0133 9142     		.uleb128 0x2111
 4281 0135 18       		.uleb128 0x18
 4282 0136 00       		.byte	0
 4283 0137 00       		.byte	0
 4284 0138 15       		.uleb128 0x15
 4285 0139 34       		.uleb128 0x34
 4286 013a 00       		.byte	0
 4287 013b 03       		.uleb128 0x3
 4288 013c 0E       		.uleb128 0xe
 4289 013d 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 134


 4290 013e 0B       		.uleb128 0xb
 4291 013f 3B       		.uleb128 0x3b
 4292 0140 05       		.uleb128 0x5
 4293 0141 49       		.uleb128 0x49
 4294 0142 13       		.uleb128 0x13
 4295 0143 1C       		.uleb128 0x1c
 4296 0144 06       		.uleb128 0x6
 4297 0145 00       		.byte	0
 4298 0146 00       		.byte	0
 4299 0147 16       		.uleb128 0x16
 4300 0148 898201   		.uleb128 0x4109
 4301 014b 01       		.byte	0x1
 4302 014c 11       		.uleb128 0x11
 4303 014d 01       		.uleb128 0x1
 4304 014e 31       		.uleb128 0x31
 4305 014f 13       		.uleb128 0x13
 4306 0150 01       		.uleb128 0x1
 4307 0151 13       		.uleb128 0x13
 4308 0152 00       		.byte	0
 4309 0153 00       		.byte	0
 4310 0154 17       		.uleb128 0x17
 4311 0155 2E       		.uleb128 0x2e
 4312 0156 01       		.byte	0x1
 4313 0157 3F       		.uleb128 0x3f
 4314 0158 19       		.uleb128 0x19
 4315 0159 03       		.uleb128 0x3
 4316 015a 0E       		.uleb128 0xe
 4317 015b 3A       		.uleb128 0x3a
 4318 015c 0B       		.uleb128 0xb
 4319 015d 3B       		.uleb128 0x3b
 4320 015e 05       		.uleb128 0x5
 4321 015f 27       		.uleb128 0x27
 4322 0160 19       		.uleb128 0x19
 4323 0161 11       		.uleb128 0x11
 4324 0162 01       		.uleb128 0x1
 4325 0163 12       		.uleb128 0x12
 4326 0164 06       		.uleb128 0x6
 4327 0165 40       		.uleb128 0x40
 4328 0166 18       		.uleb128 0x18
 4329 0167 9642     		.uleb128 0x2116
 4330 0169 19       		.uleb128 0x19
 4331 016a 01       		.uleb128 0x1
 4332 016b 13       		.uleb128 0x13
 4333 016c 00       		.byte	0
 4334 016d 00       		.byte	0
 4335 016e 18       		.uleb128 0x18
 4336 016f 2E       		.uleb128 0x2e
 4337 0170 01       		.byte	0x1
 4338 0171 03       		.uleb128 0x3
 4339 0172 0E       		.uleb128 0xe
 4340 0173 3A       		.uleb128 0x3a
 4341 0174 0B       		.uleb128 0xb
 4342 0175 3B       		.uleb128 0x3b
 4343 0176 05       		.uleb128 0x5
 4344 0177 27       		.uleb128 0x27
 4345 0178 19       		.uleb128 0x19
 4346 0179 11       		.uleb128 0x11
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 135


 4347 017a 01       		.uleb128 0x1
 4348 017b 12       		.uleb128 0x12
 4349 017c 06       		.uleb128 0x6
 4350 017d 40       		.uleb128 0x40
 4351 017e 18       		.uleb128 0x18
 4352 017f 9642     		.uleb128 0x2116
 4353 0181 19       		.uleb128 0x19
 4354 0182 01       		.uleb128 0x1
 4355 0183 13       		.uleb128 0x13
 4356 0184 00       		.byte	0
 4357 0185 00       		.byte	0
 4358 0186 19       		.uleb128 0x19
 4359 0187 34       		.uleb128 0x34
 4360 0188 00       		.byte	0
 4361 0189 03       		.uleb128 0x3
 4362 018a 08       		.uleb128 0x8
 4363 018b 3A       		.uleb128 0x3a
 4364 018c 0B       		.uleb128 0xb
 4365 018d 3B       		.uleb128 0x3b
 4366 018e 05       		.uleb128 0x5
 4367 018f 49       		.uleb128 0x49
 4368 0190 13       		.uleb128 0x13
 4369 0191 02       		.uleb128 0x2
 4370 0192 17       		.uleb128 0x17
 4371 0193 00       		.byte	0
 4372 0194 00       		.byte	0
 4373 0195 1A       		.uleb128 0x1a
 4374 0196 01       		.uleb128 0x1
 4375 0197 01       		.byte	0x1
 4376 0198 49       		.uleb128 0x49
 4377 0199 13       		.uleb128 0x13
 4378 019a 01       		.uleb128 0x1
 4379 019b 13       		.uleb128 0x13
 4380 019c 00       		.byte	0
 4381 019d 00       		.byte	0
 4382 019e 1B       		.uleb128 0x1b
 4383 019f 21       		.uleb128 0x21
 4384 01a0 00       		.byte	0
 4385 01a1 49       		.uleb128 0x49
 4386 01a2 13       		.uleb128 0x13
 4387 01a3 2F       		.uleb128 0x2f
 4388 01a4 0B       		.uleb128 0xb
 4389 01a5 00       		.byte	0
 4390 01a6 00       		.byte	0
 4391 01a7 1C       		.uleb128 0x1c
 4392 01a8 34       		.uleb128 0x34
 4393 01a9 00       		.byte	0
 4394 01aa 03       		.uleb128 0x3
 4395 01ab 0E       		.uleb128 0xe
 4396 01ac 3A       		.uleb128 0x3a
 4397 01ad 0B       		.uleb128 0xb
 4398 01ae 3B       		.uleb128 0x3b
 4399 01af 0B       		.uleb128 0xb
 4400 01b0 49       		.uleb128 0x49
 4401 01b1 13       		.uleb128 0x13
 4402 01b2 02       		.uleb128 0x2
 4403 01b3 18       		.uleb128 0x18
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 136


 4404 01b4 00       		.byte	0
 4405 01b5 00       		.byte	0
 4406 01b6 1D       		.uleb128 0x1d
 4407 01b7 34       		.uleb128 0x34
 4408 01b8 00       		.byte	0
 4409 01b9 03       		.uleb128 0x3
 4410 01ba 0E       		.uleb128 0xe
 4411 01bb 3A       		.uleb128 0x3a
 4412 01bc 0B       		.uleb128 0xb
 4413 01bd 3B       		.uleb128 0x3b
 4414 01be 0B       		.uleb128 0xb
 4415 01bf 49       		.uleb128 0x49
 4416 01c0 13       		.uleb128 0x13
 4417 01c1 3F       		.uleb128 0x3f
 4418 01c2 19       		.uleb128 0x19
 4419 01c3 02       		.uleb128 0x2
 4420 01c4 18       		.uleb128 0x18
 4421 01c5 00       		.byte	0
 4422 01c6 00       		.byte	0
 4423 01c7 1E       		.uleb128 0x1e
 4424 01c8 26       		.uleb128 0x26
 4425 01c9 00       		.byte	0
 4426 01ca 49       		.uleb128 0x49
 4427 01cb 13       		.uleb128 0x13
 4428 01cc 00       		.byte	0
 4429 01cd 00       		.byte	0
 4430 01ce 1F       		.uleb128 0x1f
 4431 01cf 2E       		.uleb128 0x2e
 4432 01d0 00       		.byte	0
 4433 01d1 3F       		.uleb128 0x3f
 4434 01d2 19       		.uleb128 0x19
 4435 01d3 03       		.uleb128 0x3
 4436 01d4 0E       		.uleb128 0xe
 4437 01d5 3A       		.uleb128 0x3a
 4438 01d6 0B       		.uleb128 0xb
 4439 01d7 3B       		.uleb128 0x3b
 4440 01d8 0B       		.uleb128 0xb
 4441 01d9 27       		.uleb128 0x27
 4442 01da 19       		.uleb128 0x19
 4443 01db 49       		.uleb128 0x49
 4444 01dc 13       		.uleb128 0x13
 4445 01dd 3C       		.uleb128 0x3c
 4446 01de 19       		.uleb128 0x19
 4447 01df 00       		.byte	0
 4448 01e0 00       		.byte	0
 4449 01e1 20       		.uleb128 0x20
 4450 01e2 2E       		.uleb128 0x2e
 4451 01e3 01       		.byte	0x1
 4452 01e4 3F       		.uleb128 0x3f
 4453 01e5 19       		.uleb128 0x19
 4454 01e6 03       		.uleb128 0x3
 4455 01e7 0E       		.uleb128 0xe
 4456 01e8 3A       		.uleb128 0x3a
 4457 01e9 0B       		.uleb128 0xb
 4458 01ea 3B       		.uleb128 0x3b
 4459 01eb 0B       		.uleb128 0xb
 4460 01ec 27       		.uleb128 0x27
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 137


 4461 01ed 19       		.uleb128 0x19
 4462 01ee 3C       		.uleb128 0x3c
 4463 01ef 19       		.uleb128 0x19
 4464 01f0 01       		.uleb128 0x1
 4465 01f1 13       		.uleb128 0x13
 4466 01f2 00       		.byte	0
 4467 01f3 00       		.byte	0
 4468 01f4 21       		.uleb128 0x21
 4469 01f5 05       		.uleb128 0x5
 4470 01f6 00       		.byte	0
 4471 01f7 49       		.uleb128 0x49
 4472 01f8 13       		.uleb128 0x13
 4473 01f9 00       		.byte	0
 4474 01fa 00       		.byte	0
 4475 01fb 22       		.uleb128 0x22
 4476 01fc 2E       		.uleb128 0x2e
 4477 01fd 01       		.byte	0x1
 4478 01fe 3F       		.uleb128 0x3f
 4479 01ff 19       		.uleb128 0x19
 4480 0200 03       		.uleb128 0x3
 4481 0201 0E       		.uleb128 0xe
 4482 0202 3A       		.uleb128 0x3a
 4483 0203 0B       		.uleb128 0xb
 4484 0204 3B       		.uleb128 0x3b
 4485 0205 0B       		.uleb128 0xb
 4486 0206 27       		.uleb128 0x27
 4487 0207 19       		.uleb128 0x19
 4488 0208 3C       		.uleb128 0x3c
 4489 0209 19       		.uleb128 0x19
 4490 020a 00       		.byte	0
 4491 020b 00       		.byte	0
 4492 020c 00       		.byte	0
 4493              		.section	.debug_loc,"",%progbits
 4494              	.Ldebug_loc0:
 4495              	.LLST0:
 4496 0000 00000000 		.4byte	.LVL0
 4497 0004 07000000 		.4byte	.LVL1-1
 4498 0008 0100     		.2byte	0x1
 4499 000a 50       		.byte	0x50
 4500 000b 07000000 		.4byte	.LVL1-1
 4501 000f 1A000000 		.4byte	.LVL5
 4502 0013 0100     		.2byte	0x1
 4503 0015 54       		.byte	0x54
 4504 0016 1A000000 		.4byte	.LVL5
 4505 001a 20000000 		.4byte	.LFE4
 4506 001e 0400     		.2byte	0x4
 4507 0020 F3       		.byte	0xf3
 4508 0021 01       		.uleb128 0x1
 4509 0022 50       		.byte	0x50
 4510 0023 9F       		.byte	0x9f
 4511 0024 00000000 		.4byte	0
 4512 0028 00000000 		.4byte	0
 4513              	.LLST1:
 4514 002c 08000000 		.4byte	.LVL1
 4515 0030 19000000 		.4byte	.LVL4-1
 4516 0034 0100     		.2byte	0x1
 4517 0036 50       		.byte	0x50
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 138


 4518 0037 00000000 		.4byte	0
 4519 003b 00000000 		.4byte	0
 4520              	.LLST2:
 4521 003f 10000000 		.4byte	.LVL2
 4522 0043 14000000 		.4byte	.LVL3
 4523 0047 0100     		.2byte	0x1
 4524 0049 52       		.byte	0x52
 4525 004a 14000000 		.4byte	.LVL3
 4526 004e 19000000 		.4byte	.LVL4-1
 4527 0052 0100     		.2byte	0x1
 4528 0054 53       		.byte	0x53
 4529 0055 00000000 		.4byte	0
 4530 0059 00000000 		.4byte	0
 4531              	.LLST3:
 4532 005d 06000000 		.4byte	.LVL7
 4533 0061 11000000 		.4byte	.LVL9-1
 4534 0065 0100     		.2byte	0x1
 4535 0067 50       		.byte	0x50
 4536 0068 00000000 		.4byte	0
 4537 006c 00000000 		.4byte	0
 4538              	.LLST4:
 4539 0070 0E000000 		.4byte	.LVL8
 4540 0074 14000000 		.4byte	.LVL10
 4541 0078 0100     		.2byte	0x1
 4542 007a 54       		.byte	0x54
 4543 007b 14000000 		.4byte	.LVL10
 4544 007f 1C000000 		.4byte	.LFE6
 4545 0083 0100     		.2byte	0x1
 4546 0085 50       		.byte	0x50
 4547 0086 00000000 		.4byte	0
 4548 008a 00000000 		.4byte	0
 4549              	.LLST5:
 4550 008e 00000000 		.4byte	.LVL11
 4551 0092 07000000 		.4byte	.LVL12-1
 4552 0096 0100     		.2byte	0x1
 4553 0098 50       		.byte	0x50
 4554 0099 07000000 		.4byte	.LVL12-1
 4555 009d 0C000000 		.4byte	.LVL13
 4556 00a1 0100     		.2byte	0x1
 4557 00a3 54       		.byte	0x54
 4558 00a4 0C000000 		.4byte	.LVL13
 4559 00a8 28000000 		.4byte	.LFE7
 4560 00ac 0400     		.2byte	0x4
 4561 00ae F3       		.byte	0xf3
 4562 00af 01       		.uleb128 0x1
 4563 00b0 50       		.byte	0x50
 4564 00b1 9F       		.byte	0x9f
 4565 00b2 00000000 		.4byte	0
 4566 00b6 00000000 		.4byte	0
 4567              	.LLST6:
 4568 00ba 08000000 		.4byte	.LVL12
 4569 00be 1D000000 		.4byte	.LVL14-1
 4570 00c2 0100     		.2byte	0x1
 4571 00c4 50       		.byte	0x50
 4572 00c5 00000000 		.4byte	0
 4573 00c9 00000000 		.4byte	0
 4574              	.LLST7:
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 139


 4575 00cd 00000000 		.4byte	.LVL16
 4576 00d1 04000000 		.4byte	.LVL17
 4577 00d5 0100     		.2byte	0x1
 4578 00d7 50       		.byte	0x50
 4579 00d8 04000000 		.4byte	.LVL17
 4580 00dc 14000000 		.4byte	.LFE17
 4581 00e0 0100     		.2byte	0x1
 4582 00e2 52       		.byte	0x52
 4583 00e3 00000000 		.4byte	0
 4584 00e7 00000000 		.4byte	0
 4585              	.LLST8:
 4586 00eb 00000000 		.4byte	.LVL22
 4587 00ef 04000000 		.4byte	.LVL23
 4588 00f3 0100     		.2byte	0x1
 4589 00f5 50       		.byte	0x50
 4590 00f6 04000000 		.4byte	.LVL23
 4591 00fa 14000000 		.4byte	.LFE26
 4592 00fe 0400     		.2byte	0x4
 4593 0100 F3       		.byte	0xf3
 4594 0101 01       		.uleb128 0x1
 4595 0102 50       		.byte	0x50
 4596 0103 9F       		.byte	0x9f
 4597 0104 00000000 		.4byte	0
 4598 0108 00000000 		.4byte	0
 4599              	.LLST9:
 4600 010c 00000000 		.4byte	.LVL24
 4601 0110 08000000 		.4byte	.LVL25
 4602 0114 0100     		.2byte	0x1
 4603 0116 50       		.byte	0x50
 4604 0117 08000000 		.4byte	.LVL25
 4605 011b 18000000 		.4byte	.LFE27
 4606 011f 0400     		.2byte	0x4
 4607 0121 F3       		.byte	0xf3
 4608 0122 01       		.uleb128 0x1
 4609 0123 50       		.byte	0x50
 4610 0124 9F       		.byte	0x9f
 4611 0125 00000000 		.4byte	0
 4612 0129 00000000 		.4byte	0
 4613              	.LLST10:
 4614 012d 00000000 		.4byte	.LVL26
 4615 0131 04000000 		.4byte	.LVL27
 4616 0135 0100     		.2byte	0x1
 4617 0137 50       		.byte	0x50
 4618 0138 04000000 		.4byte	.LVL27
 4619 013c 14000000 		.4byte	.LFE28
 4620 0140 0400     		.2byte	0x4
 4621 0142 F3       		.byte	0xf3
 4622 0143 01       		.uleb128 0x1
 4623 0144 50       		.byte	0x50
 4624 0145 9F       		.byte	0x9f
 4625 0146 00000000 		.4byte	0
 4626 014a 00000000 		.4byte	0
 4627              	.LLST11:
 4628 014e 00000000 		.4byte	.LVL28
 4629 0152 04000000 		.4byte	.LVL29
 4630 0156 0100     		.2byte	0x1
 4631 0158 50       		.byte	0x50
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 140


 4632 0159 04000000 		.4byte	.LVL29
 4633 015d 14000000 		.4byte	.LFE29
 4634 0161 0400     		.2byte	0x4
 4635 0163 F3       		.byte	0xf3
 4636 0164 01       		.uleb128 0x1
 4637 0165 50       		.byte	0x50
 4638 0166 9F       		.byte	0x9f
 4639 0167 00000000 		.4byte	0
 4640 016b 00000000 		.4byte	0
 4641              	.LLST12:
 4642 016f 00000000 		.4byte	.LVL30
 4643 0173 04000000 		.4byte	.LVL31
 4644 0177 0100     		.2byte	0x1
 4645 0179 50       		.byte	0x50
 4646 017a 04000000 		.4byte	.LVL31
 4647 017e 14000000 		.4byte	.LFE30
 4648 0182 0400     		.2byte	0x4
 4649 0184 F3       		.byte	0xf3
 4650 0185 01       		.uleb128 0x1
 4651 0186 50       		.byte	0x50
 4652 0187 9F       		.byte	0x9f
 4653 0188 00000000 		.4byte	0
 4654 018c 00000000 		.4byte	0
 4655              	.LLST13:
 4656 0190 00000000 		.4byte	.LVL33
 4657 0194 13000000 		.4byte	.LVL34-1
 4658 0198 0100     		.2byte	0x1
 4659 019a 50       		.byte	0x50
 4660 019b 13000000 		.4byte	.LVL34-1
 4661 019f 18000000 		.4byte	.LVL35
 4662 01a3 0100     		.2byte	0x1
 4663 01a5 54       		.byte	0x54
 4664 01a6 18000000 		.4byte	.LVL35
 4665 01aa 28000000 		.4byte	.LVL37
 4666 01ae 0400     		.2byte	0x4
 4667 01b0 F3       		.byte	0xf3
 4668 01b1 01       		.uleb128 0x1
 4669 01b2 50       		.byte	0x50
 4670 01b3 9F       		.byte	0x9f
 4671 01b4 28000000 		.4byte	.LVL37
 4672 01b8 2A000000 		.4byte	.LVL38
 4673 01bc 0100     		.2byte	0x1
 4674 01be 50       		.byte	0x50
 4675 01bf 2A000000 		.4byte	.LVL38
 4676 01c3 2E000000 		.4byte	.LVL39
 4677 01c7 0100     		.2byte	0x1
 4678 01c9 54       		.byte	0x54
 4679 01ca 2E000000 		.4byte	.LVL39
 4680 01ce 38000000 		.4byte	.LFE12
 4681 01d2 0400     		.2byte	0x4
 4682 01d4 F3       		.byte	0xf3
 4683 01d5 01       		.uleb128 0x1
 4684 01d6 50       		.byte	0x50
 4685 01d7 9F       		.byte	0x9f
 4686 01d8 00000000 		.4byte	0
 4687 01dc 00000000 		.4byte	0
 4688              	.LLST14:
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 141


 4689 01e0 14000000 		.4byte	.LVL34
 4690 01e4 25000000 		.4byte	.LVL36-1
 4691 01e8 0100     		.2byte	0x1
 4692 01ea 50       		.byte	0x50
 4693 01eb 00000000 		.4byte	0
 4694 01ef 00000000 		.4byte	0
 4695              	.LLST15:
 4696 01f3 00000000 		.4byte	.LVL40
 4697 01f7 0C000000 		.4byte	.LVL42
 4698 01fb 0100     		.2byte	0x1
 4699 01fd 50       		.byte	0x50
 4700 01fe 0C000000 		.4byte	.LVL42
 4701 0202 20000000 		.4byte	.LFE20
 4702 0206 0400     		.2byte	0x4
 4703 0208 F3       		.byte	0xf3
 4704 0209 01       		.uleb128 0x1
 4705 020a 50       		.byte	0x50
 4706 020b 9F       		.byte	0x9f
 4707 020c 00000000 		.4byte	0
 4708 0210 00000000 		.4byte	0
 4709              	.LLST16:
 4710 0214 00000000 		.4byte	.LVL40
 4711 0218 0F000000 		.4byte	.LVL43-1
 4712 021c 0100     		.2byte	0x1
 4713 021e 51       		.byte	0x51
 4714 021f 0F000000 		.4byte	.LVL43-1
 4715 0223 1E000000 		.4byte	.LVL45
 4716 0227 0100     		.2byte	0x1
 4717 0229 55       		.byte	0x55
 4718 022a 1E000000 		.4byte	.LVL45
 4719 022e 20000000 		.4byte	.LFE20
 4720 0232 0400     		.2byte	0x4
 4721 0234 F3       		.byte	0xf3
 4722 0235 01       		.uleb128 0x1
 4723 0236 51       		.byte	0x51
 4724 0237 9F       		.byte	0x9f
 4725 0238 00000000 		.4byte	0
 4726 023c 00000000 		.4byte	0
 4727              	.LLST17:
 4728 0240 00000000 		.4byte	.LVL46
 4729 0244 0A000000 		.4byte	.LVL48
 4730 0248 0100     		.2byte	0x1
 4731 024a 50       		.byte	0x50
 4732 024b 0A000000 		.4byte	.LVL48
 4733 024f 1C000000 		.4byte	.LFE21
 4734 0253 0400     		.2byte	0x4
 4735 0255 F3       		.byte	0xf3
 4736 0256 01       		.uleb128 0x1
 4737 0257 50       		.byte	0x50
 4738 0258 9F       		.byte	0x9f
 4739 0259 00000000 		.4byte	0
 4740 025d 00000000 		.4byte	0
 4741              	.LLST18:
 4742 0261 00000000 		.4byte	.LVL50
 4743 0265 0C000000 		.4byte	.LVL52
 4744 0269 0100     		.2byte	0x1
 4745 026b 50       		.byte	0x50
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 142


 4746 026c 0C000000 		.4byte	.LVL52
 4747 0270 24000000 		.4byte	.LFE22
 4748 0274 0400     		.2byte	0x4
 4749 0276 F3       		.byte	0xf3
 4750 0277 01       		.uleb128 0x1
 4751 0278 50       		.byte	0x50
 4752 0279 9F       		.byte	0x9f
 4753 027a 00000000 		.4byte	0
 4754 027e 00000000 		.4byte	0
 4755              	.LLST19:
 4756 0282 00000000 		.4byte	.LVL50
 4757 0286 0F000000 		.4byte	.LVL53-1
 4758 028a 0100     		.2byte	0x1
 4759 028c 51       		.byte	0x51
 4760 028d 0F000000 		.4byte	.LVL53-1
 4761 0291 1C000000 		.4byte	.LVL55
 4762 0295 0100     		.2byte	0x1
 4763 0297 55       		.byte	0x55
 4764 0298 1C000000 		.4byte	.LVL55
 4765 029c 24000000 		.4byte	.LFE22
 4766 02a0 0400     		.2byte	0x4
 4767 02a2 F3       		.byte	0xf3
 4768 02a3 01       		.uleb128 0x1
 4769 02a4 51       		.byte	0x51
 4770 02a5 9F       		.byte	0x9f
 4771 02a6 00000000 		.4byte	0
 4772 02aa 00000000 		.4byte	0
 4773              	.LLST20:
 4774 02ae 00000000 		.4byte	.LVL56
 4775 02b2 0A000000 		.4byte	.LVL58
 4776 02b6 0100     		.2byte	0x1
 4777 02b8 50       		.byte	0x50
 4778 02b9 0A000000 		.4byte	.LVL58
 4779 02bd 20000000 		.4byte	.LFE23
 4780 02c1 0400     		.2byte	0x4
 4781 02c3 F3       		.byte	0xf3
 4782 02c4 01       		.uleb128 0x1
 4783 02c5 50       		.byte	0x50
 4784 02c6 9F       		.byte	0x9f
 4785 02c7 00000000 		.4byte	0
 4786 02cb 00000000 		.4byte	0
 4787              	.LLST21:
 4788 02cf 00000000 		.4byte	.LVL60
 4789 02d3 0C000000 		.4byte	.LVL61
 4790 02d7 0100     		.2byte	0x1
 4791 02d9 50       		.byte	0x50
 4792 02da 0C000000 		.4byte	.LVL61
 4793 02de 4C000000 		.4byte	.LFE24
 4794 02e2 0400     		.2byte	0x4
 4795 02e4 F3       		.byte	0xf3
 4796 02e5 01       		.uleb128 0x1
 4797 02e6 50       		.byte	0x50
 4798 02e7 9F       		.byte	0x9f
 4799 02e8 00000000 		.4byte	0
 4800 02ec 00000000 		.4byte	0
 4801              	.LLST22:
 4802 02f0 00000000 		.4byte	.LVL60
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 143


 4803 02f4 0F000000 		.4byte	.LVL62-1
 4804 02f8 0100     		.2byte	0x1
 4805 02fa 51       		.byte	0x51
 4806 02fb 0F000000 		.4byte	.LVL62-1
 4807 02ff 4C000000 		.4byte	.LFE24
 4808 0303 0400     		.2byte	0x4
 4809 0305 F3       		.byte	0xf3
 4810 0306 01       		.uleb128 0x1
 4811 0307 51       		.byte	0x51
 4812 0308 9F       		.byte	0x9f
 4813 0309 00000000 		.4byte	0
 4814 030d 00000000 		.4byte	0
 4815              	.LLST23:
 4816 0311 26000000 		.4byte	.LVL65
 4817 0315 43000000 		.4byte	.LVL70-1
 4818 0319 0100     		.2byte	0x1
 4819 031b 50       		.byte	0x50
 4820 031c 00000000 		.4byte	0
 4821 0320 00000000 		.4byte	0
 4822              	.LLST24:
 4823 0324 22000000 		.4byte	.LVL64
 4824 0328 3C000000 		.4byte	.LVL68
 4825 032c 0100     		.2byte	0x1
 4826 032e 55       		.byte	0x55
 4827 032f 00000000 		.4byte	0
 4828 0333 00000000 		.4byte	0
 4829              	.LLST25:
 4830 0337 32000000 		.4byte	.LVL66
 4831 033b 3E000000 		.4byte	.LVL69
 4832 033f 0100     		.2byte	0x1
 4833 0341 53       		.byte	0x53
 4834 0342 3E000000 		.4byte	.LVL69
 4835 0346 44000000 		.4byte	.LVL71
 4836 034a 0100     		.2byte	0x1
 4837 034c 55       		.byte	0x55
 4838 034d 00000000 		.4byte	0
 4839 0351 00000000 		.4byte	0
 4840              	.LLST26:
 4841 0355 00000000 		.4byte	.LVL72
 4842 0359 0A000000 		.4byte	.LVL73
 4843 035d 0100     		.2byte	0x1
 4844 035f 50       		.byte	0x50
 4845 0360 0A000000 		.4byte	.LVL73
 4846 0364 2C000000 		.4byte	.LFE25
 4847 0368 0400     		.2byte	0x4
 4848 036a F3       		.byte	0xf3
 4849 036b 01       		.uleb128 0x1
 4850 036c 50       		.byte	0x50
 4851 036d 9F       		.byte	0x9f
 4852 036e 00000000 		.4byte	0
 4853 0372 00000000 		.4byte	0
 4854              	.LLST27:
 4855 0376 24000000 		.4byte	.LVL75
 4856 037a 26000000 		.4byte	.LVL76
 4857 037e 0100     		.2byte	0x1
 4858 0380 50       		.byte	0x50
 4859 0381 00000000 		.4byte	0
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 144


 4860 0385 00000000 		.4byte	0
 4861              	.LLST28:
 4862 0389 00000000 		.4byte	.LVL77
 4863 038d 06000000 		.4byte	.LVL78
 4864 0391 0100     		.2byte	0x1
 4865 0393 50       		.byte	0x50
 4866 0394 06000000 		.4byte	.LVL78
 4867 0398 26000000 		.4byte	.LVL82
 4868 039c 0100     		.2byte	0x1
 4869 039e 54       		.byte	0x54
 4870 039f 00000000 		.4byte	0
 4871 03a3 00000000 		.4byte	0
 4872              	.LLST29:
 4873 03a7 00000000 		.4byte	.LVL83
 4874 03ab 08000000 		.4byte	.LVL84
 4875 03af 0100     		.2byte	0x1
 4876 03b1 50       		.byte	0x50
 4877 03b2 08000000 		.4byte	.LVL84
 4878 03b6 14000000 		.4byte	.LFE34
 4879 03ba 0400     		.2byte	0x4
 4880 03bc F3       		.byte	0xf3
 4881 03bd 01       		.uleb128 0x1
 4882 03be 50       		.byte	0x50
 4883 03bf 9F       		.byte	0x9f
 4884 03c0 00000000 		.4byte	0
 4885 03c4 00000000 		.4byte	0
 4886              	.LLST30:
 4887 03c8 00000000 		.4byte	.LVL86
 4888 03cc 0F000000 		.4byte	.LVL87-1
 4889 03d0 0100     		.2byte	0x1
 4890 03d2 50       		.byte	0x50
 4891 03d3 0F000000 		.4byte	.LVL87-1
 4892 03d7 D4000000 		.4byte	.LVL109
 4893 03db 0100     		.2byte	0x1
 4894 03dd 54       		.byte	0x54
 4895 03de D4000000 		.4byte	.LVL109
 4896 03e2 02010000 		.4byte	.LVL116
 4897 03e6 0700     		.2byte	0x7
 4898 03e8 74       		.byte	0x74
 4899 03e9 B3998080 		.sleb128 -268432205
 4899      7F
 4900 03ee 9F       		.byte	0x9f
 4901 03ef 02010000 		.4byte	.LVL116
 4902 03f3 08010000 		.4byte	.LVL117
 4903 03f7 0100     		.2byte	0x1
 4904 03f9 54       		.byte	0x54
 4905 03fa 08010000 		.4byte	.LVL117
 4906 03fe 10010000 		.4byte	.LVL119
 4907 0402 0300     		.2byte	0x3
 4908 0404 77       		.byte	0x77
 4909 0405 03       		.sleb128 3
 4910 0406 9F       		.byte	0x9f
 4911 0407 10010000 		.4byte	.LVL119
 4912 040b 64010000 		.4byte	.LFE8
 4913 040f 0400     		.2byte	0x4
 4914 0411 F3       		.byte	0xf3
 4915 0412 01       		.uleb128 0x1
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 145


 4916 0413 50       		.byte	0x50
 4917 0414 9F       		.byte	0x9f
 4918 0415 00000000 		.4byte	0
 4919 0419 00000000 		.4byte	0
 4920              	.LLST31:
 4921 041d 2A000000 		.4byte	.LVL89
 4922 0421 34000000 		.4byte	.LVL91
 4923 0425 0100     		.2byte	0x1
 4924 0427 5A       		.byte	0x5a
 4925 0428 46000000 		.4byte	.LVL92
 4926 042c 50000000 		.4byte	.LVL94
 4927 0430 0100     		.2byte	0x1
 4928 0432 5A       		.byte	0x5a
 4929 0433 62000000 		.4byte	.LVL95
 4930 0437 6C000000 		.4byte	.LVL97
 4931 043b 0100     		.2byte	0x1
 4932 043d 5A       		.byte	0x5a
 4933 043e 7E000000 		.4byte	.LVL98
 4934 0442 88000000 		.4byte	.LVL100
 4935 0446 0100     		.2byte	0x1
 4936 0448 5A       		.byte	0x5a
 4937 0449 90000000 		.4byte	.LVL101
 4938 044d 02010000 		.4byte	.LVL116
 4939 0451 0100     		.2byte	0x1
 4940 0453 5A       		.byte	0x5a
 4941 0454 00000000 		.4byte	0
 4942 0458 00000000 		.4byte	0
 4943              	.LLST32:
 4944 045c 32000000 		.4byte	.LVL90
 4945 0460 34000000 		.4byte	.LVL91
 4946 0464 0100     		.2byte	0x1
 4947 0466 59       		.byte	0x59
 4948 0467 4E000000 		.4byte	.LVL93
 4949 046b 50000000 		.4byte	.LVL94
 4950 046f 0100     		.2byte	0x1
 4951 0471 59       		.byte	0x59
 4952 0472 6A000000 		.4byte	.LVL96
 4953 0476 6C000000 		.4byte	.LVL97
 4954 047a 0100     		.2byte	0x1
 4955 047c 59       		.byte	0x59
 4956 047d 86000000 		.4byte	.LVL99
 4957 0481 88000000 		.4byte	.LVL100
 4958 0485 0100     		.2byte	0x1
 4959 0487 59       		.byte	0x59
 4960 0488 98000000 		.4byte	.LVL102
 4961 048c 02010000 		.4byte	.LVL116
 4962 0490 0100     		.2byte	0x1
 4963 0492 59       		.byte	0x59
 4964 0493 00000000 		.4byte	0
 4965 0497 00000000 		.4byte	0
 4966              	.LLST33:
 4967 049b 9C000000 		.4byte	.LVL103
 4968 049f 02010000 		.4byte	.LVL116
 4969 04a3 0100     		.2byte	0x1
 4970 04a5 56       		.byte	0x56
 4971 04a6 00000000 		.4byte	0
 4972 04aa 00000000 		.4byte	0
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 146


 4973              	.LLST34:
 4974 04ae B0000000 		.4byte	.LVL105
 4975 04b2 B4000000 		.4byte	.LVL106
 4976 04b6 0200     		.2byte	0x2
 4977 04b8 49       		.byte	0x49
 4978 04b9 9F       		.byte	0x9f
 4979 04ba BC000000 		.4byte	.LVL107
 4980 04be 02010000 		.4byte	.LVL116
 4981 04c2 0100     		.2byte	0x1
 4982 04c4 55       		.byte	0x55
 4983 04c5 00000000 		.4byte	0
 4984 04c9 00000000 		.4byte	0
 4985              	.LLST35:
 4986 04cd D8000000 		.4byte	.LVL110
 4987 04d1 DE000000 		.4byte	.LVL111
 4988 04d5 0100     		.2byte	0x1
 4989 04d7 53       		.byte	0x53
 4990 04d8 DE000000 		.4byte	.LVL111
 4991 04dc E0000000 		.4byte	.LVL112
 4992 04e0 0400     		.2byte	0x4
 4993 04e2 72       		.byte	0x72
 4994 04e3 00       		.sleb128 0
 4995 04e4 06       		.byte	0x6
 4996 04e5 9F       		.byte	0x9f
 4997 04e6 E0000000 		.4byte	.LVL112
 4998 04ea E2000000 		.4byte	.LVL113
 4999 04ee 0700     		.2byte	0x7
 5000 04f0 0C       		.byte	0xc
 5001 04f1 28FF0B40 		.4byte	0x400bff28
 5002 04f5 06       		.byte	0x6
 5003 04f6 9F       		.byte	0x9f
 5004 04f7 00000000 		.4byte	0
 5005 04fb 00000000 		.4byte	0
 5006              	.LLST36:
 5007 04ff 12000000 		.4byte	.LVL88
 5008 0503 AA000000 		.4byte	.LVL104
 5009 0507 0200     		.2byte	0x2
 5010 0509 91       		.byte	0x91
 5011 050a 5C       		.sleb128 -36
 5012 050b B4000000 		.4byte	.LVL106
 5013 050f BC000000 		.4byte	.LVL107
 5014 0513 0200     		.2byte	0x2
 5015 0515 91       		.byte	0x91
 5016 0516 5C       		.sleb128 -36
 5017 0517 02010000 		.4byte	.LVL116
 5018 051b 08010000 		.4byte	.LVL117
 5019 051f 0200     		.2byte	0x2
 5020 0521 91       		.byte	0x91
 5021 0522 5C       		.sleb128 -36
 5022 0523 00000000 		.4byte	0
 5023 0527 00000000 		.4byte	0
 5024              	.LLST37:
 5025 052b 00000000 		.4byte	.LVL120
 5026 052f 26000000 		.4byte	.LVL122
 5027 0533 0100     		.2byte	0x1
 5028 0535 50       		.byte	0x50
 5029 0536 26000000 		.4byte	.LVL122
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 147


 5030 053a 42000000 		.4byte	.LVL127
 5031 053e 0100     		.2byte	0x1
 5032 0540 54       		.byte	0x54
 5033 0541 00000000 		.4byte	0
 5034 0545 00000000 		.4byte	0
 5035              	.LLST38:
 5036 0549 04000000 		.4byte	.LVL121
 5037 054d 42000000 		.4byte	.LVL126
 5038 0551 0200     		.2byte	0x2
 5039 0553 30       		.byte	0x30
 5040 0554 9F       		.byte	0x9f
 5041 0555 42000000 		.4byte	.LVL126
 5042 0559 54000000 		.4byte	.LFE9
 5043 055d 0100     		.2byte	0x1
 5044 055f 50       		.byte	0x50
 5045 0560 00000000 		.4byte	0
 5046 0564 00000000 		.4byte	0
 5047              	.LLST39:
 5048 0568 00000000 		.4byte	.LVL128
 5049 056c 14000000 		.4byte	.LVL129
 5050 0570 0100     		.2byte	0x1
 5051 0572 50       		.byte	0x50
 5052 0573 14000000 		.4byte	.LVL129
 5053 0577 18000000 		.4byte	.LVL130
 5054 057b 0100     		.2byte	0x1
 5055 057d 53       		.byte	0x53
 5056 057e 18000000 		.4byte	.LVL130
 5057 0582 44000000 		.4byte	.LFE13
 5058 0586 0400     		.2byte	0x4
 5059 0588 F3       		.byte	0xf3
 5060 0589 01       		.uleb128 0x1
 5061 058a 50       		.byte	0x50
 5062 058b 9F       		.byte	0x9f
 5063 058c 00000000 		.4byte	0
 5064 0590 00000000 		.4byte	0
 5065              	.LLST40:
 5066 0594 00000000 		.4byte	.LVL133
 5067 0598 1A000000 		.4byte	.LVL134
 5068 059c 0100     		.2byte	0x1
 5069 059e 50       		.byte	0x50
 5070 059f 1A000000 		.4byte	.LVL134
 5071 05a3 4C000000 		.4byte	.LFE35
 5072 05a7 0400     		.2byte	0x4
 5073 05a9 F3       		.byte	0xf3
 5074 05aa 01       		.uleb128 0x1
 5075 05ab 50       		.byte	0x50
 5076 05ac 9F       		.byte	0x9f
 5077 05ad 00000000 		.4byte	0
 5078 05b1 00000000 		.4byte	0
 5079              	.LLST41:
 5080 05b5 00000000 		.4byte	.LVL138
 5081 05b9 02000000 		.4byte	.LVL139
 5082 05bd 0100     		.2byte	0x1
 5083 05bf 50       		.byte	0x50
 5084 05c0 02000000 		.4byte	.LVL139
 5085 05c4 10000000 		.4byte	.LFE42
 5086 05c8 0400     		.2byte	0x4
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 148


 5087 05ca F3       		.byte	0xf3
 5088 05cb 01       		.uleb128 0x1
 5089 05cc 50       		.byte	0x50
 5090 05cd 9F       		.byte	0x9f
 5091 05ce 00000000 		.4byte	0
 5092 05d2 00000000 		.4byte	0
 5093              	.LLST42:
 5094 05d6 0C000000 		.4byte	.LVL142
 5095 05da 1C000000 		.4byte	.LVL145
 5096 05de 0100     		.2byte	0x1
 5097 05e0 54       		.byte	0x54
 5098 05e1 1E000000 		.4byte	.LVL146
 5099 05e5 22000000 		.4byte	.LVL147
 5100 05e9 0100     		.2byte	0x1
 5101 05eb 54       		.byte	0x54
 5102 05ec 00000000 		.4byte	0
 5103 05f0 00000000 		.4byte	0
 5104              	.LLST43:
 5105 05f4 02000000 		.4byte	.LVL148
 5106 05f8 06000000 		.4byte	.LVL149
 5107 05fc 0200     		.2byte	0x2
 5108 05fe 30       		.byte	0x30
 5109 05ff 9F       		.byte	0x9f
 5110 0600 06000000 		.4byte	.LVL149
 5111 0604 1B000000 		.4byte	.LVL151-1
 5112 0608 0100     		.2byte	0x1
 5113 060a 53       		.byte	0x53
 5114 060b 00000000 		.4byte	0
 5115 060f 00000000 		.4byte	0
 5116              	.LLST44:
 5117 0613 00000000 		.4byte	.LVL159
 5118 0617 06000000 		.4byte	.LVL160
 5119 061b 0100     		.2byte	0x1
 5120 061d 50       		.byte	0x50
 5121 061e 06000000 		.4byte	.LVL160
 5122 0622 10000000 		.4byte	.LFE49
 5123 0626 0400     		.2byte	0x4
 5124 0628 F3       		.byte	0xf3
 5125 0629 01       		.uleb128 0x1
 5126 062a 50       		.byte	0x50
 5127 062b 9F       		.byte	0x9f
 5128 062c 00000000 		.4byte	0
 5129 0630 00000000 		.4byte	0
 5130              	.LLST45:
 5131 0634 00000000 		.4byte	.LVL161
 5132 0638 02000000 		.4byte	.LVL162
 5133 063c 0100     		.2byte	0x1
 5134 063e 50       		.byte	0x50
 5135 063f 02000000 		.4byte	.LVL162
 5136 0643 0C000000 		.4byte	.LFE50
 5137 0647 0400     		.2byte	0x4
 5138 0649 F3       		.byte	0xf3
 5139 064a 01       		.uleb128 0x1
 5140 064b 50       		.byte	0x50
 5141 064c 9F       		.byte	0x9f
 5142 064d 00000000 		.4byte	0
 5143 0651 00000000 		.4byte	0
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 149


 5144              	.LLST46:
 5145 0655 00000000 		.4byte	.LVL164
 5146 0659 0A000000 		.4byte	.LVL166
 5147 065d 0100     		.2byte	0x1
 5148 065f 50       		.byte	0x50
 5149 0660 0A000000 		.4byte	.LVL166
 5150 0664 20000000 		.4byte	.LFE53
 5151 0668 0400     		.2byte	0x4
 5152 066a F3       		.byte	0xf3
 5153 066b 01       		.uleb128 0x1
 5154 066c 50       		.byte	0x50
 5155 066d 9F       		.byte	0x9f
 5156 066e 00000000 		.4byte	0
 5157 0672 00000000 		.4byte	0
 5158              	.LLST47:
 5159 0676 08000000 		.4byte	.LVL165
 5160 067a 12000000 		.4byte	.LVL167
 5161 067e 0100     		.2byte	0x1
 5162 0680 53       		.byte	0x53
 5163 0681 12000000 		.4byte	.LVL167
 5164 0685 20000000 		.4byte	.LFE53
 5165 0689 0100     		.2byte	0x1
 5166 068b 50       		.byte	0x50
 5167 068c 00000000 		.4byte	0
 5168 0690 00000000 		.4byte	0
 5169              	.LLST48:
 5170 0694 00000000 		.4byte	.LVL168
 5171 0698 0A000000 		.4byte	.LVL170
 5172 069c 0100     		.2byte	0x1
 5173 069e 50       		.byte	0x50
 5174 069f 0A000000 		.4byte	.LVL170
 5175 06a3 20000000 		.4byte	.LFE54
 5176 06a7 0400     		.2byte	0x4
 5177 06a9 F3       		.byte	0xf3
 5178 06aa 01       		.uleb128 0x1
 5179 06ab 50       		.byte	0x50
 5180 06ac 9F       		.byte	0x9f
 5181 06ad 00000000 		.4byte	0
 5182 06b1 00000000 		.4byte	0
 5183              	.LLST49:
 5184 06b5 08000000 		.4byte	.LVL169
 5185 06b9 12000000 		.4byte	.LVL171
 5186 06bd 0100     		.2byte	0x1
 5187 06bf 53       		.byte	0x53
 5188 06c0 12000000 		.4byte	.LVL171
 5189 06c4 20000000 		.4byte	.LFE54
 5190 06c8 0100     		.2byte	0x1
 5191 06ca 50       		.byte	0x50
 5192 06cb 00000000 		.4byte	0
 5193 06cf 00000000 		.4byte	0
 5194              	.LLST50:
 5195 06d3 00000000 		.4byte	.LVL172
 5196 06d7 0A000000 		.4byte	.LVL174
 5197 06db 0100     		.2byte	0x1
 5198 06dd 50       		.byte	0x50
 5199 06de 0A000000 		.4byte	.LVL174
 5200 06e2 20000000 		.4byte	.LFE55
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 150


 5201 06e6 0400     		.2byte	0x4
 5202 06e8 F3       		.byte	0xf3
 5203 06e9 01       		.uleb128 0x1
 5204 06ea 50       		.byte	0x50
 5205 06eb 9F       		.byte	0x9f
 5206 06ec 00000000 		.4byte	0
 5207 06f0 00000000 		.4byte	0
 5208              	.LLST51:
 5209 06f4 08000000 		.4byte	.LVL173
 5210 06f8 12000000 		.4byte	.LVL175
 5211 06fc 0100     		.2byte	0x1
 5212 06fe 53       		.byte	0x53
 5213 06ff 12000000 		.4byte	.LVL175
 5214 0703 20000000 		.4byte	.LFE55
 5215 0707 0100     		.2byte	0x1
 5216 0709 50       		.byte	0x50
 5217 070a 00000000 		.4byte	0
 5218 070e 00000000 		.4byte	0
 5219              	.LLST52:
 5220 0712 00000000 		.4byte	.LVL176
 5221 0716 08000000 		.4byte	.LVL177
 5222 071a 0100     		.2byte	0x1
 5223 071c 50       		.byte	0x50
 5224 071d 08000000 		.4byte	.LVL177
 5225 0721 1C000000 		.4byte	.LVL181
 5226 0725 0400     		.2byte	0x4
 5227 0727 F3       		.byte	0xf3
 5228 0728 01       		.uleb128 0x1
 5229 0729 50       		.byte	0x50
 5230 072a 9F       		.byte	0x9f
 5231 072b 1C000000 		.4byte	.LVL181
 5232 072f 22000000 		.4byte	.LVL182
 5233 0733 0100     		.2byte	0x1
 5234 0735 50       		.byte	0x50
 5235 0736 22000000 		.4byte	.LVL182
 5236 073a 36000000 		.4byte	.LVL186
 5237 073e 0400     		.2byte	0x4
 5238 0740 F3       		.byte	0xf3
 5239 0741 01       		.uleb128 0x1
 5240 0742 50       		.byte	0x50
 5241 0743 9F       		.byte	0x9f
 5242 0744 36000000 		.4byte	.LVL186
 5243 0748 3C000000 		.4byte	.LVL187
 5244 074c 0100     		.2byte	0x1
 5245 074e 50       		.byte	0x50
 5246 074f 3C000000 		.4byte	.LVL187
 5247 0753 50000000 		.4byte	.LVL191
 5248 0757 0400     		.2byte	0x4
 5249 0759 F3       		.byte	0xf3
 5250 075a 01       		.uleb128 0x1
 5251 075b 50       		.byte	0x50
 5252 075c 9F       		.byte	0x9f
 5253 075d 50000000 		.4byte	.LVL191
 5254 0761 52000000 		.4byte	.LVL192
 5255 0765 0100     		.2byte	0x1
 5256 0767 50       		.byte	0x50
 5257 0768 52000000 		.4byte	.LVL192
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 151


 5258 076c 68000000 		.4byte	.LFE56
 5259 0770 0400     		.2byte	0x4
 5260 0772 F3       		.byte	0xf3
 5261 0773 01       		.uleb128 0x1
 5262 0774 50       		.byte	0x50
 5263 0775 9F       		.byte	0x9f
 5264 0776 00000000 		.4byte	0
 5265 077a 00000000 		.4byte	0
 5266              	.LLST53:
 5267 077e 00000000 		.4byte	.LVL176
 5268 0782 10000000 		.4byte	.LVL179
 5269 0786 0100     		.2byte	0x1
 5270 0788 51       		.byte	0x51
 5271 0789 10000000 		.4byte	.LVL179
 5272 078d 1C000000 		.4byte	.LVL181
 5273 0791 0400     		.2byte	0x4
 5274 0793 F3       		.byte	0xf3
 5275 0794 01       		.uleb128 0x1
 5276 0795 51       		.byte	0x51
 5277 0796 9F       		.byte	0x9f
 5278 0797 1C000000 		.4byte	.LVL181
 5279 079b 2A000000 		.4byte	.LVL184
 5280 079f 0100     		.2byte	0x1
 5281 07a1 51       		.byte	0x51
 5282 07a2 2A000000 		.4byte	.LVL184
 5283 07a6 36000000 		.4byte	.LVL186
 5284 07aa 0400     		.2byte	0x4
 5285 07ac F3       		.byte	0xf3
 5286 07ad 01       		.uleb128 0x1
 5287 07ae 51       		.byte	0x51
 5288 07af 9F       		.byte	0x9f
 5289 07b0 36000000 		.4byte	.LVL186
 5290 07b4 44000000 		.4byte	.LVL189
 5291 07b8 0100     		.2byte	0x1
 5292 07ba 51       		.byte	0x51
 5293 07bb 44000000 		.4byte	.LVL189
 5294 07bf 50000000 		.4byte	.LVL191
 5295 07c3 0400     		.2byte	0x4
 5296 07c5 F3       		.byte	0xf3
 5297 07c6 01       		.uleb128 0x1
 5298 07c7 51       		.byte	0x51
 5299 07c8 9F       		.byte	0x9f
 5300 07c9 50000000 		.4byte	.LVL191
 5301 07cd 55000000 		.4byte	.LVL193-1
 5302 07d1 0100     		.2byte	0x1
 5303 07d3 51       		.byte	0x51
 5304 07d4 55000000 		.4byte	.LVL193-1
 5305 07d8 68000000 		.4byte	.LFE56
 5306 07dc 0400     		.2byte	0x4
 5307 07de F3       		.byte	0xf3
 5308 07df 01       		.uleb128 0x1
 5309 07e0 51       		.byte	0x51
 5310 07e1 9F       		.byte	0x9f
 5311 07e2 00000000 		.4byte	0
 5312 07e6 00000000 		.4byte	0
 5313              	.LLST54:
 5314 07ea 0E000000 		.4byte	.LVL178
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 152


 5315 07ee 18000000 		.4byte	.LVL180
 5316 07f2 0100     		.2byte	0x1
 5317 07f4 53       		.byte	0x53
 5318 07f5 18000000 		.4byte	.LVL180
 5319 07f9 1C000000 		.4byte	.LVL181
 5320 07fd 0100     		.2byte	0x1
 5321 07ff 51       		.byte	0x51
 5322 0800 28000000 		.4byte	.LVL183
 5323 0804 32000000 		.4byte	.LVL185
 5324 0808 0100     		.2byte	0x1
 5325 080a 53       		.byte	0x53
 5326 080b 32000000 		.4byte	.LVL185
 5327 080f 36000000 		.4byte	.LVL186
 5328 0813 0100     		.2byte	0x1
 5329 0815 51       		.byte	0x51
 5330 0816 42000000 		.4byte	.LVL188
 5331 081a 4C000000 		.4byte	.LVL190
 5332 081e 0100     		.2byte	0x1
 5333 0820 53       		.byte	0x53
 5334 0821 4C000000 		.4byte	.LVL190
 5335 0825 50000000 		.4byte	.LVL191
 5336 0829 0100     		.2byte	0x1
 5337 082b 51       		.byte	0x51
 5338 082c 00000000 		.4byte	0
 5339 0830 00000000 		.4byte	0
 5340              		.section	.debug_aranges,"",%progbits
 5341 0000 CC010000 		.4byte	0x1cc
 5342 0004 0200     		.2byte	0x2
 5343 0006 00000000 		.4byte	.Ldebug_info0
 5344 000a 04       		.byte	0x4
 5345 000b 00       		.byte	0
 5346 000c 0000     		.2byte	0
 5347 000e 0000     		.2byte	0
 5348 0010 00000000 		.4byte	.LFB2
 5349 0014 14000000 		.4byte	.LFE2-.LFB2
 5350 0018 00000000 		.4byte	.LFB3
 5351 001c 10000000 		.4byte	.LFE3-.LFB3
 5352 0020 00000000 		.4byte	.LFB4
 5353 0024 20000000 		.4byte	.LFE4-.LFB4
 5354 0028 00000000 		.4byte	.LFB5
 5355 002c 38000000 		.4byte	.LFE5-.LFB5
 5356 0030 00000000 		.4byte	.LFB6
 5357 0034 1C000000 		.4byte	.LFE6-.LFB6
 5358 0038 00000000 		.4byte	.LFB7
 5359 003c 28000000 		.4byte	.LFE7-.LFB7
 5360 0040 00000000 		.4byte	.LFB10
 5361 0044 24000000 		.4byte	.LFE10-.LFB10
 5362 0048 00000000 		.4byte	.LFB11
 5363 004c 10000000 		.4byte	.LFE11-.LFB11
 5364 0050 00000000 		.4byte	.LFB14
 5365 0054 20000000 		.4byte	.LFE14-.LFB14
 5366 0058 00000000 		.4byte	.LFB15
 5367 005c 10000000 		.4byte	.LFE15-.LFB15
 5368 0060 00000000 		.4byte	.LFB16
 5369 0064 0C000000 		.4byte	.LFE16-.LFB16
 5370 0068 00000000 		.4byte	.LFB17
 5371 006c 14000000 		.4byte	.LFE17-.LFB17
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 153


 5372 0070 00000000 		.4byte	.LFB18
 5373 0074 10000000 		.4byte	.LFE18-.LFB18
 5374 0078 00000000 		.4byte	.LFB19
 5375 007c 0C000000 		.4byte	.LFE19-.LFB19
 5376 0080 00000000 		.4byte	.LFB26
 5377 0084 14000000 		.4byte	.LFE26-.LFB26
 5378 0088 00000000 		.4byte	.LFB27
 5379 008c 18000000 		.4byte	.LFE27-.LFB27
 5380 0090 00000000 		.4byte	.LFB28
 5381 0094 14000000 		.4byte	.LFE28-.LFB28
 5382 0098 00000000 		.4byte	.LFB29
 5383 009c 14000000 		.4byte	.LFE29-.LFB29
 5384 00a0 00000000 		.4byte	.LFB30
 5385 00a4 14000000 		.4byte	.LFE30-.LFB30
 5386 00a8 00000000 		.4byte	.LFB31
 5387 00ac 04000000 		.4byte	.LFE31-.LFB31
 5388 00b0 00000000 		.4byte	.LFB12
 5389 00b4 38000000 		.4byte	.LFE12-.LFB12
 5390 00b8 00000000 		.4byte	.LFB20
 5391 00bc 20000000 		.4byte	.LFE20-.LFB20
 5392 00c0 00000000 		.4byte	.LFB21
 5393 00c4 1C000000 		.4byte	.LFE21-.LFB21
 5394 00c8 00000000 		.4byte	.LFB22
 5395 00cc 24000000 		.4byte	.LFE22-.LFB22
 5396 00d0 00000000 		.4byte	.LFB23
 5397 00d4 20000000 		.4byte	.LFE23-.LFB23
 5398 00d8 00000000 		.4byte	.LFB24
 5399 00dc 4C000000 		.4byte	.LFE24-.LFB24
 5400 00e0 00000000 		.4byte	.LFB25
 5401 00e4 2C000000 		.4byte	.LFE25-.LFB25
 5402 00e8 00000000 		.4byte	.LFB32
 5403 00ec 18000000 		.4byte	.LFE32-.LFB32
 5404 00f0 00000000 		.4byte	.LFB33
 5405 00f4 30000000 		.4byte	.LFE33-.LFB33
 5406 00f8 00000000 		.4byte	.LFB34
 5407 00fc 14000000 		.4byte	.LFE34-.LFB34
 5408 0100 00000000 		.4byte	.LFB8
 5409 0104 64010000 		.4byte	.LFE8-.LFB8
 5410 0108 00000000 		.4byte	.LFB9
 5411 010c 54000000 		.4byte	.LFE9-.LFB9
 5412 0110 00000000 		.4byte	.LFB13
 5413 0114 44000000 		.4byte	.LFE13-.LFB13
 5414 0118 00000000 		.4byte	.LFB35
 5415 011c 4C000000 		.4byte	.LFE35-.LFB35
 5416 0120 00000000 		.4byte	.LFB39
 5417 0124 10000000 		.4byte	.LFE39-.LFB39
 5418 0128 00000000 		.4byte	.LFB40
 5419 012c 10000000 		.4byte	.LFE40-.LFB40
 5420 0130 00000000 		.4byte	.LFB38
 5421 0134 18000000 		.4byte	.LFE38-.LFB38
 5422 0138 00000000 		.4byte	.LFB41
 5423 013c 10000000 		.4byte	.LFE41-.LFB41
 5424 0140 00000000 		.4byte	.LFB42
 5425 0144 10000000 		.4byte	.LFE42-.LFB42
 5426 0148 00000000 		.4byte	.LFB43
 5427 014c 10000000 		.4byte	.LFE43-.LFB43
 5428 0150 00000000 		.4byte	.LFB44
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 154


 5429 0154 10000000 		.4byte	.LFE44-.LFB44
 5430 0158 00000000 		.4byte	.LFB45
 5431 015c 20000000 		.4byte	.LFE45-.LFB45
 5432 0160 00000000 		.4byte	.LFB46
 5433 0164 10000000 		.4byte	.LFE46-.LFB46
 5434 0168 00000000 		.4byte	.LFB47
 5435 016c 10000000 		.4byte	.LFE47-.LFB47
 5436 0170 00000000 		.4byte	.LFB51
 5437 0174 28000000 		.4byte	.LFE51-.LFB51
 5438 0178 00000000 		.4byte	.LFB48
 5439 017c 0C000000 		.4byte	.LFE48-.LFB48
 5440 0180 00000000 		.4byte	.LFB37
 5441 0184 4C000000 		.4byte	.LFE37-.LFB37
 5442 0188 00000000 		.4byte	.LFB36
 5443 018c 20000000 		.4byte	.LFE36-.LFB36
 5444 0190 00000000 		.4byte	.LFB49
 5445 0194 10000000 		.4byte	.LFE49-.LFB49
 5446 0198 00000000 		.4byte	.LFB50
 5447 019c 0C000000 		.4byte	.LFE50-.LFB50
 5448 01a0 00000000 		.4byte	.LFB52
 5449 01a4 70000000 		.4byte	.LFE52-.LFB52
 5450 01a8 00000000 		.4byte	.LFB53
 5451 01ac 20000000 		.4byte	.LFE53-.LFB53
 5452 01b0 00000000 		.4byte	.LFB54
 5453 01b4 20000000 		.4byte	.LFE54-.LFB54
 5454 01b8 00000000 		.4byte	.LFB55
 5455 01bc 20000000 		.4byte	.LFE55-.LFB55
 5456 01c0 00000000 		.4byte	.LFB56
 5457 01c4 68000000 		.4byte	.LFE56-.LFB56
 5458 01c8 00000000 		.4byte	0
 5459 01cc 00000000 		.4byte	0
 5460              		.section	.debug_ranges,"",%progbits
 5461              	.Ldebug_ranges0:
 5462 0000 00000000 		.4byte	.LFB2
 5463 0004 14000000 		.4byte	.LFE2
 5464 0008 00000000 		.4byte	.LFB3
 5465 000c 10000000 		.4byte	.LFE3
 5466 0010 00000000 		.4byte	.LFB4
 5467 0014 20000000 		.4byte	.LFE4
 5468 0018 00000000 		.4byte	.LFB5
 5469 001c 38000000 		.4byte	.LFE5
 5470 0020 00000000 		.4byte	.LFB6
 5471 0024 1C000000 		.4byte	.LFE6
 5472 0028 00000000 		.4byte	.LFB7
 5473 002c 28000000 		.4byte	.LFE7
 5474 0030 00000000 		.4byte	.LFB10
 5475 0034 24000000 		.4byte	.LFE10
 5476 0038 00000000 		.4byte	.LFB11
 5477 003c 10000000 		.4byte	.LFE11
 5478 0040 00000000 		.4byte	.LFB14
 5479 0044 20000000 		.4byte	.LFE14
 5480 0048 00000000 		.4byte	.LFB15
 5481 004c 10000000 		.4byte	.LFE15
 5482 0050 00000000 		.4byte	.LFB16
 5483 0054 0C000000 		.4byte	.LFE16
 5484 0058 00000000 		.4byte	.LFB17
 5485 005c 14000000 		.4byte	.LFE17
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 155


 5486 0060 00000000 		.4byte	.LFB18
 5487 0064 10000000 		.4byte	.LFE18
 5488 0068 00000000 		.4byte	.LFB19
 5489 006c 0C000000 		.4byte	.LFE19
 5490 0070 00000000 		.4byte	.LFB26
 5491 0074 14000000 		.4byte	.LFE26
 5492 0078 00000000 		.4byte	.LFB27
 5493 007c 18000000 		.4byte	.LFE27
 5494 0080 00000000 		.4byte	.LFB28
 5495 0084 14000000 		.4byte	.LFE28
 5496 0088 00000000 		.4byte	.LFB29
 5497 008c 14000000 		.4byte	.LFE29
 5498 0090 00000000 		.4byte	.LFB30
 5499 0094 14000000 		.4byte	.LFE30
 5500 0098 00000000 		.4byte	.LFB31
 5501 009c 04000000 		.4byte	.LFE31
 5502 00a0 00000000 		.4byte	.LFB12
 5503 00a4 38000000 		.4byte	.LFE12
 5504 00a8 00000000 		.4byte	.LFB20
 5505 00ac 20000000 		.4byte	.LFE20
 5506 00b0 00000000 		.4byte	.LFB21
 5507 00b4 1C000000 		.4byte	.LFE21
 5508 00b8 00000000 		.4byte	.LFB22
 5509 00bc 24000000 		.4byte	.LFE22
 5510 00c0 00000000 		.4byte	.LFB23
 5511 00c4 20000000 		.4byte	.LFE23
 5512 00c8 00000000 		.4byte	.LFB24
 5513 00cc 4C000000 		.4byte	.LFE24
 5514 00d0 00000000 		.4byte	.LFB25
 5515 00d4 2C000000 		.4byte	.LFE25
 5516 00d8 00000000 		.4byte	.LFB32
 5517 00dc 18000000 		.4byte	.LFE32
 5518 00e0 00000000 		.4byte	.LFB33
 5519 00e4 30000000 		.4byte	.LFE33
 5520 00e8 00000000 		.4byte	.LFB34
 5521 00ec 14000000 		.4byte	.LFE34
 5522 00f0 00000000 		.4byte	.LFB8
 5523 00f4 64010000 		.4byte	.LFE8
 5524 00f8 00000000 		.4byte	.LFB9
 5525 00fc 54000000 		.4byte	.LFE9
 5526 0100 00000000 		.4byte	.LFB13
 5527 0104 44000000 		.4byte	.LFE13
 5528 0108 00000000 		.4byte	.LFB35
 5529 010c 4C000000 		.4byte	.LFE35
 5530 0110 00000000 		.4byte	.LFB39
 5531 0114 10000000 		.4byte	.LFE39
 5532 0118 00000000 		.4byte	.LFB40
 5533 011c 10000000 		.4byte	.LFE40
 5534 0120 00000000 		.4byte	.LFB38
 5535 0124 18000000 		.4byte	.LFE38
 5536 0128 00000000 		.4byte	.LFB41
 5537 012c 10000000 		.4byte	.LFE41
 5538 0130 00000000 		.4byte	.LFB42
 5539 0134 10000000 		.4byte	.LFE42
 5540 0138 00000000 		.4byte	.LFB43
 5541 013c 10000000 		.4byte	.LFE43
 5542 0140 00000000 		.4byte	.LFB44
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 156


 5543 0144 10000000 		.4byte	.LFE44
 5544 0148 00000000 		.4byte	.LFB45
 5545 014c 20000000 		.4byte	.LFE45
 5546 0150 00000000 		.4byte	.LFB46
 5547 0154 10000000 		.4byte	.LFE46
 5548 0158 00000000 		.4byte	.LFB47
 5549 015c 10000000 		.4byte	.LFE47
 5550 0160 00000000 		.4byte	.LFB51
 5551 0164 28000000 		.4byte	.LFE51
 5552 0168 00000000 		.4byte	.LFB48
 5553 016c 0C000000 		.4byte	.LFE48
 5554 0170 00000000 		.4byte	.LFB37
 5555 0174 4C000000 		.4byte	.LFE37
 5556 0178 00000000 		.4byte	.LFB36
 5557 017c 20000000 		.4byte	.LFE36
 5558 0180 00000000 		.4byte	.LFB49
 5559 0184 10000000 		.4byte	.LFE49
 5560 0188 00000000 		.4byte	.LFB50
 5561 018c 0C000000 		.4byte	.LFE50
 5562 0190 00000000 		.4byte	.LFB52
 5563 0194 70000000 		.4byte	.LFE52
 5564 0198 00000000 		.4byte	.LFB53
 5565 019c 20000000 		.4byte	.LFE53
 5566 01a0 00000000 		.4byte	.LFB54
 5567 01a4 20000000 		.4byte	.LFE54
 5568 01a8 00000000 		.4byte	.LFB55
 5569 01ac 20000000 		.4byte	.LFE55
 5570 01b0 00000000 		.4byte	.LFB56
 5571 01b4 68000000 		.4byte	.LFE56
 5572 01b8 00000000 		.4byte	0
 5573 01bc 00000000 		.4byte	0
 5574              		.section	.debug_line,"",%progbits
 5575              	.Ldebug_line0:
 5576 0000 4F050000 		.section	.debug_str,"MS",%progbits,1
 5576      02004D00 
 5576      00000201 
 5576      FB0E0D00 
 5576      01010101 
 5577              	.LASF56:
 5578 0000 72616D56 		.ascii	"ramVectorTable\000"
 5578      6563746F 
 5578      72546162 
 5578      6C6500
 5579              	.LASF72:
 5580 000f 62675472 		.ascii	"bgTrim4\000"
 5580      696D3400 
 5581              	.LASF10:
 5582 0017 75696E74 		.ascii	"uint16\000"
 5582      313600
 5583              	.LASF42:
 5584 001e 696E7453 		.ascii	"intState\000"
 5584      74617465 
 5584      00
 5585              	.LASF25:
 5586 0027 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 5586      73436C6B 
 5586      57726974 
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 157


 5586      65486663 
 5586      6C6B4469 
 5587              	.LASF117:
 5588 0040 43795379 		.ascii	"CySysClkPumpConfig\000"
 5588      73436C6B 
 5588      50756D70 
 5588      436F6E66 
 5588      696700
 5589              	.LASF55:
 5590 0053 6F6C6449 		.ascii	"oldIsr\000"
 5590      737200
 5591              	.LASF99:
 5592 005a 72657456 		.ascii	"retVal\000"
 5592      616C00
 5593              	.LASF41:
 5594 0061 43794469 		.ascii	"CyDisableInts\000"
 5594      7361626C 
 5594      65496E74 
 5594      7300
 5595              	.LASF75:
 5596 006f 63757272 		.ascii	"currentImoTrim2Value\000"
 5596      656E7449 
 5596      6D6F5472 
 5596      696D3256 
 5596      616C7565 
 5597              	.LASF7:
 5598 0084 6C6F6E67 		.ascii	"long long unsigned int\000"
 5598      206C6F6E 
 5598      6720756E 
 5598      7369676E 
 5598      65642069 
 5599              	.LASF115:
 5600 009b 43795379 		.ascii	"CySysTickInitVar\000"
 5600      73546963 
 5600      6B496E69 
 5600      74566172 
 5600      00
 5601              	.LASF43:
 5602 00ac 4379456E 		.ascii	"CyEnableInts\000"
 5602      61626C65 
 5602      496E7473 
 5602      00
 5603              	.LASF109:
 5604 00b9 696E7465 		.ascii	"interfaceNumber\000"
 5604      72666163 
 5604      654E756D 
 5604      62657200 
 5605              	.LASF65:
 5606 00c9 4379536F 		.ascii	"CySoftwareReset\000"
 5606      66747761 
 5606      72655265 
 5606      73657400 
 5607              	.LASF83:
 5608 00d9 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 5608      73546963 
 5608      6B456E61 
 5608      626C6549 
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 158


 5608      6E746572 
 5609              	.LASF47:
 5610 00f2 4379496E 		.ascii	"CyIntGetState\000"
 5610      74476574 
 5610      53746174 
 5610      6500
 5611              	.LASF6:
 5612 0100 6C6F6E67 		.ascii	"long long int\000"
 5612      206C6F6E 
 5612      6720696E 
 5612      7400
 5613              	.LASF0:
 5614 010e 7369676E 		.ascii	"signed char\000"
 5614      65642063 
 5614      68617200 
 5615              	.LASF71:
 5616 011a 66726571 		.ascii	"freq\000"
 5616      00
 5617              	.LASF81:
 5618 011f 43794465 		.ascii	"CyDelayFreq\000"
 5618      6C617946 
 5618      72657100 
 5619              	.LASF23:
 5620 012b 696E7465 		.ascii	"interruptState\000"
 5620      72727570 
 5620      74537461 
 5620      746500
 5621              	.LASF88:
 5622 013a 43795379 		.ascii	"CySysTickGetReload\000"
 5622      73546963 
 5622      6B476574 
 5622      52656C6F 
 5622      616400
 5623              	.LASF4:
 5624 014d 6C6F6E67 		.ascii	"long int\000"
 5624      20696E74 
 5624      00
 5625              	.LASF48:
 5626 0156 4379496E 		.ascii	"CyIntDisable\000"
 5626      74446973 
 5626      61626C65 
 5626      00
 5627              	.LASF100:
 5628 0163 43795379 		.ascii	"CySysTickGetCallback\000"
 5628      73546963 
 5628      6B476574 
 5628      43616C6C 
 5628      6261636B 
 5629              	.LASF9:
 5630 0178 75696E74 		.ascii	"uint8\000"
 5630      3800
 5631              	.LASF112:
 5632 017e 63796465 		.ascii	"cydelayFreqKhz\000"
 5632      6C617946 
 5632      7265714B 
 5632      687A00
 5633              	.LASF28:
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 159


 5634 018d 656E6162 		.ascii	"enable\000"
 5634      6C6500
 5635              	.LASF13:
 5636 0194 646F7562 		.ascii	"double\000"
 5636      6C6500
 5637              	.LASF62:
 5638 019b 73686966 		.ascii	"shift\000"
 5638      7400
 5639              	.LASF37:
 5640 01a1 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 5640      734C7664 
 5640      436C6561 
 5640      72496E74 
 5640      65727275 
 5641              	.LASF11:
 5642 01b8 75696E74 		.ascii	"uint32\000"
 5642      333200
 5643              	.LASF34:
 5644 01bf 43795379 		.ascii	"CySysClkEcoReadStatus\000"
 5644      73436C6B 
 5644      45636F52 
 5644      65616453 
 5644      74617475 
 5645              	.LASF44:
 5646 01d5 6D61736B 		.ascii	"mask\000"
 5646      00
 5647              	.LASF33:
 5648 01da 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 5648      73436C6B 
 5648      47657453 
 5648      7973636C 
 5648      6B536F75 
 5649              	.LASF64:
 5650 01f2 4379496E 		.ascii	"CyIntGetPriority\000"
 5650      74476574 
 5650      5072696F 
 5650      72697479 
 5650      00
 5651              	.LASF114:
 5652 0203 63796465 		.ascii	"cydelay32kMs\000"
 5652      6C617933 
 5652      326B4D73 
 5652      00
 5653              	.LASF95:
 5654 0210 43795379 		.ascii	"CySysTickInit\000"
 5654      73546963 
 5654      6B496E69 
 5654      7400
 5655              	.LASF63:
 5656 021e 76616C75 		.ascii	"value\000"
 5656      6500
 5657              	.LASF91:
 5658 0224 636C6F63 		.ascii	"clockSource\000"
 5658      6B536F75 
 5658      72636500 
 5659              	.LASF101:
 5660 0230 43794765 		.ascii	"CyGetUniqueId\000"
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 160


 5660      74556E69 
 5660      71756549 
 5660      6400
 5661              	.LASF93:
 5662 023e 43795379 		.ascii	"CySysTickGetCountFlag\000"
 5662      73546963 
 5662      6B476574 
 5662      436F756E 
 5662      74466C61 
 5663              	.LASF8:
 5664 0254 756E7369 		.ascii	"unsigned int\000"
 5664      676E6564 
 5664      20696E74 
 5664      00
 5665              	.LASF94:
 5666 0261 43795379 		.ascii	"CySysTickClear\000"
 5666      73546963 
 5666      6B436C65 
 5666      617200
 5667              	.LASF5:
 5668 0270 6C6F6E67 		.ascii	"long unsigned int\000"
 5668      20756E73 
 5668      69676E65 
 5668      6420696E 
 5668      7400
 5669              	.LASF87:
 5670 0282 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 5670      734C7664 
 5670      47657449 
 5670      6E746572 
 5670      72757074 
 5671              	.LASF22:
 5672 029d 43795379 		.ascii	"CySysClkImoStop\000"
 5672      73436C6B 
 5672      496D6F53 
 5672      746F7000 
 5673              	.LASF122:
 5674 02ad 4379456E 		.ascii	"CyEnterCriticalSection\000"
 5674      74657243 
 5674      72697469 
 5674      63616C53 
 5674      65637469 
 5675              	.LASF49:
 5676 02c4 4379496E 		.ascii	"CyIntSetPending\000"
 5676      74536574 
 5676      50656E64 
 5676      696E6700 
 5677              	.LASF38:
 5678 02d4 43795379 		.ascii	"CySysGetResetReason\000"
 5678      73476574 
 5678      52657365 
 5678      74526561 
 5678      736F6E00 
 5679              	.LASF120:
 5680 02e8 433A5C55 		.ascii	"C:\\Users\\ROUSSMA\\Documents\\PSoC Creator\\RGB_OL"
 5680      73657273 
 5680      5C524F55 
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 161


 5680      53534D41 
 5680      5C446F63 
 5681 0316 45445C52 		.ascii	"ED\\RGB_OLED.cydsn\000"
 5681      47425F4F 
 5681      4C45442E 
 5681      63796473 
 5681      6E00
 5682              	.LASF105:
 5683 0328 72656754 		.ascii	"regTmp\000"
 5683      6D7000
 5684              	.LASF90:
 5685 032f 43795379 		.ascii	"CySysTickSetClockSource\000"
 5685      73546963 
 5685      6B536574 
 5685      436C6F63 
 5685      6B536F75 
 5686              	.LASF58:
 5687 0347 4379496E 		.ascii	"CyIntSetVector\000"
 5687      74536574 
 5687      56656374 
 5687      6F7200
 5688              	.LASF46:
 5689 0356 6E756D62 		.ascii	"number\000"
 5689      657200
 5690              	.LASF61:
 5691 035d 7072696F 		.ascii	"priority\000"
 5691      72697479 
 5691      00
 5692              	.LASF70:
 5693 0366 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 5693      73436C6B 
 5693      57726974 
 5693      65496D6F 
 5693      46726571 
 5694              	.LASF106:
 5695 037b 43795379 		.ascii	"CySysSetFlashAccessArbPriority\000"
 5695      73536574 
 5695      466C6173 
 5695      68416363 
 5695      65737341 
 5696              	.LASF53:
 5697 039a 4379496E 		.ascii	"CyIntSetSysVector\000"
 5697      74536574 
 5697      53797356 
 5697      6563746F 
 5697      7200
 5698              	.LASF26:
 5699 03ac 43795379 		.ascii	"CySysEnablePumpClock\000"
 5699      73456E61 
 5699      626C6550 
 5699      756D7043 
 5699      6C6F636B 
 5700              	.LASF17:
 5701 03c1 72656733 		.ascii	"reg32\000"
 5701      3200
 5702              	.LASF96:
 5703 03c7 43795379 		.ascii	"CySysTickStart\000"
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 162


 5703      73546963 
 5703      6B537461 
 5703      727400
 5704              	.LASF40:
 5705 03d6 72657475 		.ascii	"returnStatus\000"
 5705      726E5374 
 5705      61747573 
 5705      00
 5706              	.LASF104:
 5707 03e3 736F7572 		.ascii	"source\000"
 5707      636500
 5708              	.LASF19:
 5709 03ea 73697A65 		.ascii	"sizetype\000"
 5709      74797065 
 5709      00
 5710              	.LASF108:
 5711 03f3 43795379 		.ascii	"CySysSetPeripheralAccessArbPriority\000"
 5711      73536574 
 5711      50657269 
 5711      70686572 
 5711      616C4163 
 5712              	.LASF50:
 5713 0417 4379496E 		.ascii	"CyIntClearPending\000"
 5713      74436C65 
 5713      61725065 
 5713      6E64696E 
 5713      6700
 5714              	.LASF54:
 5715 0429 61646472 		.ascii	"address\000"
 5715      65737300 
 5716              	.LASF73:
 5717 0431 62675472 		.ascii	"bgTrim5\000"
 5717      696D3500 
 5718              	.LASF29:
 5719 0439 73797363 		.ascii	"sysclkSource\000"
 5719      6C6B536F 
 5719      75726365 
 5719      00
 5720              	.LASF98:
 5721 0446 66756E63 		.ascii	"function\000"
 5721      74696F6E 
 5721      00
 5722              	.LASF116:
 5723 044f 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 5723      6F467265 
 5723      714D687A 
 5723      32526567 
 5723      00
 5724              	.LASF89:
 5725 0460 43795379 		.ascii	"CySysTickGetValue\000"
 5725      73546963 
 5725      6B476574 
 5725      56616C75 
 5725      6500
 5726              	.LASF118:
 5727 0472 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 5727      4320342E 
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 163


 5727      392E3320 
 5727      32303135 
 5727      30333033 
 5728 04a5 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 5728      20726576 
 5728      6973696F 
 5728      6E203232 
 5728      31323230 
 5729 04d8 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 5729      66756E63 
 5729      74696F6E 
 5729      2D736563 
 5729      74696F6E 
 5730              	.LASF111:
 5731 0500 63796465 		.ascii	"cydelayFreqHz\000"
 5731      6C617946 
 5731      72657148 
 5731      7A00
 5732              	.LASF60:
 5733 050e 4379496E 		.ascii	"CyIntSetPriority\000"
 5733      74536574 
 5733      5072696F 
 5733      72697479 
 5733      00
 5734              	.LASF12:
 5735 051f 666C6F61 		.ascii	"float\000"
 5735      7400
 5736              	.LASF123:
 5737 0525 43794578 		.ascii	"CyExitCriticalSection\000"
 5737      69744372 
 5737      69746963 
 5737      616C5365 
 5737      6374696F 
 5738              	.LASF79:
 5739 053b 43795379 		.ascii	"CySysLvdEnable\000"
 5739      734C7664 
 5739      456E6162 
 5739      6C6500
 5740              	.LASF20:
 5741 054a 63795379 		.ascii	"cySysTickCallback\000"
 5741      73546963 
 5741      6B43616C 
 5741      6C626163 
 5741      6B00
 5742              	.LASF59:
 5743 055c 4379496E 		.ascii	"CyIntGetVector\000"
 5743      74476574 
 5743      56656374 
 5743      6F7200
 5744              	.LASF67:
 5745 056b 6D696C6C 		.ascii	"milliseconds\000"
 5745      69736563 
 5745      6F6E6473 
 5745      00
 5746              	.LASF124:
 5747 0578 43794465 		.ascii	"CyDelayCycles\000"
 5747      6C617943 
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 164


 5747      79636C65 
 5747      7300
 5748              	.LASF16:
 5749 0586 72656738 		.ascii	"reg8\000"
 5749      00
 5750              	.LASF80:
 5751 058b 74687265 		.ascii	"threshold\000"
 5751      73686F6C 
 5751      6400
 5752              	.LASF51:
 5753 0595 43794861 		.ascii	"CyHalt\000"
 5753      6C7400
 5754              	.LASF103:
 5755 059c 43795379 		.ascii	"CySysSetRamAccessArbPriority\000"
 5755      73536574 
 5755      52616D41 
 5755      63636573 
 5755      73417262 
 5756              	.LASF1:
 5757 05b9 756E7369 		.ascii	"unsigned char\000"
 5757      676E6564 
 5757      20636861 
 5757      7200
 5758              	.LASF2:
 5759 05c7 73686F72 		.ascii	"short int\000"
 5759      7420696E 
 5759      7400
 5760              	.LASF45:
 5761 05d1 4379496E 		.ascii	"CyIntEnable\000"
 5761      74456E61 
 5761      626C6500 
 5762              	.LASF57:
 5763 05dd 4379496E 		.ascii	"CyIntGetSysVector\000"
 5763      74476574 
 5763      53797356 
 5763      6563746F 
 5763      7200
 5764              	.LASF27:
 5765 05ef 636C6B53 		.ascii	"clkSelect\000"
 5765      656C6563 
 5765      7400
 5766              	.LASF77:
 5767 05f9 43795379 		.ascii	"CySysClkEcoStart\000"
 5767      73436C6B 
 5767      45636F53 
 5767      74617274 
 5767      00
 5768              	.LASF68:
 5769 060a 43794465 		.ascii	"CyDelayUs\000"
 5769      6C617955 
 5769      7300
 5770              	.LASF39:
 5771 0614 72656173 		.ascii	"reason\000"
 5771      6F6E00
 5772              	.LASF14:
 5773 061b 63686172 		.ascii	"char\000"
 5773      00
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 165


 5774              	.LASF18:
 5775 0620 63796973 		.ascii	"cyisraddress\000"
 5775      72616464 
 5775      72657373 
 5775      00
 5776              	.LASF84:
 5777 062d 43795379 		.ascii	"CySysTickEnable\000"
 5777      73546963 
 5777      6B456E61 
 5777      626C6500 
 5778              	.LASF30:
 5779 063d 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 5779      73436C6B 
 5779      57726974 
 5779      65537973 
 5779      636C6B44 
 5780              	.LASF97:
 5781 0654 43795379 		.ascii	"CySysTickSetCallback\000"
 5781      73546963 
 5781      6B536574 
 5781      43616C6C 
 5781      6261636B 
 5782              	.LASF110:
 5783 0669 43795379 		.ascii	"CySysTickCallbacks\000"
 5783      73546963 
 5783      6B43616C 
 5783      6C626163 
 5783      6B7300
 5784              	.LASF76:
 5785 067c 696D6F54 		.ascii	"imoTrim1Value\000"
 5785      72696D31 
 5785      56616C75 
 5785      6500
 5786              	.LASF102:
 5787 068a 756E6971 		.ascii	"uniqueId\000"
 5787      75654964 
 5787      00
 5788              	.LASF3:
 5789 0693 73686F72 		.ascii	"short unsigned int\000"
 5789      7420756E 
 5789      7369676E 
 5789      65642069 
 5789      6E7400
 5790              	.LASF66:
 5791 06a6 43794465 		.ascii	"CyDelay\000"
 5791      6C617900 
 5792              	.LASF92:
 5793 06ae 43795379 		.ascii	"CySysTickGetClockSource\000"
 5793      73546963 
 5793      6B476574 
 5793      436C6F63 
 5793      6B536F75 
 5794              	.LASF85:
 5795 06c6 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 5795      73546963 
 5795      6B446973 
 5795      61626C65 
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 166


 5795      496E7465 
 5796              	.LASF36:
 5797 06e0 43795379 		.ascii	"CySysLvdDisable\000"
 5797      734C7664 
 5797      44697361 
 5797      626C6500 
 5798              	.LASF113:
 5799 06f0 63796465 		.ascii	"cydelayFreqMhz\000"
 5799      6C617946 
 5799      7265714D 
 5799      687A00
 5800              	.LASF32:
 5801 06ff 43795379 		.ascii	"CySysClkEcoStop\000"
 5801      73436C6B 
 5801      45636F53 
 5801      746F7000 
 5802              	.LASF107:
 5803 070f 43795379 		.ascii	"CySysSetDmacAccessArbPriority\000"
 5803      73536574 
 5803      446D6163 
 5803      41636365 
 5803      73734172 
 5804              	.LASF82:
 5805 072d 43795379 		.ascii	"CySysTickStop\000"
 5805      73546963 
 5805      6B53746F 
 5805      7000
 5806              	.LASF78:
 5807 073b 74696D65 		.ascii	"timeoutUs\000"
 5807      6F757455 
 5807      7300
 5808              	.LASF31:
 5809 0745 64697669 		.ascii	"divider\000"
 5809      64657200 
 5810              	.LASF52:
 5811 074d 43795379 		.ascii	"CySysClkWriteEcoDiv\000"
 5811      73436C6B 
 5811      57726974 
 5811      6545636F 
 5811      44697600 
 5812              	.LASF15:
 5813 0761 63797374 		.ascii	"cystatus\000"
 5813      61747573 
 5813      00
 5814              	.LASF21:
 5815 076a 43795379 		.ascii	"CySysClkImoStart\000"
 5815      73436C6B 
 5815      496D6F53 
 5815      74617274 
 5815      00
 5816              	.LASF74:
 5817 077b 6E657749 		.ascii	"newImoTrim2Value\000"
 5817      6D6F5472 
 5817      696D3256 
 5817      616C7565 
 5817      00
 5818              	.LASF119:
ARM GAS  C:\Users\ROUSSMA\AppData\Local\Temp\ccdzfSpw.s 			page 167


 5819 078c 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 5819      72617465 
 5819      645F536F 
 5819      75726365 
 5819      5C50536F 
 5820              	.LASF69:
 5821 07ab 6D696372 		.ascii	"microseconds\000"
 5821      6F736563 
 5821      6F6E6473 
 5821      00
 5822              	.LASF24:
 5823 07b8 746D7052 		.ascii	"tmpReg\000"
 5823      656700
 5824              	.LASF86:
 5825 07bf 43795379 		.ascii	"CySysTickSetReload\000"
 5825      73546963 
 5825      6B536574 
 5825      52656C6F 
 5825      616400
 5826              	.LASF121:
 5827 07d2 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 5827      73546963 
 5827      6B536572 
 5827      76696365 
 5827      43616C6C 
 5828              	.LASF35:
 5829 07ec 72657475 		.ascii	"returnValue\000"
 5829      726E5661 
 5829      6C756500 
 5830              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
